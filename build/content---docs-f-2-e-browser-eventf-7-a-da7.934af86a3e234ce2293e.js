(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{137:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",function(){return i}),t.d(a,"rightToc",function(){return r}),t.d(a,"default",function(){return m});t(0);var n=t(229);function l(){return(l=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function b(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},b=Object.keys(e);for(n=0;n<b.length;n++)t=b[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)t=b[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var i={title:"浏览器事件机制",sidebar_label:"事件机制"},r=[{value:"事件绑定",id:"事件绑定",children:[{value:"创建与触发自定义事件",id:"创建与触发自定义事件",children:[]}]},{value:"事件传播",id:"事件传播",children:[]},{value:"阻止事件传播",id:"阻止事件传播",children:[]},{value:"阻止默认事件",id:"阻止默认事件",children:[]},{value:"事件代理",id:"事件代理",children:[]},{value:"鼠标事件",id:"鼠标事件",children:[{value:"MouseEvent接口",id:"mouseevent接口",children:[]},{value:"WheelEvent 接口",id:"wheelevent-接口",children:[]},{value:"键盘事件",id:"键盘事件",children:[]},{value:"进度事件",id:"进度事件",children:[]},{value:"表单事件",id:"表单事件",children:[]},{value:"触摸事件",id:"触摸事件",children:[]},{value:"拖拉事件",id:"拖拉事件",children:[]},{value:"其它常见事件",id:"其它常见事件",children:[]}]},{value:"参考资料",id:"参考资料",children:[]}],c={rightToc:r},d="wrapper";function m(e){var a=e.components,t=b(e,["components"]);return Object(n.b)(d,l({},c,t,{components:a,mdxType:"MDXLayout"}),Object(n.b)("h2",null,Object(n.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"事件绑定"})),Object(n.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#事件绑定"}),"#"),"事件绑定"),Object(n.b)("p",null,"与事件绑定相关的方法有："),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"addEventListener()"))),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"addEventListener()"),"方法的第三个参数还可以是一个对象，它可以使用如下属性：\n- capture\n- once\n- passive"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"removeEventListener()")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dispatchEvent()"))),Object(n.b)("h3",null,Object(n.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"创建与触发自定义事件"})),Object(n.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#创建与触发自定义事件"}),"#"),"创建与触发自定义事件"),Object(n.b)("p",null,"自定义事件的创建触发流程如下："),Object(n.b)("pre",null,Object(n.b)("code",l({parentName:"pre"},{className:"language-js"}),"var event = new Event('build')\nelement.addEventListener('build', (e)=>{}, false)\nelement.dispatch(event)\n")),Object(n.b)("p",null,"上面例子，创建了一个 build 事件，然后给 element 元素注册 build 事件函数，最后使用 dispatch 触发。"),Object(n.b)("p",null,"如果需要在事件函数中传递数据，则需要使用 CustomEvent 的 detail 属性。"),Object(n.b)("pre",null,Object(n.b)("code",l({parentName:"pre"},{className:"language-js"}),"var event = new CustomEvent('build', {detail: element.dataset.time})\nfunction eventHandler(e){\n    console.log(e.detail)\n}\n")),Object(n.b)("p",null,"下面这个例子，可以将子元素事件冒泡给父级，并传递数据。"),Object(n.b)("pre",null,Object(n.b)("code",l({parentName:"pre"},{className:"language-js"}),"// html 结构\n// <form>\n//   <textarea></textarea>\n// </form>\n\nconst form = document.querySelector('form');\nconst textarea = document.querySelector('textarea');\n\n// 创建事件，允许冒泡，并传递数据\nconst eventAwesome = new CustomEvent('awesome', {\n  bubbles: true,\n  detail: { text: () => textarea.value }\n});\n\nform.addEventListener('awesome', e => console.log(e.detail.text()));\n\ntextarea.addEventListener('input', e => e.target.dispatchEvent(eventAwesome));\n// 或使用 function this\n// textarea.addEventListener('input', function(e){\n//     this.dispatchEvent(new CustomEvent('awesome', { \n//         bubbles: true, detail: { text: () => textarea.value } \n//     }))\n// });\n")),Object(n.b)("h2",null,Object(n.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"事件传播"})),Object(n.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#事件传播"}),"#"),"事件传播"),Object(n.b)("p",null,"事件的传播分为三个阶段：捕获(从 window 到目标元素)、到达目标元素、冒泡(从目标元素到 window)。"),Object(n.b)("p",null,"要注意的是，给目标元素同时绑定捕获或冒泡事件，会按照绑定的顺序执行。"),Object(n.b)("pre",null,Object(n.b)("code",l({parentName:"pre"},{className:"language-js"}),"target.addEventListener('click', e => console.log(\"冒泡\") , false)\ntarget.addEventListener('click', e => console.log(\"捕获\") , true)\n")),Object(n.b)("p",null,"上面代码，点击 target，将依次输出",Object(n.b)("inlineCode",{parentName:"p"},"冒泡"),"、",Object(n.b)("inlineCode",{parentName:"p"},"捕获"),"。"),Object(n.b)("h2",null,Object(n.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"阻止事件传播"})),Object(n.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#阻止事件传播"}),"#"),"阻止事件传播"),Object(n.b)("h2",null,Object(n.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"阻止默认事件"})),Object(n.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#阻止默认事件"}),"#"),"阻止默认事件"),Object(n.b)("h2",null,Object(n.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"事件代理"})),Object(n.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#事件代理"}),"#"),"事件代理"),Object(n.b)("p",null,"事件代理是将本来绑定到子节点的事件，绑定到上级元素上。好处是："),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"新增子节点时，无需再重新绑定事件"),Object(n.b)("li",{parentName:"ul"},"节省内存")),Object(n.b)("h2",null,Object(n.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"鼠标事件"})),Object(n.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#鼠标事件"}),"#"),"鼠标事件"),Object(n.b)("h3",null,Object(n.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"mouseevent接口"})),Object(n.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#mouseevent接口"}),"#"),"MouseEvent接口"),Object(n.b)("p",null,"鼠标事件继承自",Object(n.b)("inlineCode",{parentName:"p"},"MouseEvent"),"接口，具体事件主要有："),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"click"),": 点击鼠标主键时触发。鼠标点击时，事件触发顺序是",Object(n.b)("inlineCode",{parentName:"li"},"mousedown"),"->",Object(n.b)("inlineCode",{parentName:"li"},"mouseup"),"->",Object(n.b)("inlineCode",{parentName:"li"},"click"),"。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"dblclick"),": 双击鼠标时触发。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"mousedown"),": 鼠标键按下时触发。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"mouseup"),": 鼠标键抬起时触发。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"mousemove"),": 鼠标移动时触发。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"mouseenter"),": 鼠标移动进入节点时触发，进入子节点不会触发。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"mouseleave"),": 鼠标离开节点时触发"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"mouseover"),": 鼠标进入节点时触发，进入子节点会再次触发。（记忆方法，over、out，两个o是一对）。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"mouseout"),": 鼠标离开节点时触发，离开子节点会再次触发。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"contextmenu"),"：鼠标右键时触发。或按下上下文菜单键时触发。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"wheel"),": 滚动鼠标的滚轮时触发，该事件继承自",Object(n.b)("inlineCode",{parentName:"li"},"WheelEvent"),"接口。")),Object(n.b)("p",null,"鼠标事件对象，是",Object(n.b)("inlineCode",{parentName:"p"},"MouseEvent"),"的实例。它的主要属性如下："),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"altKey")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"ctrlKey")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"metaKey"),": meta 键是否按下(mac 是 command 键，windows 是 windows 键)。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"shiftKey")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"button"),": 表示鼠标按下的哪个键，0是主键，或事件没有初始化这个属性(如 mousemove)，1是辅助键(中键或滚轮键)，2是次键。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"buttons"),": 返回三个 bit 的值，表示同时按下了哪些键。1(",Object(n.b)("inlineCode",{parentName:"li"},"001"),")表示按下左键，2(",Object(n.b)("inlineCode",{parentName:"li"},"010"),")表示按下右键，4(",Object(n.b)("inlineCode",{parentName:"li"},"100"),")表示按下中键或滚轮键。所以 3(",Object(n.b)("inlineCode",{parentName:"li"},"011"),")表示同时按下左键和右键。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"clientX"),"、",Object(n.b)("inlineCode",{parentName:"li"},"clientY"),": 鼠标举例浏览器窗口左上角的位置，单位是像素。它们还有别名",Object(n.b)("inlineCode",{parentName:"li"},"x"),"、",Object(n.b)("inlineCode",{parentName:"li"},"y"),"。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"movementX"),"、",Object(n.b)("inlineCode",{parentName:"li"},"movementY"),": 返回当前位置与上一个",Object(n.b)("inlineCode",{parentName:"li"},"mousemove"),"事件的距离。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"screenX"),"、",Object(n.b)("inlineCode",{parentName:"li"},"screenY"),": 返回鼠标相对于屏幕左上角的位置。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"offsetX"),"、",Object(n.b)("inlineCode",{parentName:"li"},"offsetY"),": 返回鼠标与目标节点左上角的 padding 外边缘的距离(包括 padding)。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"pageX"),"、",Object(n.b)("inlineCode",{parentName:"li"},"pageY"),": 返回鼠标与文档的距离，即包括滚动条。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"relatedTarget"),": 返回事件的相关节点。对于没有相关节点的事件，该属性返回 null。个人理解为副相关节点。具体如下。")),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",l({parentName:"tr"},{align:null}),"事件名"),Object(n.b)("th",l({parentName:"tr"},{align:null}),"target"),Object(n.b)("th",l({parentName:"tr"},{align:null}),"relatedTarget"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",l({parentName:"tr"},{align:null}),"focusin"),Object(n.b)("td",l({parentName:"tr"},{align:null}),"获得焦点的元素"),Object(n.b)("td",l({parentName:"tr"},{align:null}),"失去焦点的元素")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",l({parentName:"tr"},{align:null}),"focusout"),Object(n.b)("td",l({parentName:"tr"},{align:null}),"失去焦点的元素"),Object(n.b)("td",l({parentName:"tr"},{align:null}),"获得焦点的元素")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",l({parentName:"tr"},{align:null}),"mouseenter"),Object(n.b)("td",l({parentName:"tr"},{align:null}),"将要进入的元素"),Object(n.b)("td",l({parentName:"tr"},{align:null}),"将要离开的元素")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",l({parentName:"tr"},{align:null}),"mouseleave"),Object(n.b)("td",l({parentName:"tr"},{align:null}),"将要离开的元素"),Object(n.b)("td",l({parentName:"tr"},{align:null}),"将要进入的元素")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",l({parentName:"tr"},{align:null}),"mouseover"),Object(n.b)("td",l({parentName:"tr"},{align:null}),"将要进入的元素"),Object(n.b)("td",l({parentName:"tr"},{align:null}),"将要离开的元素")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",l({parentName:"tr"},{align:null}),"mouseout"),Object(n.b)("td",l({parentName:"tr"},{align:null}),"将要离开的元素"),Object(n.b)("td",l({parentName:"tr"},{align:null}),"将要进入的元素")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",l({parentName:"tr"},{align:null}),"dragenter"),Object(n.b)("td",l({parentName:"tr"},{align:null}),"将要进入的元素"),Object(n.b)("td",l({parentName:"tr"},{align:null}),"将要离开的元素")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",l({parentName:"tr"},{align:null}),"dragexit"),Object(n.b)("td",l({parentName:"tr"},{align:null}),"将要离开的元素"),Object(n.b)("td",l({parentName:"tr"},{align:null}),"将要进入的元素")))),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"getModifierState()"),": 返回有没有按下特定的功能键，参数是一个",Object(n.b)("a",l({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/getModifierState#Modifier_keys_on_Gecko"}),"功能键字符串"),"。")),Object(n.b)("pre",null,Object(n.b)("code",l({parentName:"pre"},{className:"language-js"}),"document.addEventListener('click', function (e) {\n    // 是否按下大写键\n    console.log(e.getModifierState('CapsLock'));\n}, false);\n")),Object(n.b)("h3",null,Object(n.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"wheelevent-接口"})),Object(n.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#wheelevent-接口"}),"#"),"WheelEvent 接口"),Object(n.b)("p",null,"WheelEvent 接口继承了 MouseEvent 实例，代表鼠标滚轮事件的实例对象。鼠标滚轮事件目前只有一个",Object(n.b)("inlineCode",{parentName:"p"},"wheel"),"事件。"),Object(n.b)("p",null,"浏览器原生提供了",Object(n.b)("inlineCode",{parentName:"p"},"WheelEvent()"),"构造函数，用来生成",Object(n.b)("inlineCode",{parentName:"p"},"WheelEvent"),"实例。"),Object(n.b)("pre",null,Object(n.b)("code",l({parentName:"pre"},{className:"language-js"}),"var wheelEvent = new WheelEvent(type, options)\n")),Object(n.b)("p",null,"type 是事件类型，目前只能是",Object(n.b)("inlineCode",{parentName:"p"},"wheel"),"。第二个参数是事件配置对象，它有下面属性。"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"deltaX"),": 数值，表示滚轮的水平滚动量，默认是0.0。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"deltaY"),": 数值，表示滚轮的垂直滚动量，默认是0.0。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"deltaZ"),": 数值，表示滚轮的Z轴滚动量，默认是0.0。"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"deltaMode"),": 数值，表示相关的滚轮事件的单位，适用于上面三个属性。",Object(n.b)("inlineCode",{parentName:"li"},"0"),"表示单位是像素，",Object(n.b)("inlineCode",{parentName:"li"},"1"),"表示单位是行，",Object(n.b)("inlineCode",{parentName:"li"},"2"),"表示单位是页，默认是",Object(n.b)("inlineCode",{parentName:"li"},"0"),"。")),Object(n.b)("h3",null,Object(n.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"键盘事件"})),Object(n.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#键盘事件"}),"#"),"键盘事件"),Object(n.b)("h3",null,Object(n.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"进度事件"})),Object(n.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#进度事件"}),"#"),"进度事件"),Object(n.b)("h3",null,Object(n.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"表单事件"})),Object(n.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#表单事件"}),"#"),"表单事件"),Object(n.b)("h3",null,Object(n.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"触摸事件"})),Object(n.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#触摸事件"}),"#"),"触摸事件"),Object(n.b)("h3",null,Object(n.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"拖拉事件"})),Object(n.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#拖拉事件"}),"#"),"拖拉事件"),Object(n.b)("h3",null,Object(n.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"其它常见事件"})),Object(n.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#其它常见事件"}),"#"),"其它常见事件"),Object(n.b)("h3",{id:""}),Object(n.b)("h2",null,Object(n.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"参考资料"})),Object(n.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#参考资料"}),"#"),"参考资料"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",l({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/Guide/Events"})))))}m.isMDXComponent=!0},229:function(e,a,t){"use strict";t.d(a,"a",function(){return r}),t.d(a,"b",function(){return p});var n=t(0),l=t.n(n),b=l.a.createContext({}),i=function(e){var a=l.a.useContext(b),t=a;return e&&(t="function"==typeof e?e(a):Object.assign({},a,e)),t},r=function(e){var a=i(e.components);return l.a.createElement(b.Provider,{value:a},e.children)};var c="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return l.a.createElement(l.a.Fragment,{},a)}},m=function(e){var a=e.components,t=e.mdxType,n=e.originalType,b=e.parentName,r=function(e,a){var t={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&-1===a.indexOf(n)&&(t[n]=e[n]);return t}(e,["components","mdxType","originalType","parentName"]),c=i(a),m=t,p=c[b+"."+m]||c[m]||d[m]||n;return a?l.a.createElement(p,Object.assign({},r,{components:a})):l.a.createElement(p,r)};function p(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var b=t.length,i=new Array(b);i[0]=m;var r={};for(var d in a)hasOwnProperty.call(a,d)&&(r[d]=a[d]);r.originalType=e,r[c]="string"==typeof e?e:n,i[1]=r;for(var p=2;p<b;p++)i[p]=t[p];return l.a.createElement.apply(null,i)}return l.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);
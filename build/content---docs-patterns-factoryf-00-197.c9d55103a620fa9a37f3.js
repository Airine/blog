(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{123:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",function(){return o}),t.d(n,"rightToc",function(){return l}),t.d(n,"default",function(){return i});t(0);var r=t(283);function a(){return(a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o={title:"javascript 工厂模式",sidebar_label:"工厂模式"},l=[],p={rightToc:l},u="wrapper";function i(e){var n=e.components,t=c(e,["components"]);return Object(r.b)(u,a({},p,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"工厂模式是一个创建型模式，它将创建者和构造函数分离，把创建对象的操作(new)封装在工厂类中，让上层只需要使用工厂的方法来创建对象，不用关心工厂中产品的实现。"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"代码示例")),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-javascript"}),"class Product{\n    constructor(name){\n        this.name = name\n    }\n    init(){}\n}\n\nclass Creator{\n    create(name){\n        return new Product(name)\n    }\n}\n\nlet creator = new Creator()\nlet p = creator.create('p1')\np.init()\n")),Object(r.b)("p",null,"上面的代码可以看到，我们调用工厂creator的create方法就可以创建产品，如果产品有变化，比如产品停产或换产品了，只需要在工厂类内部处理，无需修改上层代码。"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"场景")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"1、jquery实例的创建就是工厂模式")),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-javascript"}),"window.$ = function(selector) {\n  return new jQuery(selector)\n}\n")),Object(r.b)("p",null,"这样我们只需要使用",Object(r.b)("inlineCode",{parentName:"p"},"$()"),"即可，如果使用",Object(r.b)("inlineCode",{parentName:"p"},"new $()"),"书写起来麻烦，而且链式调用会很繁杂(以为都需要写 new)。另外如果jQuery名称修改为了zQuery，那么上层代码都需要修改。"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"2、React.createElement也是工厂模式")),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-javascript"}),'React.createElement("div", null, {})\n\nReact.createElement = function(tag, attrs, children) {\n   return new Vnode(tag, attrs, children)\n}\n')),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"[javascript设计模式(2): 抽象工厂模式]")))}i.isMDXComponent=!0},283:function(e,n,t){"use strict";t.d(n,"a",function(){return l}),t.d(n,"b",function(){return b});var r=t(0),a=t.n(r),c=a.a.createContext({}),o=function(e){var n=a.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},l=function(e){var n=o(e.components);return a.a.createElement(c.Provider,{value:n},e.children)};var p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},i=function(e){var n=e.components,t=e.mdxType,r=e.originalType,c=e.parentName,l=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===n.indexOf(r)&&(t[r]=e[r]);return t}(e,["components","mdxType","originalType","parentName"]),p=o(n),i=t,b=p[c+"."+i]||p[i]||u[i]||r;return n?a.a.createElement(b,Object.assign({},l,{components:n})):a.a.createElement(b,l)};function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=t.length,o=new Array(c);o[0]=i;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var b=2;b<c;b++)o[b]=t[b];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}i.displayName="MDXCreateElement"}}]);
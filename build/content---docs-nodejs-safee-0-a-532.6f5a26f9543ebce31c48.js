(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{251:function(e,t,n){"use strict";n.d(t,"a",function(){return b}),n.d(t,"b",function(){return u});var r=n(0),l=n.n(r),a=l.a.createContext({}),c=function(e){var t=l.a.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},b=function(e){var t=c(e.components);return l.a.createElement(a.Provider,{value:t},e.children)};var p="mdxType",i={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},o=function(e){var t=e.components,n=e.mdxType,r=e.originalType,a=e.parentName,b=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}(e,["components","mdxType","originalType","parentName"]),p=c(t),o=n,u=p[a+"."+o]||p[o]||i[o]||r;return t?l.a.createElement(u,Object.assign({},b,{components:t})):l.a.createElement(u,b)};function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=o;var b={};for(var i in t)hasOwnProperty.call(t,i)&&(b[i]=t[i]);b.originalType=e,b[p]="string"==typeof e?e:r,c[1]=b;for(var u=2;u<a;u++)c[u]=n[u];return l.a.createElement.apply(null,c)}return l.a.createElement.apply(null,n)}o.displayName="MDXCreateElement"},72:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",function(){return c}),n.d(t,"rightToc",function(){return b}),n.d(t,"default",function(){return o});n(0);var r=n(251);function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function a(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c={title:"NodeJS 安全",sidebar_label:"安全"},b=[{value:"安全",id:"安全",children:[{value:"Crypto(加密)",id:"crypto加密",children:[]},{value:"TLS/SSL",id:"tlsssl",children:[]},{value:"Https",id:"https",children:[]}]}],p={rightToc:b},i="wrapper";function o(e){var t=e.components,n=a(e,["components"]);return Object(r.b)(i,l({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"安全"},"安全"),Object(r.b)("p",null,"安全方面的知识涉及到："),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Crypto(加密)"),Object(r.b)("li",{parentName:"ul"},"TLS/SSL"),Object(r.b)("li",{parentName:"ul"},"HTTPS"),Object(r.b)("li",{parentName:"ul"},"XSS"),Object(r.b)("li",{parentName:"ul"},"CSRF"),Object(r.b)("li",{parentName:"ul"},"中间人攻击"),Object(r.b)("li",{parentName:"ul"},"Sql/Nosql 注入攻击")),Object(r.b)("p",null,"关于 XSS、CSRF、HTTPS、Sql/Nosql 注入攻击查看之前的",Object(r.b)("a",l({parentName:"p"},{href:"/note/web-safe/index"}),"web安全知识总结与实践"),"。这里只记录一些与 nodejs 相关的知识。"),Object(r.b)("h3",{id:"crypto加密"},"Crypto(加密)"),Object(r.b)("p",null,"Node.js 的 crypto 模块封装了诸多的加密功能, 包括 OpenSSL 的哈希、HMAC、加密、解密、签名和验证函数等。"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Openssl 是一个开源软件包，用于进行安全通信、避免窃听，同时确认另一端连接者的身份。")),Object(r.b)("p",null,"什么是哈希算法？"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"openssl list-message-digest-algorithms"),"可以查看 OpenSSl 支持的哈希算法。"),Object(r.b)("p",null,"最常用的哈希算法是 SHA-256，较老的 SHA-1 或 MD5 不再安全，不应使用。"),Object(r.b)("p",null,"单向的加密"),Object(r.b)("p",null,"如何使用"),Object(r.b)("pre",null,Object(r.b)("code",l({parentName:"pre"},{className:"language-js"}),'require("crypto")\n  .createHash("sha256")\n  .update("Man oh man do I love node!")\n  .digest("hex");\n')),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"update")," 方法用于将数据送给哈希算法，digest 用于转成 hash值。update 可以调用多次，就像数据流放进缓冲区。digest 参数是输出的格式，默认是 binary，可选 hex、base64。"),Object(r.b)("p",null,"HMAC"),Object(r.b)("p",null,"HMAC 可以用哈希算法将密钥和数据合并转换成一个结果"),Object(r.b)("p",null,"Ciphers  (暗号)英","[ˈsaɪfəz]","\nCiphers可以通过一个密码对信息编码和解码。它也是基于 Openssl的，通过下面命令查看支持的列表。"),Object(r.b)("pre",null,Object(r.b)("code",l({parentName:"pre"},{}),"openssl list-cipher-commands\n")),Object(r.b)("p",null,"常用的是 AES_256  AES256\tkey 32字节（256位）\tiv 16字节（128位）"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"crypto.createCipheriv(algorithm, key, iv)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"crypto.createDecipheriv(algorithm, key, iv)"))),Object(r.b)("p",null,"每次调用update时会返回结果。通过 final() 获取最终的结果。"),Object(r.b)("p",null,"iv 叫初始化向量 initialization vector，它是不可预测的唯一的，通常用随机数。随机化对实现语义安全性的加密方案很重要，iv 要在相同密钥下使用，防止攻击者推断加密消息段之间的关系。"),Object(r.b)("p",null,"签名和验证"),Object(r.b)("p",null,"Crypto还有其他用于处理证书和凭证的方法，用于TLS："),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"crypto.createCredentials()")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"crypto.createSign()")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"crypto.createVerify()"))),Object(r.b)("p",null,"这些方法为完整的加密协议提供了最后的构建块，并且需要有关真实加密协议的高级知识才有用。同样，建议开发人员使用tls模块或https模块（如果适用）。"),Object(r.b)("h3",{id:"tlsssl"},"TLS/SSL"),Object(r.b)("p",null,"为了传输的安全，网景公司设计了 SSL(Secure Socket Layer)，SSL 的用途是："),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"认证用户和服务器，确保数据发送到正确的客户机和服务器；服务器和客户端都会被认证，客户端认证是可选的"),Object(r.b)("li",{parentName:"ol"},"加密数据防止中途被窃听；数据被密钥加密。"),Object(r.b)("li",{parentName:"ol"},"维护数据完整性，确保数据在传输过程中不被改变。会对数据进行完整性检查。")),Object(r.b)("p",null,"1999 年， SSL 因为应用广泛，IETF 将它标准化后改名为传输层安全协议(Transport Layer Security, TLS)，很多地方叫 TLS/SSL，实际它是同一个东西的不同阶段叫法。"),Object(r.b)("h3",{id:"https"},"Https"))}o.isMDXComponent=!0}}]);
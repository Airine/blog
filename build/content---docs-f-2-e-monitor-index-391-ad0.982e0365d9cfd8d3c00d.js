(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{170:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",function(){return c}),n.d(t,"rightToc",function(){return i}),n.d(t,"default",function(){return p});n(0);var a=n(245);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c={title:"前端监控"},i=[{value:"domReady",id:"domready",children:[]},{value:"简介",id:"简介",children:[]},{value:"监控哪些数据",id:"监控哪些数据",children:[]},{value:"技术监控",id:"技术监控",children:[{value:"错误监控",id:"错误监控",children:[]},{value:"接口性能监控",id:"接口性能监控",children:[]}]},{value:"行为监控",id:"行为监控",children:[{value:"用户行为路径",id:"用户行为路径",children:[]},{value:"打点监控",id:"打点监控",children:[]},{value:"大量log上报策略",id:"大量log上报策略",children:[]},{value:"时效策略",id:"时效策略",children:[]}]},{value:"技术监控",id:"技术监控-1",children:[{value:"页面性能监控",id:"页面性能监控",children:[]}]},{value:"参考资料",id:"参考资料",children:[]}],b={rightToc:i},o="wrapper";function p(e){var t=e.components,n=l(e,["components"]);return Object(a.b)(o,r({},b,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"domready"},"domReady"),Object(a.b)("p",null,"domReady 实际是 DOM 加载完成，图片等链接资源正在加载中。onload 表示资源都已经加载完毕，如果有资源错误，则会阻塞延迟 onload 的执行。"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"如何判断domReady")),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"document.readyState 有三个状态：",Object(a.b)("inlineCode",{parentName:"li"},"loading/正在加载"),"、",Object(a.b)("inlineCode",{parentName:"li"},"interactive/可交互,图片、框架资源正在加载"),"、",Object(a.b)("inlineCode",{parentName:"li"},"complete/完成"),"。当这个属性值变化时，会触发",Object(a.b)("inlineCode",{parentName:"li"},"readystatechange"),"事件。"),Object(a.b)("li",{parentName:"ol"},"document 的 DOMContentLoaded 事件")),Object(a.b)("h2",{id:"简介"},"简介"),Object(a.b)("h2",{id:"监控哪些数据"},"监控哪些数据"),Object(a.b)("p",null,"访问：\n- pv/uv\n- 流量来源\n- 操作系统\n- 浏览器\n- 分辨率\n- 登录率\n- 地域分布\n- 网络类型\n- 访问时段\n- 停留时间\n- 到达深度\n- 访问路径"),Object(a.b)("p",null,"性能\n- 白屏时间\n- 首屏时间\n- 用户可操作时间\n- 页面总下载时间\n- 自定义的时间(开发者关注的)"),Object(a.b)("p",null,"点击\n- 页面总点击量\n- 人均点击量\n- 流出 url\n- 点击时间\n- 首次点击时间\n- 点击热力图"),Object(a.b)("p",null,"异常\n- 异常提示信息\n- js 文件名称\n- 异常所在行\n- 发生异常的浏览器\n- 堆栈信息(可能需要截取)"),Object(a.b)("p",null,"其它\n- 对特殊功能的支持程度(canvas)\n- 轮播图的翻页次数"),Object(a.b)("h2",{id:"技术监控"},"技术监控"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"页面性能监控"),Object(a.b)("li",{parentName:"ul"},"静态资源性能监控")),Object(a.b)("h3",{id:"错误监控"},"错误监控"),Object(a.b)("p",null,"对于跨域的代码运行错误会显示 Script error. 对于这种情况我们需要给 script 标签添加 crossorigin 属性\n对于某些浏览器可能不会显示调用栈信息，这种情况可以通过 arguments.callee.caller 来做栈递归"),Object(a.b)("p",null,"但是要注意线上运行的代码都是压缩过的，需要在打包时生成 sourceMap 文件便于 debug。"),Object(a.b)("p",null,"另外接口异常就相对来说简单了，可以列举出出错的状态码。一旦出现此类的状态码就可以立即上报出错。接口异常上报可以让开发人员迅速知道有哪些接口出现了大面积的报错，以便迅速修复问题。"),Object(a.b)("h3",{id:"接口性能监控"},"接口性能监控"),Object(a.b)("h2",{id:"行为监控"},"行为监控"),Object(a.b)("h3",{id:"用户行为路径"},"用户行为路径"),Object(a.b)("h3",{id:"打点监控"},"打点监控"),Object(a.b)("p",null,"一般监控 pv/uv 停留时长  流量来源 用户交互"),Object(a.b)("p",null,"监控访问的思路是："),Object(a.b)("p",null,"手写埋点: 手动插入代码，灵活，但是工作量大。\n无埋点：统计所有事件，定时上报，简单，但是后期需要过滤所需的数据。"),Object(a.b)("h3",{id:"大量log上报策略"},"大量log上报策略"),Object(a.b)("p",null,"有2个策略:\n1. 前端根据配置文件，根据 random 抽取百分比上传\n2. 全部上传给后端，后端忽略掉一些"),Object(a.b)("h3",{id:"时效策略"},"时效策略"),Object(a.b)("h2",{id:"技术监控-1"},"技术监控"),Object(a.b)("h3",{id:"页面性能监控"},"页面性能监控"),Object(a.b)("p",null,"页面性能监控主要是使用 performance API。",Object(a.b)("inlineCode",{parentName:"p"},"performance.timing"),"对象包含页面在各个阶段的时间。"),Object(a.b)("p",null,Object(a.b)("img",r({parentName:"p"},{src:"/img/performance/1.png",alt:null}))),Object(a.b)("p",null,"具体属性如下："),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"navigationStart：当前浏览器窗口的前一个网页关闭，发生unload事件时的时间。如果没有上一个\b页面，这个值会和 fetchStart 相同。通常我们也\b理解为准备加载新页面的起始时间。"),Object(a.b)("li",{parentName:"ul"},"redirectStart：到当前页面的重定向开始的时间。当重定向的页面来自同一个域时这个属性才会有值，否则值为0。"),Object(a.b)("li",{parentName:"ul"},"redirectEnd：到当前页面的重定向结束的时间。当重定向的页面来自同一个域时这个属性才会有值，否则值为0。"),Object(a.b)("li",{parentName:"ul"},"fetchStart：准备使用HTTP请求(fetch)页面的时间。"),Object(a.b)("li",{parentName:"ul"},"domainLookupStart：域名查询开始的时间。"),Object(a.b)("li",{parentName:"ul"},"domainLookupEnd：域名查询结束的时间。"),Object(a.b)("li",{parentName:"ul"},"connectStart：返回HTTP请求开始向服务器发送的时间,如果使用持久连接（persistent connection），则返回值等同于 fetchStart 的值。"),Object(a.b)("li",{parentName:"ul"},"(secureConnectionStart)：可选特性。如果页面是HTTPS协议，则返回开始SSL握手的那个时间。如果当前网页不要求安全连接，则返回0。"),Object(a.b)("li",{parentName:"ul"},"connectEnd：返回浏览器与服务器之间的连接建立的时间。如果建立的是持久连接，则返回值等同于 fetchStart 属性的值。连接建立指的是所有握手和认证过程全部结束。"),Object(a.b)("li",{parentName:"ul"},"requestStart：返回浏览器向服务器发出HTTP请求时（或开始读取本地缓存时）的时间。"),Object(a.b)("li",{parentName:"ul"},"responseStart：返回浏览器从服务器收到（或从本地缓存读取）第一个字节时的时间。"),Object(a.b)("li",{parentName:"ul"},"responseEnd：返回浏览器从服务器收到（或从本地缓存读取）最后一个字节时的时间。"),Object(a.b)("li",{parentName:"ul"},"unloadEventStart：返回同一个域名前一个网页的 unload 事件触发时的时间。否则返回值为0。"),Object(a.b)("li",{parentName:"ul"},"unloadEventEnd：返回同一个域名前一个网页的 unload 事件触发时的时间。否则返回值为0。"),Object(a.b)("li",{parentName:"ul"},"domLoading：返回当前网页 DOM 结构开始解析时（即Document.readyState属性变为 loading、相应的readystatechange事件触发时）的时间"),Object(a.b)("li",{parentName:"ul"},"domInteractive：返回当前网页DOM结构结束解析、开始加载内嵌资源时（即Document.readyState属性变为 interactive 、相应的readystatechange事件触发时）的时间。"),Object(a.b)("li",{parentName:"ul"},"domContentLoadedEventStart：返回当解析器发送 DOMContentLoaded 事件的开始时间"),Object(a.b)("li",{parentName:"ul"},"domContentLoadedEventEnd：返回当文档的 DOMContentLoaded 事件的结束时间。"),Object(a.b)("li",{parentName:"ul"},"domComplete：返回当前文档解析完成，即Document.readyState 变为 complete 且相对应的readystatechange 被触发时的时间。"),Object(a.b)("li",{parentName:"ul"},"loadEventStart：返回该文档下，load 事件被发送时的时间。如果这个事件还未被发送，它的值将会是0。"),Object(a.b)("li",{parentName:"ul"},"loadEventEnd：返回当 load 事件结束，即加载事件完成时的时间。如果这个事件还未被发送，或者尚未完成，它的值将会是0。")),Object(a.b)("p",null,"我们可以根据上面的属性，计算出一些网页性能相关的信息。"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"var timing = performance.timing\n\n// 页面总耗时\nvar pageLoadTime = timing.loadEventEnd - timing.navigationStart\n\n// DNS 域名解析耗时\nvar dnsTime = timing.domainLookupEnd - timing.domainLookupStart\n\n// tcp 连接耗时\nvar tcpTime = timing.connectEnd - timing.connectStart\n\n// 页面从加载到现在的时间,单位是微秒us，但精度比 Date.now() 高1000倍。\nvar duration = performance.now()  // Date.now() \n")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{}),"- 白屏时间\n- 首屏时间\n- 用户可操作时间\n- 页面总下载时间\n- 自定义的时间(开发者关注的)\n")),Object(a.b)("p",null,"performance.getEntriesByType('navigation')\n",Object(a.b)("img",r({parentName:"p"},{src:"/img/performance/2.png",alt:null}))),Object(a.b)("h2",{id:"参考资料"},"参考资料"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"https://zhyjor.github.io/2018/01/17/%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E5%89%8D%E7%AB%AF%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E4%B9%8B%E4%B8%80%EF%BC%9A%E6%80%A7%E8%83%BD%E4%BF%A1%E6%81%AF%E9%87%87%E9%9B%86/"}),"打造自己前端监控系统之一：性能信息采集")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"https://zhyjor.github.io/2018/01/18/%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E5%89%8D%E7%AB%AF%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E4%B9%8B%E4%BA%8C%EF%BC%9A%E5%AE%9E%E6%88%98%E7%AF%87/"}),"打造自己前端监控系统之二：实战篇")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"https://juejin.im/post/5b9214c2f265da0aeb70e36e"}),"2018你应该知道的Web性能信息采集指南")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"https://juejin.im/post/5a52f138f265da3e5b32a41b"}),"把前端监控做到极致")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"https://www.w3.org/TR/performance-timeline-2/#dom-performance"}),"https://www.w3.org/TR/performance-timeline-2/#dom-performance")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"https://segmentfault.com/a/1190000014922668"}),"web 埋点实现原理了解一下"))))}p.isMDXComponent=!0},245:function(e,t,n){"use strict";n.d(t,"a",function(){return i}),n.d(t,"b",function(){return u});var a=n(0),r=n.n(a),l=r.a.createContext({}),c=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},i=function(e){var t=c(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b="mdxType",o={inlineCode:"code",wrapper:function(e){return r.a.createElement(r.a.Fragment,{},e.children)}},p=function(e){var t=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,i=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===t.indexOf(a)&&(n[a]=e[a]);return n}(e,["components","mdxType","originalType","parentName"]),b=c(t);return r.a.createElement(b[l+"."+n]||b[n]||o[n]||a,t?Object.assign({},i,{components:t}):i)};function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,c=new Array(l);c[0]=p;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[b]="string"==typeof e?e:a,c[1]=i;for(var u=2;u<l;u++)c[u]=n[u];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);
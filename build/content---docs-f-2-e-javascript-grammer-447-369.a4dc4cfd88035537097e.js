(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{165:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",function(){return l}),t.d(n,"rightToc",function(){return o}),t.d(n,"default",function(){return b});t(0);var a=t(245);function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l={title:"javascript 语法",sidebar_label:"语法"},o=[{value:"var、let 和 const",id:"var、let-和-const",children:[{value:"提升",id:"提升",children:[]},{value:"重复声明",id:"重复声明",children:[]},{value:"暂时性死区",id:"暂时性死区",children:[]},{value:"区别",id:"区别",children:[]}]}],i={rightToc:o},u="wrapper";function b(e){var n=e.components,t=c(e,["components"]);return Object(a.b)(u,r({},i,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"var、let-和-const"},"var、let 和 const"),Object(a.b)("h3",{id:"提升"},"提升"),Object(a.b)("p",null,"提升是指使用 var 声明的变量、function 声明定义的函数会提升到作用域前面。"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"a()\nfunction a(){}\n\nconsole.log(b)  // undefined\nvar b = 3\n")),Object(a.b)("p",null,"上面的代码，a 在",Object(a.b)("inlineCode",{parentName:"p"},"function a()"),"之前使用，b 在",Object(a.b)("inlineCode",{parentName:"p"},"var b"),"之前使用，并没有报错。这就是提升，实际相当于:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"var a = function(){}\na()\n\nvar b \nconsole.log(b)  // undefined\nb = 3\n")),Object(a.b)("p",null,"可以看到，函数 a 的声明和定义都提前了，var 声明的变量 b 的声明提前了，赋值并没有提前，所以输出 b 为 undefind。"),Object(a.b)("p",null,"提升存在的根本原因就是为了解决函数间互相调用的情况"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"function test1() {\n    test2()\n}\nfunction test2() {\n    test1()\n}\ntest1()\n")),Object(a.b)("h3",{id:"重复声明"},"重复声明"),Object(a.b)("p",null,"重复 var 声明同一个变量，只有第一次声明有效。后面的定义会覆盖前面的值。"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"// --- example 1\nvar a = 1\nvar a = 3\n// 相当于\nvar a \na = 1\na = 3\n\n// --- example 2\nconsole.log(a) // ƒ a() {}\nvar a = 1\nfunction a() {}\n")),Object(a.b)("p",null,"上面 example 2 可以看到，函数的声明定义要优先于变量 var 的声明。因为 function a 后，var a 并没有生效。"),Object(a.b)("h3",{id:"暂时性死区"},"暂时性死区"),Object(a.b)("p",null,"var 存在提升，我们能在声明之前使用。let、const 因为暂时性死区的原因，不能在声明前使用。"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"function test(){\n  console.log(a)\n  let a\n}\ntest()  // Uncaught ReferenceError: a is not defined\n")),Object(a.b)("h3",{id:"区别"},"区别"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"函数提升优先于变量提升，函数提升会把整个函数挪到作用域顶部，变量提升只会把声明挪到作用域顶部"),Object(a.b)("li",{parentName:"ul"},"var 存在提升，我们能在声明之前使用。let、const 因为暂时性死区的原因，不能在声明前使用"),Object(a.b)("li",{parentName:"ul"},"var 在全局作用域下声明变量会导致变量挂载在 window 上，其他两者不会"),Object(a.b)("li",{parentName:"ul"},"let 和 const 作用基本一致，但是后者声明的变量不能再次赋值")))}b.isMDXComponent=!0},245:function(e,n,t){"use strict";t.d(n,"a",function(){return o}),t.d(n,"b",function(){return p});var a=t(0),r=t.n(a),c=r.a.createContext({}),l=function(e){var n=r.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},o=function(e){var n=l(e.components);return r.a.createElement(c.Provider,{value:n},e.children)};var i="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},b=function(e){var n=e.components,t=e.mdxType,a=e.originalType,c=e.parentName,o=function(e,n){var t={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===n.indexOf(a)&&(t[a]=e[a]);return t}(e,["components","mdxType","originalType","parentName"]),i=l(n),b=t,p=i[c+"."+b]||i[b]||u[b]||a;return n?r.a.createElement(p,Object.assign({},o,{components:n})):r.a.createElement(p,o)};function p(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var c=t.length,l=new Array(c);l[0]=b;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o[i]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<c;p++)l[p]=t[p];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{167:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",function(){return p}),t.d(n,"rightToc",function(){return i}),t.d(n,"default",function(){return s});t(0);var a=t(217);function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p={title:"react-native-code-push 热更新",date:new Date("2016-12-24T20:01:09.000Z"),toc:!0},i=[],c={rightToc:i},l="wrapper";function s(e){var n=e.components,t=o(e,["components"]);return Object(a.b)(l,r({},c,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"安装")),Object(a.b)("p",null,"要注意不同的",Object(a.b)("inlineCode",{parentName:"p"},"react-native"),"版本需要安装对应版本的",Object(a.b)("inlineCode",{parentName:"p"},"code-push"),"。具体查看",Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/Microsoft/react-native-code-push#supported-react-native-platforms"}),"code-push版本支持"),"。安装步骤如下："),Object(a.b)("p",null,"1、执行 npm 安装命令。"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-bash"}),"npm install --save react-native-code-push\n")),Object(a.b)("p",null,"2、执行",Object(a.b)("inlineCode",{parentName:"p"},"link"),"操作。具体看",Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/Microsoft/react-native-code-push#getting-started"}),"android和ios设置")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-bash"}),"react-native link react-native-code-push\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"配置")),Object(a.b)("p",null,"3、在",Object(a.b)("inlineCode",{parentName:"p"},"android/local.properties"),"中保存",Object(a.b)("inlineCode",{parentName:"p"},"codepush"),"的key值。"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{}),"// 查看key值\ncode-push deployment ls <appName> -k\n\n// 在local.properties中添加key\ncode_push_key_production=xxx\ncode_push_key_staging=xxx\n")),Object(a.b)("p",null,"4、在",Object(a.b)("inlineCode",{parentName:"p"},"android/app/build.gradle"),"中添加下面代码。"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-java"}),'// 在顶部引入配置\nProperties properties = new Properties()\nproperties.load(project.rootProject.file(\'local.properties\').newDataInputStream())\n\n\n...\nbuildTypes {\n    // 新增\n    staging {\n        minifyEnabled enableProguardInReleaseBuilds\n        proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"\n        signingConfig signingConfigs.release\n\n        buildConfigField "String", "CODEPUSH_KEY", \'"\'+properties.getProperty("code_push_key_staging")+\'"\'\n    }\n\n    release {\n        minifyEnabled enableProguardInReleaseBuilds\n        proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"\n        signingConfig signingConfigs.release\n\n        // 新增\n        buildConfigField "String", "CODEPUSH_KEY", \'"\'+properties.getProperty("code_push_key_production")+\'"\'\n    }\n}\n')),Object(a.b)("p",null,"buildTypes 中的参数可以让我们新增一个命令打包对应的版本，新增了一项staging后，就可以使用命令",Object(a.b)("inlineCode",{parentName:"p"},"./gradlew assembStaging"),"来打包staging版本。"),Object(a.b)("p",null,"5、在",Object(a.b)("inlineCode",{parentName:"p"},"MainApplication.java"),"中新增。"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-java"}),'protected List<ReactPackage> getPackages() {\n      return Arrays.<ReactPackage>asList(\n            new MainReactPackage(),\n            // 新增\n            new CodePush(BuildConfig.CODEPUSH_KEY,\n                         MainApplication.this,\n                         BuildConfig.DEBUG,\n                         "codepush服务器地址，如http://2.2.2.2:3000/")\n      );\n}\n')),Object(a.b)("p",null,"服务端",Object(a.b)("inlineCode",{parentName:"p"},"codepush"),"环境的搭建查看下面的参考资料。"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"配置ios")),Object(a.b)("p",null,"在",Object(a.b)("inlineCode",{parentName:"p"},"info.plist"),"里添加2条记录"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"CodePushDeploymentKey"),": ",Object(a.b)("inlineCode",{parentName:"li"},"7JkdUOBisPo8kHkD4Z9KrgXqiPZQ4ksvOXqog")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"CodePushServerURL"),": ",Object(a.b)("inlineCode",{parentName:"li"},"http://1.27.40.12:3000"))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"客户端发布")),Object(a.b)("p",null,"1、登录"),Object(a.b)("p",null,"打开命令行，进入项目目录输入命令登录",Object(a.b)("inlineCode",{parentName:"p"},"code-push-server"),"服务器。"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-bash"}),"npm install -g code-push-cli\ncode-push login http://api.code-push.com:8080\n")),Object(a.b)("p",null,"上面的命令会自动打开网址，登陆后，获取",Object(a.b)("inlineCode",{parentName:"p"},"accessKey"),"，然后再在命令行输入即可。"),Object(a.b)("p",null,"2、新增要发布的应用"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-bash"}),"// 新增android版本\ncode-push app add xxx-android windows react-native\n\n// 新增ios版本\ncode-push app add xxx-ios ios react-native\n")),Object(a.b)("p",null,"上面的命令相当于新增一个对应的版本库，接着就可以发布版本了。",Object(a.b)("inlineCode",{parentName:"p"},"xxx"),"是",Object(a.b)("inlineCode",{parentName:"p"},"app"),"的名字，可以随便起。"),Object(a.b)("p",null,"3、发布"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-bash"}),"# 简单\ncode-push release-react xxx-ios ios -d Production\ncode-push release-react xxx-android android -d Production\n\n# 还可以增加一些参数，会添加到对应的更新弹框中\n--mandatory true  -description \"修改描述\"\n\n# 直接使用命令\ncode-push release-react xxx-android android -d Production --targetBinaryVersion 2.0.0 --mandatory --description '更新了'\ncode-push release-react xxx-ios ios -d Production --targetBinaryVersion 2.1.1 --mandatory --description '更新了'\n")),Object(a.b)("p",null,"4、其它的一些命令"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-bash"}),"code-push app ls  // 查看app版本\ncode-push deployment rename <appName> 重命名\ncode-push deployment rm <appName> 删除部署\ncode-push deployment ls <appName> 列出应用的部署情况\ncode-push deployment ls <appName> -k 查看部署的key\n\n// 查看历史版本(Production 或者 Staging)\ncode-push deployment history <appName> <deploymentNmae>\n\n// 清除发布记录\ncode-push deployment clear chuangku-android Production\n\n// 回滚\ncode-push rollback <appName> Production --targetRelease v4(codepush服务部署的版本号)\n")),Object(a.b)("p",null,"5、使用实例"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-javascript"}),"import codePush from \"react-native-code-push\"\n\n\ncheckUpdate() {\n    // 防止总是rollback  https://github.com/Microsoft/cordova-plugin-code-push/issues/200\n    codePush.notifyApplicationReady()\n\n    /**\n     * 安卓和ios的热更新不同，app store说更新不要出现提示框,而google store说是要出现提示框\n     * - android 提示更新，更新后立即重启\n     * - ios     静默更新，更新后立即重启\n     */\n\n\n    // 提示更新成功\n\n    codePush.getUpdateMetadata().then((update) => {\n\n        if (!update) return;\n        if (update.isFirstRun && update.description) {\n            Toast.info('恭喜恭喜，更新成功1', 1.5)\n        }\n\n        if (Platform.OS == 'ios') {\n            codePush.sync({\n                updateDialog: false,\n                mandatoryInstallMode: codePush.InstallMode.IMMEDIATE,\n            });\n            return\n        }\n        codePush.sync({\n            mandatoryInstallMode: codePush.InstallMode.IMMEDIATE,\n            updateDialog: {\n                title: '更新提示',\n                mandatoryContinueButtonLabel: '更新',\n                mandatoryUpdateMessage: `有新版本，立即更新？\\n`,\n                appendReleaseDescription: true,\n                descriptionPrefix: \"更新包大小：\" + $.covertByte(update.packageSize),\n                optionalIgnoreButtonLabel: '忽略',\n                optionalInstallButtonLabel: '更新',\n                optionalUpdateMessage: `有新版本，立即更新？\\n`\n\n            },\n        }, (status) => {\n            // switch (status) {\n            //     case codePush.SyncStatus.DOWNLOADING_PACKAGE:\n            //         Toast.showShortTop('开始下载')\n            //         break;\n            //     case codePush.SyncStatus.INSTALLING_UPDATE:\n            //         Toast.showShortTop('更新成功了')\n            //         break;\n            // }\n        });\n    })\n\n}\n")),Object(a.b)("p",null,"6、参考网址"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"https://github.com/lisong/code-push-server"}),"https://github.com/lisong/code-push-server")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"https://github.com/lisong/code-push-demo-app"}),"https://github.com/lisong/code-push-demo-app")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"https://github.com/Microsoft/react-native-code-push"}),"https://github.com/Microsoft/react-native-code-push")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"https://github.com/Microsoft/react-native-code-push/blob/master/docs/api-js.md"}),"https://github.com/Microsoft/react-native-code-push/blob/master/docs/api-js.md"))),Object(a.b)("p",null,"js无法加载。"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-bash"}),"react-native bundle --platform android --dev false --entry-file index.android.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res\n")))}s.isMDXComponent=!0},217:function(e,n,t){"use strict";t.d(n,"a",function(){return i}),t.d(n,"b",function(){return d});var a=t(0),r=t.n(a),o=r.a.createContext({}),p=function(e){var n=r.a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},i=function(e){var n=p(e.components);return r.a.createElement(o.Provider,{value:n},e.children)},c="mdxType",l={inlineCode:"code",wrapper:function(e){return r.a.createElement(r.a.Fragment,{},e.children)}},s=function(e){var n=e.components,t=e.mdxType,a=e.originalType,o=e.parentName,i=function(e,n){var t={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===n.indexOf(a)&&(t[a]=e[a]);return t}(e,["components","mdxType","originalType","parentName"]),c=p(n);return r.a.createElement(c[o+"."+t]||c[t]||l[t]||a,n?Object.assign({},i,{components:n}):i)};function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,p=new Array(o);p[0]=s;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[c]="string"==typeof e?e:a,p[1]=i;for(var d=2;d<o;d++)p[d]=t[d];return r.a.createElement.apply(null,p)}return r.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"}}]);
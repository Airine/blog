(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{71:function(e,a,n){"use strict";n.r(a),n.d(a,"frontMatter",function(){return i}),n.d(a,"rightToc",function(){return c}),n.d(a,"default",function(){return m});n(0);var t=n(88);function l(){return(l=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e}).apply(this,arguments)}function b(e,a){if(null==e)return{};var n,t,l=function(e,a){if(null==e)return{};var n,t,l={},b=Object.keys(e);for(t=0;t<b.length;t++)n=b[t],a.indexOf(n)>=0||(l[n]=e[n]);return l}(e,a);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(t=0;t<b.length;t++)n=b[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i={title:"学习linux操作系统",date:new Date("2018-08-01T20:01:21.000Z"),tags:null,toc:!0},c=[{value:"常用系统工作命令",id:"常用系统工作命令",children:[{value:"echo",id:"echo",children:[]},{value:"date",id:"date",children:[]},{value:"reboot和poweroff",id:"reboot和poweroff",children:[]},{value:"wget",id:"wget",children:[]},{value:"ps",id:"ps",children:[]},{value:"top",id:"top",children:[]},{value:"pidof 命令",id:"pidof-命令",children:[]},{value:"kill 命令",id:"kill-命令",children:[]},{value:"killall",id:"killall",children:[]}]},{value:"系统状态检测命令",id:"系统状态检测命令",children:[{value:"ip addr",id:"ip-addr",children:[]},{value:"uname",id:"uname",children:[]},{value:"uptime",id:"uptime",children:[]},{value:"free",id:"free",children:[]},{value:"who",id:"who",children:[]},{value:"last",id:"last",children:[]},{value:"history",id:"history",children:[]},{value:"sosreport",id:"sosreport",children:[]}]},{value:"文件和目录操作",id:"文件和目录操作",children:[{value:"pwd",id:"pwd",children:[]},{value:"cd",id:"cd",children:[]},{value:"ls",id:"ls",children:[]},{value:"cat",id:"cat",children:[]},{value:"more",id:"more",children:[]},{value:"head",id:"head",children:[]},{value:"tail",id:"tail",children:[]},{value:"tr",id:"tr",children:[]},{value:"wc",id:"wc",children:[]},{value:"stat",id:"stat",children:[]},{value:"cut",id:"cut",children:[]}]},{value:"awk",id:"awk",children:[{value:"diff",id:"diff",children:[]},{value:"touch",id:"touch",children:[]},{value:"mkdir",id:"mkdir",children:[]},{value:"cp",id:"cp",children:[]},{value:"mv",id:"mv",children:[]},{value:"rm",id:"rm",children:[]},{value:"dd",id:"dd",children:[]},{value:"file",id:"file",children:[]},{value:"tar",id:"tar",children:[]},{value:"grep",id:"grep",children:[]},{value:"find",id:"find",children:[]}]},{value:"学习资料",id:"学习资料",children:[]},{value:"软件安装管理",id:"软件安装管理",children:[{value:"源码包和RPM包区别",id:"源码包和rpm包区别",children:[]},{value:"源码包的安装",id:"源码包的安装",children:[]},{value:"RPM包",id:"rpm包",children:[]},{value:"yum在线安装",id:"yum在线安装",children:[]}]},{value:"服务管理",id:"服务管理",children:[{value:"linux运行级别",id:"linux运行级别",children:[]},{value:"服务的分类",id:"服务的分类",children:[]},{value:"RPM包服务管理",id:"rpm包服务管理",children:[]},{value:"源码包服务管理",id:"源码包服务管理",children:[]},{value:"让源码包被服务管理命令识别",id:"让源码包被服务管理命令识别",children:[]}]},{value:"系统管理",id:"系统管理",children:[{value:"进程管理",id:"进程管理",children:[]},{value:"杀死进程",id:"杀死进程",children:[]},{value:"进程的优先级",id:"进程的优先级",children:[]},{value:"工作管理",id:"工作管理",children:[]},{value:"查看系统资源",id:"查看系统资源",children:[]},{value:"定时任务",id:"定时任务",children:[]}]},{value:"vim编辑器",id:"vim编辑器",children:[{value:"复制",id:"复制",children:[]},{value:"剪切",id:"剪切",children:[]},{value:"粘贴",id:"粘贴",children:[]}]},{value:"磁盘管理",id:"磁盘管理",children:[]},{value:"物理设备的命名规则",id:"物理设备的命名规则",children:[]},{value:"文件系统",id:"文件系统",children:[]},{value:"磁盘容量配额",id:"磁盘容量配额",children:[]},{value:"软硬方式链接",id:"软硬方式链接",children:[]},{value:"用户管理",id:"用户管理",children:[{value:"权限管理",id:"权限管理",children:[]}]},{value:"文件权限与归属",id:"文件权限与归属",children:[{value:"文件的特殊权限",id:"文件的特殊权限",children:[]},{value:"SGID",id:"sgid",children:[]},{value:"文件的隐藏属性",id:"文件的隐藏属性",children:[]},{value:"su和sudo",id:"su和sudo",children:[]}]},{value:"vim",id:"vim",children:[]},{value:"配置主机名称",id:"配置主机名称",children:[]},{value:"配置网卡信息",id:"配置网卡信息",children:[]},{value:"配置Yum软件仓库",id:"配置yum软件仓库",children:[]},{value:"编写Shell脚本",id:"编写shell脚本",children:[]},{value:"if语句",id:"if语句",children:[]},{value:"for...in语句",id:"forin语句",children:[]},{value:"while循环",id:"while循环",children:[]},{value:"case",id:"case",children:[]},{value:"计划任务服务程序",id:"计划任务服务程序",children:[]},{value:"网络管理",id:"网络管理",children:[]},{value:"管道符、重定向与环境变量",id:"管道符、重定向与环境变量",children:[{value:"输入输出重定向",id:"输入输出重定向",children:[]},{value:"管道命令符",id:"管道命令符",children:[]},{value:"命令行通配符",id:"命令行通配符",children:[]},{value:"常用转义字符",id:"常用转义字符",children:[]}]},{value:"重要的环境变量",id:"重要的环境变量",children:[]},{value:"系统安装",id:"系统安装",children:[{value:"文件搜索命令",id:"文件搜索命令",children:[]},{value:"帮助命令",id:"帮助命令",children:[]}]},{value:"远程连接SSH专题",id:"远程连接ssh专题",children:[{value:"ssh连接时间设置",id:"ssh连接时间设置",children:[]}]},{value:"apache +nginx + 数据库",id:"apache-nginx--数据库",children:[]},{value:"缓存服务",id:"缓存服务",children:[]},{value:"git",id:"git",children:[]},{value:"Php框架TP5，Lavaral Yii2.0 环境配置",id:"php框架tp5，lavaral-yii20-环境配置",children:[]},{value:"python运行环境",id:"python运行环境",children:[]},{value:"监控神器Zabbix",id:"监控神器zabbix",children:[]},{value:"重置root密码",id:"重置root密码",children:[]},{value:"systemd初始化进程",id:"systemd初始化进程",children:[]},{value:"常用系统工作命令",id:"常用系统工作命令-1",children:[{value:"pidof 命令",id:"pidof-命令-1",children:[]}]},{value:"版本",id:"版本",children:[]},{value:"linux和windows区别",id:"linux和windows区别",children:[]},{value:"虚拟机知识",id:"虚拟机知识",children:[]},{value:"系统启动流程",id:"系统启动流程",children:[]},{value:"Linux目录",id:"linux目录",children:[]},{value:"常用命令",id:"常用命令",children:[{value:"ls",id:"ls-1",children:[]},{value:"mkdir",id:"mkdir-1",children:[]},{value:"cd",id:"cd-1",children:[]},{value:"文件搜索命令",id:"文件搜索命令-1",children:[]}]},{value:"环境搭建",id:"环境搭建",children:[]},{value:"准备工作",id:"准备工作",children:[]},{value:"ssh",id:"ssh",children:[{value:"软件操作命令",id:"软件操作命令",children:[]},{value:"服务器硬件资源信息",id:"服务器硬件资源信息",children:[]},{value:"文件操作命令",id:"文件操作命令",children:[]}]},{value:"webservers",id:"webservers",children:[]},{value:"关机和重启命令",id:"关机和重启命令",children:[]},{value:"资料",id:"资料",children:[]}],r={rightToc:c},p="wrapper";function m(e){var a=e.components,n=b(e,["components"]);return Object(t.b)(p,l({},r,n,{components:a,mdxType:"MDXLayout"}),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"常用系统工作命令"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#常用系统工作命令"}),"#"),"常用系统工作命令"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"echo"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#echo"}),"#"),"echo"),Object(t.b)("p",null,"echo: 用于输出字符串或变量。",Object(t.b)("inlineCode",{parentName:"p"},"echo [字符串|$变量]")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"echo linux\necho $SHELL\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"date"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#date"}),"#"),"date"),Object(t.b)("p",null,"date: 打印日期，可以输入+自定义格式"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"%t tab"),Object(t.b)("li",{parentName:"ul"},"%H 小时00-23"),Object(t.b)("li",{parentName:"ul"},"%I 小时00-12"),Object(t.b)("li",{parentName:"ul"},"%M 分钟"),Object(t.b)("li",{parentName:"ul"},"%S 秒"),Object(t.b)("li",{parentName:"ul"},"%j 今年中的第几天")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"# 2019-04-14 03:03:12\ndate '+%Y-%m-%d %H:%M:%S'\n\n# 设置系统时间\ndate -s \"20170901 8:30:00\"\n\n# 插件当前是今年第几天\ndate '+%j'\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"reboot和poweroff"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#reboot和poweroff"}),"#"),"reboot和poweroff"),Object(t.b)("p",null,"只有root权限才可以\nreboot: 重启\npoweroff: 关机"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"wget"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#wget"}),"#"),"wget"),Object(t.b)("p",null,"wget: 下载网络文件"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"-b 后台下载模式"),Object(t.b)("li",{parentName:"ul"},"-P 下载到指定目录"),Object(t.b)("li",{parentName:"ul"},"-t 最大尝试次数"),Object(t.b)("li",{parentName:"ul"},"-c 断点续传"),Object(t.b)("li",{parentName:"ul"},"-p 下载页面中所有资源，包括图片、视频"),Object(t.b)("li",{parentName:"ul"},"-r 递归下载")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"ps"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#ps"}),"#"),"ps"),Object(t.b)("p",null,"ps: 查看系统进程状态，格式是",Object(t.b)("inlineCode",{parentName:"p"},"ps [参数]")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"-a"),": 显示所有进程（包括其他用户进程）"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"-u"),": 用户及其他详细信息"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"-x"),"：显示没有控制终端的进程")),Object(t.b)("p",null,"进程状态："),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"R（run）: 进程正在运行或在运行队列中等待。"),Object(t.b)("li",{parentName:"ul"},"S (stop): 休眠，当某个条件形成或接收到信号后，则脱离该状态。"),Object(t.b)("li",{parentName:"ul"},"D (不可中断): 进程不响应系统异步信号，即使kill也不能中断。"),Object(t.b)("li",{parentName:"ul"},"Z (僵死): 进程已经终止，但进程描述符仍然存储，直到父进程调用",Object(t.b)("inlineCode",{parentName:"li"},"wait4()"),"系统函数将进程释放。"),Object(t.b)("li",{parentName:"ul"},"T (停止): 进程收到信号后停止运行。")),Object(t.b)("p",null,"命令参数有长格式(--)，短格式(-)，只有短格式之间能合并，而且可以不加-"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"top"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#top"}),"#"),"top"),Object(t.b)("p",null,"top: 用于动态监视进程活动与系统负载等信息。"),Object(t.b)("p",null,"前5行是系统整体的统计信息\n第1行：系统时间、运行时间、登陆终端数、系统负载（三个数值分别是1分钟、5分钟、15分钟内的平均值，数值越小负载越低）\n第2行：进程总数、运行中的进程数、睡眠中的进程数、停止的进程数、僵死的进程数。\n第3行：用户占用资源百分比、系统内核占用资源百分比、改变过优先级的进程资源百分比、空闲资源百分比等。\n第4行：物理内存总量、内存使用量、内存空闲量、作为内存缓存的内存量。\n第5行：虚拟内存总量、虚拟内存使用量、虚拟内存空闲量、已被提前加载的内存量。"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"pidof-命令"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#pidof-命令"}),"#"),"pidof 命令"),Object(t.b)("p",null,"用于查询某个指定服务进程的 PID 值，格式是",Object(t.b)("inlineCode",{parentName:"p"},"pidof [参数] [服务名称]"),"。每个进程的进程号码值(PID)是唯一的。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"[root@localhost ~]# pidof sshd\n7116\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"kill-命令"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#kill-命令"}),"#"),"kill 命令"),Object(t.b)("p",null,"kill命令用来终止某个 PID 的服务进程，格式为",Object(t.b)("inlineCode",{parentName:"p"},"kill [参数] [进程PID]"),"。这种操作的效果和强制停止sshd服务一样。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"[root@localhost ~]# kill 7116\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"killall"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#killall"}),"#"),"killall"),Object(t.b)("p",null,"killall命令用于终止某个指定名称的服务所对应的全部进程，格式为",Object(t.b)("inlineCode",{parentName:"p"},"killall [参数] [进程名]"),"，因为有些复杂软件的服务程序会有多个进程。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"[root@localhost ~]# pidof httpd\n")),Object(t.b)("p",null,"如果报错：",Object(t.b)("inlineCode",{parentName:"p"},"killall command not found"),"，需要安装",Object(t.b)("inlineCode",{parentName:"p"},"psmisc"),"。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"yum install psmisc\n")),Object(t.b)("p",null,"执行命令时在末尾添加&符号，可以进入后台执行。"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"系统状态检测命令"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#系统状态检测命令"}),"#"),"系统状态检测命令"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"ip-addr"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#ip-addr"}),"#"),"ip addr"),Object(t.b)("p",null,"ip addr命令用于获取网卡配置和网络状态信息。"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"uname"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#uname"}),"#"),"uname"),Object(t.b)("p",null,"uname 命令用来查看系统内核与系统版本信息。格式",Object(t.b)("inlineCode",{parentName:"p"},"uname [-a]"),"，",Object(t.b)("inlineCode",{parentName:"p"},"-a"),"用于查看完整的内核名称、主机名、内核发行版本、节点名、系统时间、硬件名称、硬件平台、处理器类型和操作系统名等信息。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"[root@localhost ~]# uname -a \n")),Object(t.b)("p",null,"如果要查看系统版本详细信息，需要查看 redhat-release 文件。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"[root@localhost ~]# cat /etc/redhat/release\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"uptime"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#uptime"}),"#"),"uptime"),Object(t.b)("p",null,"uptime 用于查看系统的负载信息。",Object(t.b)("inlineCode",{parentName:"p"},"load average"),"分别是1、5、15分钟的负载平均值。尽量不要长期超过1，生产环境不要超过5."),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"[root@localhost ~]# uptime\n15:50:32 up 10:21, 1 user, load average: 0.00, 0.01, 0.05 \n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"free"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#free"}),"#"),"free"),Object(t.b)("p",null,"free 命令用于显示当前系统中内存使用量信息，格式是",Object(t.b)("inlineCode",{parentName:"p"},"free [-h]"),"。"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"who"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#who"}),"#"),"who"),Object(t.b)("p",null,"who 命令用于查看登入主机的用户终端信息。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"[root@localhost ~]# who\n# 登陆用户名 终端设备 登陆时间\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"last"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#last"}),"#"),"last"),Object(t.b)("p",null,"last 命令用于查看所有系统的登陆记录。这些信息是保存到日志文件中的，所以黑客可以更改，不要用它来判断有无恶意入侵。"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"history"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#history"}),"#"),"history"),Object(t.b)("p",null,"history 命令用于显示历史执行过的命令。默认是1000条，记录数量定义在",Object(t.b)("inlineCode",{parentName:"p"},"/etc/profile"),"的HISTSIZE中。用过使用",Object(t.b)("inlineCode",{parentName:"p"},"-c"),"会清空所有命令历史记录。 ",Object(t.b)("inlineCode",{parentName:"p"},"!编号数字"),"可以执行第多少个历史命令。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"history\nhistory -c\n!15\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"sosreport"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#sosreport"}),"#"),"sosreport"),Object(t.b)("p",null,"sosreport 命令用于搜集系统配置及架构信息并输出诊断文档。如果",Object(t.b)("inlineCode",{parentName:"p"},"command not found"),"，需要安装",Object(t.b)("inlineCode",{parentName:"p"},"sos"),"包。"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"文件和目录操作"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#文件和目录操作"}),"#"),"文件和目录操作"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"pwd"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#pwd"}),"#"),"pwd"),Object(t.b)("p",null,"pwd 命令用于显示当前用户所处的工作目录。"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"cd"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#cd"}),"#"),"cd"),Object(t.b)("p",null,"cd 命令用于切换工作目录。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"-"),"：返回上一次所处目录。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"~"),": 返回当前用户的家目录。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},".."),": 返回上级目录。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"~username"),"：进入其它用户的家目录。")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"ls"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#ls"}),"#"),"ls"),Object(t.b)("p",null,"ls 命令用于显示目录的文件信息。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"a"),": 表示全部文件（包括隐藏文件）。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"l"),": 表示查看文件的属性、大小等信息。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"d"),": 查看目录的权限和属性。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 查看当前目录的文件\nls -al\n\n# 查看目录的属性和权限\nls -ld /etc\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"cat"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#cat"}),"#"),"cat"),Object(t.b)("p",null,"cat 命令用于查看纯文本(内容较少的)。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"n"),"：显示行号。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"cat -n initial-setup-ks.cfg\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"more"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#more"}),"#"),"more"),Object(t.b)("p",null,"more 命令用于查看纯文本文件(内容较多的)。会提示进度，可以用空格键或回车键向下翻页。"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"head"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#head"}),"#"),"head"),Object(t.b)("p",null,"head 命令用于查看纯文本的前 N 行。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"# 查看前20行\nhead -n 20 init-setup-ks.cfg\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"tail"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#tail"}),"#"),"tail"),Object(t.b)("p",null,"tail 命令用于查看文本文档的后 N 行或持续刷新内容(如实时日志)。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"f"),": 查看最新的内容")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"tail -f /var/log/messages\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"tr"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#tr"}),"#"),"tr"),Object(t.b)("p",null,"tr 命令用于替换文本文件的字符。格式为",Object(t.b)("inlineCode",{parentName:"p"},"tr [原始字符] [目标字符]"),"。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 读取待处理文本，通过管道符传递给tr替换\n# 将字母替换成大写\ncat anaconda-ks.cfg | tr [a-z] [A-Z]\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"wc"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#wc"}),"#"),"wc"),Object(t.b)("p",null,"wc 命令用于统计指定文本的行数、字数、字节数，格式为",Object(t.b)("inlineCode",{parentName:"p"},"wc [参数] 文本"),"。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"l"),": 只显示行数。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"w"),": 只显示单词数。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"c"),": 只显示字节数。")),Object(t.b)("p",null,Object(t.b)("inlineCode",{parentName:"p"},"/etc/passwd"),"用于保存系统账户信息，要统计用户数，可以使用下面命令。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"wc -l /etc/passwd\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"stat"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#stat"}),"#"),"stat"),Object(t.b)("p",null,"stat 命令用于查看文件的具体存储信息和时间等信息。格式为",Object(t.b)("inlineCode",{parentName:"p"},"stat 文件名"),"。"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"cut"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#cut"}),"#"),"cut"),Object(t.b)("p",null,"cut 命令用于按列提取文本字符。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"f"),": 列数。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"d"),": 设置间隔符号。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 提取行\nhead -n 2 /etc/passwd\n\n# 提取列，提取用户名\ncut -d: -f1 /etc/passwd\n")),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"awk"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#awk"}),"#"),"awk"),Object(t.b)("p",null,"awk 用于处理文本，它依次处理文件每一行，并读取每一个字段。格式为",Object(t.b)("inlineCode",{parentName:"p"},"awk 条件 动作 文件名"),"。参数如下："),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"F"),": 指定分隔符")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"变量")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"$数字"),": 第几个字段。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"NF"),": 当前行有多少个字段。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"$NF"),": 最后一个字段。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"$(NF-1)"),": 倒数第二个字段。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"NR"),"：当前处理的第几行。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"FILENAME"),": 当前文件名。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"FS"),": 字段分隔符，默认空格和制表符。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"RS"),": 行分割符，用于分割每一行，默认是换行符。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"OFS"),": 输出字段的分隔符，用于打印时分隔字段，默认为空格。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"ORS"),": 输出记录的分隔符，用于打印时分割记录，默认为换行符。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"OFMT"),": 数字输出的格式，默认是%.6g")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"函数")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"tolower()")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"length"),": 字符串长度"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"substr()")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"sin()")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"cos()")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"sqrt()")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"rand()"),": 随机数")),Object(t.b)("p",null,"具体查看",Object(t.b)("a",l({parentName:"p"},{href:"https://www.gnu.org/software/gawk/manual/html_node/Built_002din.html#Built_002din"}),"手册")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# print是打印命令，$0表示当前行,$1,$2...表示字段\necho 'this is a test' | awk '{print $0}'\n\n# demo.txt是要处理的文件\nawk -F ',' '{print $1}' demo.txt\n\n# 条件，只输出带usr的\nawk -F ':' '/usr/ {print $1}' demo.txt\n# 输出奇数行\nawk -F ':' 'NR % 2 == 1 {print $1}' demo.txt\n# 输出第三行以后的行\nawk -F ':' 'NR >3 {print $1}' demo.txt\n\n# if语句\nawk -F ':' '{if ($1 > \"m\") print $1; else print \"---\"}' demo.txt\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"diff"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#diff"}),"#"),"diff"),Object(t.b)("p",null,"diff 用于比较多个文本文件的差异，格式为",Object(t.b)("inlineCode",{parentName:"p"},"diff [参数] 文件"),"。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"brief"),": 确认两个文件是否不同。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"c"),": 比较差异。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"diff --brief a.txt b.txt\ndiff -c a.txt b.txt\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"touch"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#touch"}),"#"),"touch"),Object(t.b)("p",null,"touch 命令用于创建空白文件或设置文件的时间，格式为",Object(t.b)("inlineCode",{parentName:"p"},"touch [选项] [文件]"),"。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"a"),": 设置文件的读取时间(atime)。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"m"),": 设置文件的修改时间(mtime)。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"d"),": 设置文件的atime和mtime。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 修改文件后，将文件的时间改成修改之前的时间\nls -l a.txt\necho 2 >> a.txt\nls -l a.txt\n\n# 修改时间\ntouch -d '2019-04-05 16:34' a.txt\nls -l a.txt\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"mkdir"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#mkdir"}),"#"),"mkdir"),Object(t.b)("p",null,"mkdir 命令用于创建空白的目录，格式为",Object(t.b)("inlineCode",{parentName:"p"},"mkdir [选项] 目录"),"。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"p"),": 递归创建嵌套目录。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"mkdir -p a/b/c\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"cp"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#cp"}),"#"),"cp"),Object(t.b)("p",null,"cp 命令用于复制文件或目录，格式为",Object(t.b)("inlineCode",{parentName:"p"},"cp [选项] 源文件 目标文件"),"。复制有3种情况："),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"如果目标文件是目录，则会把源文件复制到该目录中。"),Object(t.b)("li",{parentName:"ul"},"如果目标文件是普通文件，则会询问是否覆盖。"),Object(t.b)("li",{parentName:"ul"},"如果目标文件不存在，则执行正常的复制操作。")),Object(t.b)("p",null,"参数列表："),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"p"),": 保留原始文件的属性。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"d"),": 若对象为链接文件，则保留其属性。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"r"),": 递归复制(用于目录)。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"i"),": 若目标文件存在，则询问是否覆盖。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"a"),": 相当于 -pdr。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"cp a.txt a_copy.txt\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"mv"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#mv"}),"#"),"mv"),Object(t.b)("p",null,"mv 命令用于剪切文件或重命名文件，格式为",Object(t.b)("inlineCode",{parentName:"p"},"mv [选项] 源文件 [目标路径|目标文件名]"),"。若在同一目录剪切，则是重命名操作。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"mv a.txt c.txt\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"rm"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#rm"}),"#"),"rm"),Object(t.b)("p",null,"rm 命令用于删除文件或目录，格式为",Object(t.b)("inlineCode",{parentName:"p"},"mv [选项] 文件"),"。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"f"),": 系统默认会询问是否删除，可以加-f强制删除，不询问。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"r"),": 删除目录。")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"dd"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#dd"}),"#"),"dd"),Object(t.b)("p",null,"dd 命令用于按照指定大小和个数的数据块来复制文件或转换文件，格式为",Object(t.b)("inlineCode",{parentName:"p"},"dd [参数]"),"。linux系统中有个设备文件",Object(t.b)("inlineCode",{parentName:"p"},"/dev/zero"),"，不占用系统存储空间，却可以提供无穷无尽的数据，可以用它做为 dd 命令的输入文件，来生成指定大小的文件。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"if"),": 输入的文件名称。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"of"),": 输出的文件名称。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"bs"),": 设置每个块的大小。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"count"),": 设置要复制块的个数。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"# 从/dev/zero取出一个560MB的数据块，然后保存成名为560_file的文件\ndd if=/dev/zero/ of=560_file count=1 bs=560M\n\n# 将linux刻录到光盘镜像\ndd if=/dev/cdrom of=RHEL-server-7.0-x86_64-linux.iso\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"file"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#file"}),"#"),"file"),Object(t.b)("p",null,"file 命令用于查看文件的类型，格式为",Object(t.b)("inlineCode",{parentName:"p"},"file 文件名"),"。linux中，一切都是文件，不能单凭后缀知道文件类型，所以需要使用file命令。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"[root@localhost ~]# file package-lock.json\npackage-lock.json: ASCII text\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"tar"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#tar"}),"#"),"tar"),Object(t.b)("p",null,"tar 命令用于对文件进行压缩或解压，格式为",Object(t.b)("inlineCode",{parentName:"p"},"tar [选项] [文件]"),"。linux常用的格式为.tar或.tar.gz或.tar.bz2格式。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"c"),": 创建压缩文件。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"x"),": 解开压缩文件。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"t"),": 查看压缩包内有哪些文件。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"z"),": 用 Gzip 压缩或解压。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"j"),": 用 bzip2 压缩或解压。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"v"),": 显示压缩或解压的过程。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"f"),": 目标文件名。需要放在参数的最后一位。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"p"),": 保留原始的权限与属性。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"P"),": 使用绝对路径来压缩。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"C"),": 指定解压到的目录。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"# 压缩/etc目录到文件etc.tar.gz\ntar -czvf etc.tar.gz /etc\n\n# 解压etc.tar.gz文件到/root/etc目录\ntar -xzvf etc.tar.gz -C /root/etc\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"grep"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#grep"}),"#"),"grep"),Object(t.b)("p",null,"grep 命令用于在文本中执行关键词搜索，并显示匹配的结果，格式为",Object(t.b)("inlineCode",{parentName:"p"},"grep [选项] [文件]"),"。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"b"),": 将可执行文件(binary)当作文本文件(text)搜索。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"c"),": 仅显示找到的行数。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"i"),": 忽略大小写。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"n"),": 显示行号。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"v"),": 反向选择，即列出没有关键词的行。")),Object(t.b)("p",null,"linux系统中，",Object(t.b)("inlineCode",{parentName:"p"},"/etc/passwd"),"文件保存着所有用户的信息，一旦用户的终端登陆被设置为",Object(t.b)("inlineCode",{parentName:"p"},"/sbin/nologin"),"，将不再允许登陆。可以用grep来搜索不允许登陆的用户的信息。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"grep /sbin/nologin /etc/passwd\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"find"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#find"}),"#"),"find"),Object(t.b)("p",null,"find 命令用于按照指定条件来查找文件，格式为",Object(t.b)("inlineCode",{parentName:"p"},"find [查找路径] 寻找条件 操作"),"。寻找条件可以是文件名、大小、修改时间、权限等信息。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"name"),": 匹配名称。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"perm"),": 匹配权限。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"user"),": 匹配所有者。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"group"),": 匹配所有组。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"mtime -n +n"),": 匹配修改内容的时间，-n表示n天内，+n表示n天以前。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"atime -n +n"),": 匹配访问文件的时间，-n表示n天内，+n表示n天以前。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"ctime -n +n"),": 匹配修改文件权限的时间，-n表示n天内，+n表示n天以前。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"nouser"),": 匹配无所有者的文件。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"nogroup"),": 匹配无所有组的文件。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"newer f1 !f2"),": 匹配比文件f1新但比f2旧的文件。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"--type b/d/c/p/l/f"),": 匹配文件类型(后面的字母参数依次是块设备、目录、字符设备、管道、链接文件、文本文件)。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"size"),": 匹配文件的大小，+50KB为查找超过50KB的文件，-50KB表示小于50KB。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"prune"),": 忽略某个目录。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"exec ... {} \\"),": 后面可跟用于进一步处理搜索结果的命令。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"o")," 或者")),Object(t.b)("p",null,"根据文件系统层次标准(Filesystem Hierarchy Standard)协议，Linux系统中的配置文件会保存到",Object(t.b)("inlineCode",{parentName:"p"},"/etc"),"目录。如果要获取所有以host开头的文件列表，可以执行如下命令："),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),'# 搜索文件名以host开头的文件\nfind /etc -name "host*" -print\n\n# 搜索权限中包含SUID权限的文件\nfind / -perm -4000 -print\n\n# 找出归banli用户的文件并复制到/home目录\nfind / -user banli -exec cp -a {} /home \\\n\n# 查找当前目录的yarn.lock文件，忽略node_modules目录\nfind . -path  "./node_modules" -prune -o -type f -name \'yarn.lock\' -print\n')),Object(t.b)("p",null,"在 RHEL 7 系统及众多的 Linux 系统中，最常使用的 Shell 终端是Bash(Bourne-Again SHell)解释器。"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"学习资料"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#学习资料"}),"#"),"学习资料"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"linux就该这样学"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("a",l({parentName:"li"},{href:"http://www.ruanyifeng.com/blog/2018/11/awk.html"}),"awk 入门教程")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("a",l({parentName:"li"},{href:"https://www.cnblogs.com/findyou/p/5760970.html"}),"mail配置"))),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"软件安装管理"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#软件安装管理"}),"#"),"软件安装管理"),Object(t.b)("p",null,"linux中的软件安装方式有 3 种:"),Object(t.b)("ol",null,Object(t.b)("li",{parentName:"ol"},"通过源码包安装。好处是可以查看并修改源代码、比较安全(因为是开源的)、自由配置所需功能、卸载方便，另外通过源码包安装时需要编译，会更适合自己的系统、更加稳定和高效。缺点是安装步骤多、容易出错、编译时间较长。"),Object(t.b)("li",{parentName:"ol"},"通过二进制包(RPM包、系统默认包)安装。缺点是看不到源码，功能选择没有源码包灵活；另外因为是厂商编译的，没有对本机做优化，效率可能没有源码包高。"),Object(t.b)("li",{parentName:"ol"},"通过其它人写好的脚本自动安装，如lnmp。优点是安装方便，缺点是无法定制。")),Object(t.b)("p",null,"通常建议是如apache这样的服务器使用源码包安装，因为它是为其他用户提供浏览服务的(如网页)，对于效率要求更高。下面分别介绍这3种安装方式。"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"源码包和rpm包区别"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#源码包和rpm包区别"}),"#"),"源码包和RPM包区别"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"安装前的区别：概念"),Object(t.b)("li",{parentName:"ul"},"安装后的区别：目录")),Object(t.b)("p",null,"RPM一般默认安装就行，不需要自己手动指定安装目录。源码包要指定位置，卸载是直接删除，否则卸载要手动删除很多文件。安装位置导致启动服务命令不同。 RPM包安装在",Object(t.b)("inlineCode",{parentName:"p"},"/etc/rc.d/init.d/"),"里可以使用service命令管理，源码包只能使用绝对路径来管理。"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"源码包的安装"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#源码包的安装"}),"#"),"源码包的安装"),Object(t.b)("p",null,"因为源码包都是C写的，所以安装源码包首先需要安装",Object(t.b)("inlineCode",{parentName:"p"},"gcc"),"编译器，。一般我们保存和安装源码包目录如下。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"源码包保存位置： ",Object(t.b)("inlineCode",{parentName:"li"},"/usr/local/src/")),Object(t.b)("li",{parentName:"ul"},"源码包安装位置：",Object(t.b)("inlineCode",{parentName:"li"},"/usr/local/"))),Object(t.b)("p",null,"源码包的安装过程如下:"),Object(t.b)("ol",null,Object(t.b)("li",{parentName:"ol"},"下载源码包。"),Object(t.b)("li",{parentName:"ol"},"解压缩到目录。"),Object(t.b)("li",{parentName:"ol"},"进入解压缩目录。"),Object(t.b)("li",{parentName:"ol"},"执行",Object(t.b)("inlineCode",{parentName:"li"},"./configure"),"配置和检查软件，会把配置和能否安装信息都写在",Object(t.b)("inlineCode",{parentName:"li"},"Makefile"),"文件中，用于后续的编辑。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 配置和检查软件，配置安装目录\n./configure --prefix=/usr/local/apache2\n\n# 编译\nmake\n\n# 安装\nmake install\n\n# 清除安装的缓存，如果make install报错，还需要删除安装目录\nmake clean\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"rpm包"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#rpm包"}),"#"),"RPM包"),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"1. RPM包在哪里?")),Object(t.b)("p",null,"RMP包在系统光盘的Packages里。"),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"2. 命名规则？")),Object(t.b)("p",null,"拿",Object(t.b)("inlineCode",{parentName:"p"},"httpd-2.2.15-15.el6.centos.1.i686.rmp"),"分析。是",Object(t.b)("inlineCode",{parentName:"p"},"包名 + 软件版本 + 软件发布的次数 + 适合的linux平台 + 适合的硬件平台 + 包扩展名"),"。"),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"3. RPM包的依赖性缺点？")),Object(t.b)("p",null,"由于Linux中的程序大多是小程序。程序与程序之间存在非常复杂的依赖关系。RPM无法解决软件包的依赖关系。需要自己手动一个个安装。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"树形依赖"),Object(t.b)("li",{parentName:"ul"},"环形依赖"),Object(t.b)("li",{parentName:"ul"},"模块依赖：www.rpmfind.net，需要依赖库文件",Object(t.b)("inlineCode",{parentName:"li"},"so.数字"),"，在网站查询。")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"4. 包全名与包名。")),Object(t.b)("p",null,"操作没有安装的包要使用包全名；操作已经安装的包使用包名；已经安装的包记录在/var/lib/rpm/中的数据库",Object(t.b)("inlineCode",{parentName:"p"},"__db.xxx"),"中。"),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"5. RPM安装")),Object(t.b)("p",null,"太麻烦，要解决一个个依赖。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"i(install)"),": 安装。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"v(verbose)"),": 显示详细信息。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"h(hash)"),": 显示进度。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"--nodeps"),": 不检测依赖性。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"rpm -ivh 包全名\n")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"6. RPM升级和卸载")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"U(upgrade)"),": 升级"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"e"),": 卸载，因为包的文件安装在哪里是作者规定的，用户不知道删除，所以提供了这个卸载功能"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"--nodeps"),": 不检查依赖包")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 升级，如果没有则安装\nrpm -Uvh 包全名\n\n# 卸载，需要根据依赖来卸载\nrpm -e 包名\n\n# 不处理依赖包，但是会导致其它包不能用了\nrpm -e --nodeps 包名\n")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"7. RPM包查询")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"q"),": 查询(query)"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"a"),": 所有(all)"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"i"),": 查询软件信息(infomation)"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"p"),": 查询未安装的包信息(package)"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"l"),": 列表，查询包的文件装在哪里"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"f"),": 查询文件属于哪个软件包"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"R"),": 查询依赖的包")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 查看是否安装过\nrpm -q httpd\n\n# 查询安装的包\nrpm -qa \nrpm -qa | grep httpd\n\n# 查询包详细信息，里面有包的网站\nrpm -qi httpd\n\n# 查询未安装的包\nrpm -qip 包全名\n\n# 查询包的文件装在哪里\nrpm -ql 包名\n\n# 查询未安装包打算装在哪里\nrpm -qlp 包名\n\n# 查询文件属于哪个包\nrpm -qf yum.conf\n\n# 查询依赖哪些包\nrpm -qR httpd\nrpm -qpR httpd\n")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"8. RPM包默认安装路径")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/etc/"),": 配置文件"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/usr/bin/"),": 可执行命令"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/usr/lib/"),": 函数库"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/usr/share/doc/"),": 使用手册"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/usr/share/man/"),":帮助文件")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"9. RPM包的校验")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"rpm -V httpd\n")),Object(t.b)("p",null,"可能返回的结果:"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"S"),": 文件大小是否改变"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"M"),": 文件类型或权限(rwx)是否改变"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"5"),": md5校验是否改变"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"D"),"：设备的主从代码是否修改"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"L"),": 文件路径是否改变"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"U"),": 文件所有者是否改变"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"G"),": 文件所属组是否改变"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"T"),": 文件修改时间是否改变"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"c"),": 配置文件"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"d"),": 普通文档"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"g"),": 不该rpm包包含的文件"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"L"),": 授权文件"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"r"),": 描述文件")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"10. RPM包中文件提取")),Object(t.b)("p",null,"比如ls被删除了，可以通过",Object(t.b)("inlineCode",{parentName:"p"},"rpm2cpio 包全名 | cpio -idv .文件绝对路径"),"将ls提取出来。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"# 查看是哪个包\nrpm -qf /bin/ls\nmv /bin/ls /tmp/\n\n# 将命令文件提取到当前目录，之后再复制到bin目录即可\nrpm2cpio /mnt/cdrom/Packages/coreutils...rpm | cpio -idv ./bin/ls\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"yum在线安装"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#yum在线安装"}),"#"),"yum在线安装"),Object(t.b)("p",null,"一个命令，在线就可以解决依赖。安装的实际也是rpm包。不能查询和校验。"),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"1. yum源文件")),Object(t.b)("p",null,"在",Object(t.b)("inlineCode",{parentName:"p"},"/etc/yum.repos.d/"),"目录里，默认生效的是",Object(t.b)("inlineCode",{parentName:"p"},"Centos-Base.repo"),"文件。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"[base]"),": 容器名称"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"mirrorlist"),":镜像"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"baseurl"),": 源"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"enable"),": 1表示生效，0表示不生效"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"gpgcheck"),": rpm验证"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"gpgkey"),": 验证证书位置")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"2. 光盘yum安装")),Object(t.b)("p",null,"没网的时候，将",Object(t.b)("inlineCode",{parentName:"p"},"Centos-Base.repo"),"改名",Object(t.b)("inlineCode",{parentName:"p"},"Centos-Base.repo.bak"),"让它失效，然后启用",Object(t.b)("inlineCode",{parentName:"p"},"Centos-Media.repo"),"。将enable改为1，修改baseurl为光盘的地址，注释其他file地址。"),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"3. yum命令")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),'# 查询所以可安装的包列表，不支持本地查询安装的包\nyum list\n\n# 搜索服务器包含关键字的包\nyum search 关键字\n\n# 安装\nyum -y install 包名\n\n# 升级\nyum -y update 包名\n\n# 会把linux内核也升级，所有包也升级，可能导致崩溃，不要用这个命令\nyum -y update \n\n# 卸载\nyum -y remove 包名\n\n# 组操作\n# 查看支持的组\nyum grouplist\n\n# 安装组，要使用英文\nyum groupinstall "Chinese Support"\nLANG=zh_CN\nLANG=zh_CN.utf8\n\n# 卸载组\nyum groupremove "Chinese Support"\n')),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"服务管理"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#服务管理"}),"#"),"服务管理"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"linux运行级别"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#linux运行级别"}),"#"),"linux运行级别"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 查看运行级别\nrunlevel\n# N 3  从NULL级别进入3级别\n\n# 切换到图形化界面级别，即使切换失败(如没安装图形化)，级别也会切换\ninit 5\n\n# 设置系统默认运行级别\nvim /etc/inittab\n# id:3:initdefault\n")),Object(t.b)("p",null,"linux的运行级别有7个："),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"0"),Object(t.b)("li",{parentName:"ul"},"1"),Object(t.b)("li",{parentName:"ul"},"2"),Object(t.b)("li",{parentName:"ul"},"3"),Object(t.b)("li",{parentName:"ul"},"4"),Object(t.b)("li",{parentName:"ul"},"5"),Object(t.b)("li",{parentName:"ul"},"6")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"服务的分类"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#服务的分类"}),"#"),"服务的分类"),Object(t.b)("p",null,"学习服务可以让我们停掉不需要的服务，从而优化服务器。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"RPM包默认安装的服务",Object(t.b)("ul",{parentName:"li"},Object(t.b)("li",{parentName:"ul"},"独立的服务"),Object(t.b)("li",{parentName:"ul"},"基于xinetd服务:基本淘汰，安装",Object(t.b)("inlineCode",{parentName:"li"},"xinetd"),"包后再通过",Object(t.b)("inlineCode",{parentName:"li"},"chkconfig --list"),"查看。"))),Object(t.b)("li",{parentName:"ul"},"源码包安装的服务: 一般在",Object(t.b)("inlineCode",{parentName:"li"},"/usr/local/"),"下")),Object(t.b)("p",null,"启动和自启动："),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"自启动是服务开机是否启动。"),Object(t.b)("li",{parentName:"ul"},"启动是服务当前的状态。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 查看RPM服务和自启动状态\nchkconfig --list\n")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"netstat查看系统开启的服务")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"t"),": 列出tcp数据"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"u"),": 列出udp数据"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"l"),": 列出正在监听的网络服务(不包含已经连接的网络服务)"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"n"),": 用端口号来显示服务，而不是用服务名"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"p"),": 列出服务的进程id(pid)")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 查看启动了哪些服务\nnetstat -tulnp\n\n# 所有的，包括连接的\nnetstat -an\n")),Object(t.b)("p",null,"还可以通过",Object(t.b)("inlineCode",{parentName:"p"},"ps aux"),"命令来查看。"),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"常规服务端口作用列表文件")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"vi /etc/services\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"rpm包服务管理"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#rpm包服务管理"}),"#"),"RPM包服务管理"),Object(t.b)("p",null,"RPM包安装的位置："),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/etc/init.d/"),": 启动脚本位置"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/etc/sysconfig/"),": 初始化环境配置文件位置"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/etc/"),": 配置文件位置"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/etc/xinetd.conf/"),": 配置"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/etc/xinetd.d/"),": 基于xinetd服务的启动脚本"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/var/lib/"),": 服务产生的数据"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/var/log/"),": 日志")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"独立服务的启动方法")),Object(t.b)("p",null,Object(t.b)("inlineCode",{parentName:"p"},"服务路径 start/stop/status/restart"),"或者redhat专有的",Object(t.b)("inlineCode",{parentName:"p"},"systemctl start/stop/status/restart 服务名"),"（RPM包可以，源码包不行，因为源码包不再/etc/init.d/目录下，服务命令默认搜索的这个目录）。"),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"独立服务的自启动")),Object(t.b)("p",null,"有两种方法："),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"方法1. 使用chkconfig")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# centos 7用systemctl替换chkconfig\nsystemctl enable http\n\n\nchkconfig --level 2345 httpd on\nchkconfig --level 2345 httpd off\nchkconfig httpd off\n")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("p",{parentName:"li"},"方法2. 修改",Object(t.b)("inlineCode",{parentName:"p"},"/etc/rc.d/rc.local"),"文件，新增",Object(t.b)("inlineCode",{parentName:"p"},"/etc/httpd start"),"。改了之后chkconfig查询结果不会变，是两种方法。")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("p",{parentName:"li"},"方法3. 使用redhat专有",Object(t.b)("inlineCode",{parentName:"p"},"ntsysv"),"图形化命令，这个和chkconfig是一种方法。改了chkconfig命令查询的结果会变。"))),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"修改xinetd服务")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 编辑xinetd.d文件里的配置disable = no\nvi /etc/xinetd.d/rsync\n\n# 重启xinetd服务\nsystemctl restart xinetd\n")),Object(t.b)("p",null,"xinetd服务自启动和启动是同步的，关闭后自启动也关闭了。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"chkconfig rsync on\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"源码包服务管理"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#源码包服务管理"}),"#"),"源码包服务管理"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"启动：",Object(t.b)("inlineCode",{parentName:"li"},"源码包路径 start")),Object(t.b)("li",{parentName:"ul"},"自启动：修改",Object(t.b)("inlineCode",{parentName:"li"},"etc/rc.d/rc.local"))),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"让源码包被服务管理命令识别"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#让源码包被服务管理命令识别"}),"#"),"让源码包被服务管理命令识别"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"启动",Object(t.b)("inlineCode",{parentName:"li"},"ln -s 源码包路径  /etc/rc.d/init.d/"),"，链接后面不写文件名表示不改名"),Object(t.b)("li",{parentName:"ul"},"自启动",Object(t.b)("ul",{parentName:"li"},Object(t.b)("li",{parentName:"ul"},"vi /etc/init.d/apache"),Object(t.b)("li",{parentName:"ul"},"添加",Object(t.b)("inlineCode",{parentName:"li"},"# chkconfig:35 86 76"),"，运行级别、启动顺序(开机时开启)、关闭顺序(关机时停止)，在",Object(t.b)("inlineCode",{parentName:"li"},"/etc/rc3.d"),"里3表示运行级别，K开头表示Kill，S表示Start。"),Object(t.b)("li",{parentName:"ul"},"添加说明文件",Object(t.b)("inlineCode",{parentName:"li"},"# description: source package apache")),Object(t.b)("li",{parentName:"ul"},"指定httpd脚本可以被chkconfig命令管理")))),Object(t.b)("p",null,Object(t.b)("img",l({parentName:"p"},{src:"./index/1.png",alt:null}))),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"系统管理"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#系统管理"}),"#"),"系统管理"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"进程管理"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#进程管理"}),"#"),"进程管理"),Object(t.b)("p",null,"什么是进程"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"判断服务器健康状态"),Object(t.b)("li",{parentName:"ul"},"查看系统中所有进程"),Object(t.b)("li",{parentName:"ul"},"杀死进程")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"ps查看进程")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"ps aux"),": 查看系统中所有进程，使用BSD操作系统格式"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"ps -le"),": 查看系统中所有进程，使用Linux标准命令格式"),Object(t.b)("li",{parentName:"ul"},"选项",Object(t.b)("ul",{parentName:"li"},Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"a"),": "),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},""),": ")))),Object(t.b)("p",null,"输出："),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"USER"),Object(t.b)("li",{parentName:"ul"},"PID: 1表示第一个进程，它是所有进程的父进程。"),Object(t.b)("li",{parentName:"ul"},"%CPU"),Object(t.b)("li",{parentName:"ul"},"%MEM"),Object(t.b)("li",{parentName:"ul"},"VSZ: 占用的虚拟内存"),Object(t.b)("li",{parentName:"ul"},"RSS: 占用的真实内存"),Object(t.b)("li",{parentName:"ul"},"TTY: 本地终端号，tty1-tty6。tty7是图形化终端。远程终端可以有65536个pst/0。?是系统进程，不是用户启动的。"),Object(t.b)("li",{parentName:"ul"},"STAT: 进程状态",Object(t.b)("ul",{parentName:"li"},Object(t.b)("li",{parentName:"ul"},"S: 睡眠"),Object(t.b)("li",{parentName:"ul"},"R: 运行"),Object(t.b)("li",{parentName:"ul"},"T: 停止"))),Object(t.b)("li",{parentName:"ul"},"START: 进程启动时间"),Object(t.b)("li",{parentName:"ul"},"TIME: 进程耗费CPU运算时间"),Object(t.b)("li",{parentName:"ul"},"COMMAND: 进程名")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"pstree显示进程树")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"p"),": 显示进程pid"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"u"),": 显示进程的用户")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"top查看健康状态")),Object(t.b)("p",null,"每3s刷新一次，可以查看系统健康状态。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"d"),": 格几秒刷新一次，默认3s"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"b")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"n"),": 指定top命令执行的次数")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"top -b -n 1 > top.log\n")),Object(t.b)("p",null,"交互"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"?或h: 显示交互模式的帮助"),Object(t.b)("li",{parentName:"ul"},"P: 按cpu排序"),Object(t.b)("li",{parentName:"ul"},"M: 按内存使用率排序"),Object(t.b)("li",{parentName:"ul"},"N: PID排序"),Object(t.b)("li",{parentName:"ul"},"q：退出")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"杀死进程"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#杀死进程"}),"#"),"杀死进程"),Object(t.b)("p",null,"kill "),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"l"),": 查看信号")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 重启apache，不会影响链接的用户，会重新读取配置文件启动\nkill -1 1532\nkill -HUP 1532\n\n# 强制杀死进程\nkill -9 2236\n")),Object(t.b)("p",null,"杀死一组进程"),Object(t.b)("p",null,"killall ","[选项][信号]"," 进程名"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"i"),": 交互式，询问杀死进程"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"I"),": 忽略进程名大小写")),Object(t.b)("p",null,"pkill ","[选项][信号]"," 进程名"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"t"),": 终端号")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 踢掉登陆的用户\nw\npkill -9 -t pts/1\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"进程的优先级"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#进程的优先级"}),"#"),"进程的优先级"),Object(t.b)("p",null,"一个CPU在同一个时钟周期内只能运算一个指令。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"# 查看优先级\nps -le | grep httpd\n")),Object(t.b)("p",null,"PRI：priority，数字越小表示优先级越高，系统的\nNI: nice，用户能修改NI值，范围是-20 - 19,普通用户能改到0-19，root才能改称负值。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 修改优先级，nice只能改没有运行到进程\nnice -n -5 systemctl start httpd\n\n# renice修改已经存在的优先级\nrenice -10 1845\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"工作管理"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#工作管理"}),"#"),"工作管理"),Object(t.b)("p",null,"就是后台管理，通过jobs查看。因为执行一个大任务时，可能会持续一段时间什么都操作不了，所以需要放到后台。"),Object(t.b)("p",null,"放入后台方法"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"方法1: 在命令最后加 &，放入后台并执行"),Object(t.b)("li",{parentName:"ul"},"方法2: 按ctrl + z ，放入后台暂停")),Object(t.b)("p",null,"和用户交互的命令放入后台会变成Stopped，因为没有意义，如top(查看监控)，vi等。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 查看任务，l表示显示pid，+表示最后一个放入后台，-表示倒数第2个放入\njobs -l\n\n# 恢复到前台执行，%是为了和pid区别\nfg %工作号\n\n# 恢复到后台执行\nbg %工作号\n")),Object(t.b)("p",null,"终端放入后台的任务会随着终端关闭而停止，相当于发了个kill -1。"),Object(t.b)("p",null,"msyqld是守护进程， msyqld &和和系统一直启动，不会随着终端关闭。"),Object(t.b)("p",null,"后台命令一直运行的方法："),Object(t.b)("ol",null,Object(t.b)("li",{parentName:"ol"},"加入",Object(t.b)("inlineCode",{parentName:"li"},"/etc/rc.local/"),"文件中"),Object(t.b)("li",{parentName:"ol"},"定时任务"),Object(t.b)("li",{parentName:"ol"},Object(t.b)("inlineCode",{parentName:"li"},"nohup xx.sh &"),"命令手工执行，重启要重新执行。")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"查看系统资源"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#查看系统资源"}),"#"),"查看系统资源"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"vmstat [刷新延迟 刷新次数]"),"，返回结果字段：",Object(t.b)("ul",{parentName:"li"},Object(t.b)("li",{parentName:"ul"},"procs"),Object(t.b)("li",{parentName:"ul"},"swap"),Object(t.b)("li",{parentName:"ul"},"system",Object(t.b)("ul",{parentName:"li"},Object(t.b)("li",{parentName:"ul"},"in: 中断进程次数"))),Object(t.b)("li",{parentName:"ul"},"io: 磁盘读写信息字段",Object(t.b)("ul",{parentName:"li"},Object(t.b)("li",{parentName:"ul"},"bi:读入数据总量"),Object(t.b)("li",{parentName:"ul"},"bo: 写入数据总量"))),Object(t.b)("li",{parentName:"ul"})))),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"vmstat 1 3\n")),Object(t.b)("p",null,"缓存cache时用来加速数据从硬盘中读取的，因为从硬盘读数据慢(固态555mb/s)，缓冲buffer是用来加速数据写入硬盘的，可能并没有直接写入硬盘，而是积累到一定量一起写入。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"dmsg"),": 内核信息")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"dmsg | grep CPU\n")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"free: 查看内存使用状态，默认是k",Object(t.b)("ul",{parentName:"li"},Object(t.b)("li",{parentName:"ul"},"g: 以GK显示"),Object(t.b)("li",{parentName:"ul"},"m: 以mb显示")))),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 查看cpu信息\ncat /proc/cpuinfo\n\n# top命令第一句话\nuptime\n\n# 查看内核信息 -a内核信息 -s名称 -r版本\nuname -a\n\n# 查看操作系统位数\nfile /bin/ls\n\n# 查看发行版本\nlsb_release -a\n\n# 查看系统中所有进程调用的文件\nlsof | more\n# 查询某个文件被哪个进程调用\nlsof /sbin/init\n# 查看httpd进程调用了哪些文件\nlsof -c httpd\n# 按照用户名，查询某个用户的进程调用的文件名\nlsof -u root\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"定时任务"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#定时任务"}),"#"),"定时任务"),Object(t.b)("ol",null,Object(t.b)("li",{parentName:"ol"},"at一次执行")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/etc/at.allow"),": "),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/etc/at.deny"),": 不能运行at命令的用户，对root无效"),Object(t.b)("li",{parentName:"ul"},"如果这2个文件都不存在，则只有root可以执行",Object(t.b)("ul",{parentName:"li"},Object(t.b)("li",{parentName:"ul"},"m: at完成后，通过email通知用户"),Object(t.b)("li",{parentName:"ul"},"c 工作号：显示at工作的实际内容")))),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"at now + 2[minutes|hours|days|weeks]\nat 02:30\nat 02:30 2019-09-08\nat /bin/sync\nat /sbin/shutdown -r now\n\n# 查看at任务\natq\n\n# 查看任务的具体内容\nat -c 工作号\n\n# 删除指定的at任务\natrm 工作号\n")),Object(t.b)("ol",{start:2},Object(t.b)("li",{parentName:"ol"},"crontab循环定时执行")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 确认服务安装且自启动\nsystemctl restart crontab\nsystemctl list-unit-files\nsystemctl list-dependencies httpd  # 查看依赖的树\n")),Object(t.b)("p",null,"/etc/cron.allow 和 /etc/cron.deny"),Object(t.b)("p",null,"*/n 每隔n分钟执行"),Object(t.b)("p",null,"最小单位是分钟，命令写成绝对路径。因为定时任务的路径与$PATH不完全一样，在/etc/crontab里。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"crontab -e"),": 创建和编辑计划任务。保存在/tmp/crontab.xxx里，缓存可能被误删除。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"ctontab -l"),": 查看当前计划"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"crontab -r"),": 清除全部任务"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"-u"),": 编辑他人的计划任务")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 计划格式：分时日月星期命令，分必须是数字不能是*，日和星期只能用一个\n# 每周1，3，5执行打包命令，-可以表示连续时间周期，*/2表示执行任务的间隔时间\n25 3 * * 1,3,5 /usr/bin/tar -czvf backup.tar.gz /home/wwwroot\n")),Object(t.b)("p",null,"所有命令都要用绝对路径，使用whereis命令查询，如",Object(t.b)("inlineCode",{parentName:"p"},"whereis rm"),"。"),Object(t.b)("p",null,"方法2: 编辑",Object(t.b)("inlineCode",{parentName:"p"},"/etc/crontab"),"，centos5里这个文件有更多功能，它定义了cron.daily、cron.monthly等文件，只需在这些文件里写任务即可。\n最新这些文件的功能给了anacron来执行。旧的是crontab和anacron都执行。"),Object(t.b)("p",null,"方法3: 将需要执行的脚本复制到",Object(t.b)("inlineCode",{parentName:"p"},"/etc/cron.{hourly,daily,weekly,monthly}"),"目录中"),Object(t.b)("p",null,"比如自动更新 github 的脚本",Object(t.b)("inlineCode",{parentName:"p"},"w3croad_blog.cron"),":"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"#!/bin/bash\n\ncd /xx/oo/ && git pull\nexit 0\n")),Object(t.b)("p",null,"anacron 的配置，它只会检测上面几个目录中的任务。不会检测其它文件。"),Object(t.b)("p",null,"优点：比如刚好4点的时候电脑有问题关机了。它会开机后执行。在系统",Object(t.b)("inlineCode",{parentName:"p"},"/var/spool/anacron"),"目录下存在",Object(t.b)("inlineCode",{parentName:"p"},"cron.{daily,weekly, monthly}"),"（只能是天，因为记录的是日期）文件，里面记录了上次执行cron的时间，和当前时间比较，如果两个时间差值超过了anacron的执行时间差值，证明有cron任务被漏执行。检测周期是1天，7天，一个月。所以比较粗略，可能会延迟。不过服务器一般不会出问题。"),Object(t.b)("p",null,"在",Object(t.b)("inlineCode",{parentName:"p"},"/etc/anacrontab"),"里 "),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"RANDOM_DELAY: 随机延迟时间，错峰延迟。比如宕机重启后一堆任务分开时间。"),Object(t.b)("li",{parentName:"ul"},"START_HOURS_RANGE: 执行时间范围"),Object(t.b)("li",{parentName:"ul"},"天数 强制延迟(分) 工作名称 实际执行的命令"),Object(t.b)("li",{parentName:"ul"},"/usr/bin/run-parts"),Object(t.b)("li",{parentName:"ul"},"问题是：执行时间不确定")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},Object(t.b)("inlineCode",{parentName:"strong"},"cron.daily"),"工作流程"),"\n1. 读取",Object(t.b)("inlineCode",{parentName:"p"},"/var/spool/anacron/cron.daily"),"中上次执行时间\n2. 和当前时间比较，超过1天则执行 cron.daily\n3. 执行工作只能在 03:00-22:00 之间\n4. 强制延迟5分钟，再随机延迟45分钟\n5. 使用nice设置默认优先级，在使用run-parts脚本执行/etc/cron.daily目录中所有的可执行文件"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"vim编辑器"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#vim编辑器"}),"#"),"vim编辑器"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"复制"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#复制"}),"#"),"复制"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),'y^  复制到行首，或 y0\ny$  复制到行尾\nyw  复制一个word \ny2w 复制2个word\ny1G 复制到文件首\nyG  复制到文件尾\n"+y 将vim的内容复制到系统剪切板，可以 ctrl + v 粘贴\n')),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"剪切"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#剪切"}),"#"),"剪切"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"dd  剪切整行\nd^  剪切到行首\nd$  剪切到行尾\ndw  剪切一个word\ndG  剪切到文件尾\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"粘贴"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#粘贴"}),"#"),"粘贴"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),':reg 查看剪贴板状态，一共有12个剪贴板\n"Ny  复制第N个剪贴板的内容\nNp   粘贴第N个剪贴板的内容\n"+p  将系统剪切板内容粘贴到vim中\n')),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("a",l({parentName:"li"},{href:"https://blog.csdn.net/qidi_huang/article/details/52179279"}),"vim 复制/剪切/粘贴/撤销操作"))),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"磁盘管理"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#磁盘管理"}),"#"),"磁盘管理"),Object(t.b)("p",null,"文件系统层次化标准(FHS, filesystem hierarchy standard)。"),Object(t.b)("p",null,"linux文件和目录是区分大小写的，且名称不能包含",Object(t.b)("inlineCode",{parentName:"p"},"/"),"。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/boot"),": 开机所需文件，内核、开机菜单以及所需配置文件等。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/dev"),": 以文件形式存放任何设备与接口。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/etc"),": 配置文件。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/home"),": 用户主目录。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/bin"),": 存放单用户模式下还可以操作的命令。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/lib"),": 开机时用到的函数库，以及",Object(t.b)("inlineCode",{parentName:"li"},"/bin"),"与",Object(t.b)("inlineCode",{parentName:"li"},"sbin"),"下面的命令要调用的函数。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/sbin"),": 开机过程中需要的命令。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/media"),": 用于挂载设备文件的目录。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/opt"),": 放置第三方的软件。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/root"),": 系统管理员的家目录。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/srv"),": 一些网络服务的数据文件目录。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/tmp"),": 任何人均可使用的共享临时目录。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/proc"),": 虚拟文件系统，例如系统内核、进程、外部设备及网络状态等。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/usr/local"),": 用户自行安装的软件。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/usr/sbin"),": 系统开机时不会使用到的软件/命令/脚本。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/usr/share"),": 帮助与说明文件，也可放置共享文件。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/var"),": 主要存放经常变化的文件，如日志。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/lost+found"),": 当文件系统发生错误时，将一些丢失的文件片段存放在这里。")),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"物理设备的命名规则"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#物理设备的命名规则"}),"#"),"物理设备的命名规则"),Object(t.b)("p",null,"udev设备管理器服务决定了设备在/dev目录中的名称。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"IDE设备"),": ",Object(t.b)("inlineCode",{parentName:"li"},"/dev/hd[a-d]"),"。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"SCSI/SATA/U盘"),": ",Object(t.b)("inlineCode",{parentName:"li"},"/dev/fd[a-p]"),"。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"软驱"),": ",Object(t.b)("inlineCode",{parentName:"li"},"/dev/fd[0-1]"),"。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"打印机"),": ",Object(t.b)("inlineCode",{parentName:"li"},"/dev/lp[0-15]"),"。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"光驱"),": ",Object(t.b)("inlineCode",{parentName:"li"},"/dev/cdrom"),"。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"鼠标"),": ",Object(t.b)("inlineCode",{parentName:"li"},"/dev/mouse"),"。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"磁带机"),": ",Object(t.b)("inlineCode",{parentName:"li"},"/dev/st0"),"或",Object(t.b)("inlineCode",{parentName:"li"},"/dev/ht0"),"。")),Object(t.b)("p",null,"一般硬盘是",Object(t.b)("inlineCode",{parentName:"p"},"/dev/sd"),"开头，用",Object(t.b)("inlineCode",{parentName:"p"},"a-p"),"来代表16块不同的硬盘。硬盘的分区编号是主分区或扩展分区从1开始，4结束；逻辑分区从5开始。"),Object(t.b)("p",null,"系统内核识别主板插槽顺序，首先是",Object(t.b)("inlineCode",{parentName:"p"},"/dev/sda"),"。大多数主板的的插槽顺序就是系统内核的识别顺序。"),Object(t.b)("p",null,"分区的数字编码是可以手动指定的，不一定是从1...n延续下来的。"),Object(t.b)("p",null,"分析一下/dev/sda5这个设备文件名称包含哪些信息。/dev/目录中保存的应当是硬件设备文件；其次，sd表示是存储设备；然后，a表示系统中同类接口中第一个被识别到的设备，最后，5表示这个设备是一个逻辑分区。一言以蔽之，“/dev/sda5”表示的就是“这是系统中第一块被识别到的硬件设备中分区编号为5的逻辑分区的设备文件”。"),Object(t.b)("p",null,"简单说一下硬盘。"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"文件系统"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#文件系统"}),"#"),"文件系统"),Object(t.b)("p",null,"文件系统的作用是合理规划硬盘。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"Ext3"),": 是一款日志文件系统，能够在系统异常宕机时避免文件系统资料丢失，并能自动修复数据的不一致与错误。会把磁盘的写入都记录下来。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"Ext4"),": Ext3改进版本，作为RHEL6系统中的默认文件管理系统，支持存储容量高达1EB(1,073,741,824GB)，且能有无限多的子目录，能够批量分配block块，从而极大地提高读写效率。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"XFS"),": 一种高性能的日志文件系统，是RHEL7中默认的文件管理系统。发生意外宕机后尤其明显，即可以快速地恢复可能被破坏的文件，最大存储18EB。")),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"磁盘容量配额"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#磁盘容量配额"}),"#"),"磁盘容量配额"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"没有quota命令则安装quota。"),Object(t.b)("li",{parentName:"ul"},"可以限制用户的使用硬盘大小和文件个数。"),Object(t.b)("li",{parentName:"ul"},"分为软限制和硬限制，软限制在超出一定额度还能使用，超出硬限制会强制停止。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 开启用户的usrquota配额服务 \nvim /etc/fstab\n# UUID=812b1f7c-8b5b-43da-8c06-b9999e0fe48b /boot xfs defaults,uquota 1 2\nreboot\n# 看目录是否能配额\nmount | grep boot\n# /dev/sda1 on /boot type xfs (rw,relatime,seclabel,attr2,inode64,usrquota)\n\nuseradd tom\nchmod -Rf o+w /boot\n")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"xfs_quota"),"命令用于设置限额。-x表示要执行的命令，-x表示专家模式。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 硬盘使用量的软限制和硬限制分别为3MB和6MB；创建文件数量的软限制和硬限制分别为3个和6个。\nxfs_quota -x -c 'limit bsoft=3m bhard=6m isoft=3 ihard=6 tom' /boot\n\n# 查看\nxfs_quota -x -c report /boot\n\n# 测试\nsu - tom\ndd if=/dev/zero of=/boot/tom bs=5M count=1\n")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"edquota"),"命令用于编辑限额。-u表示对哪个用户设置，-g表示针对哪个用户组设置。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"edquota -u tom\n\n# 删除\nedquota -e tom\n")),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"软硬方式链接"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#软硬方式链接"}),"#"),"软硬方式链接"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"硬链接(hard link)"),"：指向原始文件的inode指针，系统不为它分配独立的inode和文件，所以原始文件和硬链接文件指向同一个文件，所以原始文件删除后，还是可以通过硬链接访问。每增加一个硬链接，该文件的inode连接数就加1，只有链接数为0时，才算彻底删除。技术限制，不能跨分区对目录文件进行链接。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"软链接(symbolic link,符号链接)"),"：就是快捷方式。")),Object(t.b)("p",null,"创建链接的方式是：",Object(t.b)("inlineCode",{parentName:"p"},"ln [选项] 目标"),"。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"s"),": 创建符号链接，默认创建硬链接。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"f"),": 强制创建文件或目录的链接。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"i"),": 覆盖前先询问。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"v"),": 显示创建链接的过程。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"ln readme.txt 1.txt\nls -l readme.txt\n# 这里的2是硬链接数\n-rw-r--r-- 2 root root 26 Jan 11 00:13 readme.txt\n")),Object(t.b)("p",null,"Linux 删除用户 userdel 时提示被进程占用 is currently used by process"),Object(t.b)("p",null,"因为切换过用户。ctrl+d退出登陆。"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"用户管理"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#用户管理"}),"#"),"用户管理"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"权限管理"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#权限管理"}),"#"),"权限管理"),Object(t.b)("p",null,"UID(User IDentification)相当于身份证号，root的UID是0."),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"管理员UID为0: 系统的管理员用户。"),Object(t.b)("li",{parentName:"ul"},"系统用户UID为1-999：linux系统为了避免某个服务程序有漏洞而被黑客提权到整台服务器，默认服务程序会有独立系统用户负责运行。"),Object(t.b)("li",{parentName:"ul"},"普通用户UID从1000开始：管理员创建的用户。")),Object(t.b)("p",null,"用户组：GID，Group IDentification。"),Object(t.b)("p",null,"每个用户创建时，自动创建了一个同名基本用户组。纳入其它组后，其它组叫做扩展用户组，一个用户可以有多个扩展用户组。"),Object(t.b)("h4",null,Object(t.b)("a",l({parentName:"h4"},{"aria-hidden":!0,className:"anchor",id:"useradd"})),Object(t.b)("a",l({parentName:"h4"},{"aria-hidden":!0,className:"hash-link",href:"#useradd"}),"#"),"useradd"),Object(t.b)("p",null,"useradd 命令用于创建新的用户，格式为",Object(t.b)("inlineCode",{parentName:"p"},"useradd [选项] 用户名"),"。创建时，默认家目录在",Object(t.b)("inlineCode",{parentName:"p"},"/home"),"目录下，默认Shell解释器为/bin/bash，默认创建一个同名基本用户组。可以通过下面参数修改："),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"d"),": 执行家目录，默认为",Object(t.b)("inlineCode",{parentName:"li"},"/home/username"),"。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"e"),": 账户的到期时间，格式为",Object(t.b)("inlineCode",{parentName:"li"},"YYYY-MM-DD"),"。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"u"),": 指定该用户的默认UID。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"g"),": 指定一个初始的用户基本组(必须已存在)。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"G"),": 指定一个或多个扩展用户组。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"N"),": 不创建与用户同名的基本用户组。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"s"),": 指定该用户的默认Shell解释器。")),Object(t.b)("p",null,"通过",Object(t.b)("inlineCode",{parentName:"p"},"cat /etc/passwd"),"查看用户。"),Object(t.b)("h4",null,Object(t.b)("a",l({parentName:"h4"},{"aria-hidden":!0,className:"anchor",id:"groupadd"})),Object(t.b)("a",l({parentName:"h4"},{"aria-hidden":!0,className:"hash-link",href:"#groupadd"}),"#"),"groupadd"),Object(t.b)("p",null,"groupadd 命令用于创建用户组，格式为",Object(t.b)("inlineCode",{parentName:"p"},"groupadd [选项] 群组名"),"。"),Object(t.b)("h4",null,Object(t.b)("a",l({parentName:"h4"},{"aria-hidden":!0,className:"anchor",id:"usermod"})),Object(t.b)("a",l({parentName:"h4"},{"aria-hidden":!0,className:"hash-link",href:"#usermod"}),"#"),"usermod"),Object(t.b)("p",null,"usermod 命令用于修改用户的属性，格式为",Object(t.b)("inlineCode",{parentName:"p"},"usermod [选项] 用户名"),"。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"c"),": 填写用户账户的备注信息。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"dm"),":连用可以重新指定用户家目录并自动把旧的数据转移过去。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"e"),": 账户到期时间，格式为",Object(t.b)("inlineCode",{parentName:"li"},"YYYY-MM-DD"),"。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"g"),": 变更所属用户组。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"G"),": 变更扩展用户组。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"L"),": 锁定用户禁止其登陆系统。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"U"),": 解锁用户，允许其登陆系统。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"s"),": 变更默认终端。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"u"),": 修改用户UID。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 查看用户\nid banli\n\n# 修改用户组\nusermod -G root banli\n")),Object(t.b)("h4",null,Object(t.b)("a",l({parentName:"h4"},{"aria-hidden":!0,className:"anchor",id:"passwd"})),Object(t.b)("a",l({parentName:"h4"},{"aria-hidden":!0,className:"hash-link",href:"#passwd"}),"#"),"passwd"),Object(t.b)("p",null,"passwd 命令用于修改用户密码，过期时间，认证信息等。格式为",Object(t.b)("inlineCode",{parentName:"p"},"passwd [选项] 用户名"),"。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"l"),": 锁定用户，禁止其登陆。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"u"),": 解除锁定，允许用户登陆。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"--stdin"),": 允许通过标准输入修改用户密码，如",Object(t.b)("inlineCode",{parentName:"li"},"echo 'newpassword' | passwd --stdin banli"),"。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"d"),": 使该用户可以空密码登陆。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"e"),": 强制用户下次登陆时修改密码。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"S"),": 显示用户的密码是否被锁定，以及密码的加密算法。")),Object(t.b)("h4",null,Object(t.b)("a",l({parentName:"h4"},{"aria-hidden":!0,className:"anchor",id:"userdel"})),Object(t.b)("a",l({parentName:"h4"},{"aria-hidden":!0,className:"hash-link",href:"#userdel"}),"#"),"userdel"),Object(t.b)("p",null,"userdel 命令用于删除用户，格式为",Object(t.b)("inlineCode",{parentName:"p"},"userdel [选项] 用户名"),"。默认不会删除用户的家目录。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"f"),": 强制删除用户。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"r"),": 同时删除用户及家目录。")),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"文件权限与归属"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#文件权限与归属"}),"#"),"文件权限与归属"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"-"),": 普通文件"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"d"),": 目录文件"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"l"),": 链接文件"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"b"),": 块设备文件"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"c"),": 字符设备文件"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"p"),": 管道文件")),Object(t.b)("p",null,"文件或组的权限:"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"r"),": 4，可读。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"w"),": 2，可写，能够编辑、新增、修改、删除。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"x"),": 1，可执行，能够运行一个脚本程序。")),Object(t.b)("p",null,"对目录来说，可读表示可读取目录内文件列表；可写表示能在目录新增、删除、重命名文件；可执行表示能够进入目录。"),Object(t.b)("p",null,"7表示可读写、可执行；6表示可读写。"),Object(t.b)("p",null,"文件权限字符",Object(t.b)("inlineCode",{parentName:"p"},"rwxrw-r--"),"，分别表示文件所有者、文件所属组、其它用户的权限。这个权限数字是764。"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"文件的特殊权限"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#文件的特殊权限"}),"#"),"文件的特殊权限"),Object(t.b)("p",null,"单纯rwx有时无法满足需求。所以有了SUID、SGID、SBIT等特殊权限位。"),Object(t.b)("p",null,"SUID: 对二进制程序临时设置的特殊权限。比如passwd可以修改密码，但是密码保存在/etc/shadow中，这个文件的默认权限是000，只有root可以操作。但是加上SUID特殊权限位，普通用户就也可以操作了。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"ls -l /etc/shadow\n----------\nls -l /bin/passwd\n-rwsr-xr-x\n")),Object(t.b)("p",null,"如果权限上没有x，那么赋予特殊权限后会变成S。"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"sgid"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#sgid"}),"#"),"SGID"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"文件的隐藏属性"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#文件的隐藏属性"}),"#"),"文件的隐藏属性"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"su和sudo"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#su和sudo"}),"#"),"su和sudo"),Object(t.b)("p",null,"su 命令用户切换到其它用户，可以使用",Object(t.b)("inlineCode",{parentName:"p"},"-"),"将环境变量等都切换。但这样可能会泄露root密码。"),Object(t.b)("p",null,"sudo 命令把特定命令权限赋予指定用户。格式为",Object(t.b)("inlineCode",{parentName:"p"},"sudo [参数] 命令名称"),"。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"h"),": 列出帮助信息。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"l"),": 列出用户可执行命令。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"u"),": 以指定的用户身份执行命令。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"k"),": 清空密码的有效时间，下次执行sudo需要重新输入密码。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"b"),": 在后台执行指定的命令。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"p"),": 更改询问密码的提示语。")),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"vim"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#vim"}),"#"),"vim"),Object(t.b)("p",null,"vim的3种模式："),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("p",{parentName:"li"},"命令模式: 可以控制光标移动，可以复制、粘贴、删除、查找。"),Object(t.b)("ul",{parentName:"li"},Object(t.b)("li",{parentName:"ul"},"dd: 删除行"),Object(t.b)("li",{parentName:"ul"},"5dd: 删除5行"),Object(t.b)("li",{parentName:"ul"},"yy: 复制行"),Object(t.b)("li",{parentName:"ul"},"5yy: 复制5行"),Object(t.b)("li",{parentName:"ul"},"n: 搜索命令定位到下一个字符"),Object(t.b)("li",{parentName:"ul"},"N: 搜索命令定位到上一个字符"),Object(t.b)("li",{parentName:"ul"},"u: 撤销上一步操作"),Object(t.b)("li",{parentName:"ul"},"p: 粘贴"),Object(t.b)("li",{parentName:"ul"},"c: 复制字符"))),Object(t.b)("li",{parentName:"ul"},Object(t.b)("p",{parentName:"li"},"输入模式")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("p",{parentName:"li"},"末行模式: 可以保存或退出文档，以及设置编辑环境，输入冒号",Object(t.b)("inlineCode",{parentName:"p"},":"),"切换到该模式。"),Object(t.b)("ul",{parentName:"li"},Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},":w"),": 保存"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},":q"),": 退出"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},":q!"),": 强制退出，放弃文档的修改"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},":wq!"),": 强制保存退出"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},":set nu"),": 显示行号"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},":set nonu"),": 不显示行号"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},":命令"),":  执行该命令"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},":整数"),":  光标跳转到改行"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},":s/one/two"),": 将当前光标坐在行的第一个one替换成two"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},":s/one/two/g"),": 将当前光标所在行的所有one替换成two"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"%s/one/two/g"),": 将全文所有one替换成two"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"?字符串"),": 在文本中从下往上搜索字符串"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/字符串"),": 在文本中从上往下搜索字符串")))),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"配置主机名称"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#配置主机名称"}),"#"),"配置主机名称"),Object(t.b)("p",null,"主机名一般保存在",Object(t.b)("inlineCode",{parentName:"p"},"/etc/hostname"),"文件中。需要修改后重启主机，然后用",Object(t.b)("inlineCode",{parentName:"p"},"hostname"),"命令查看。"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"配置网卡信息"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#配置网卡信息"}),"#"),"配置网卡信息"),Object(t.b)("p",null,"网卡信息保存在",Object(t.b)("inlineCode",{parentName:"p"},"/etc/sysconfig/network-scripts/"),"中。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 编辑\nvim /etc/sysconfig/network-scripts/ifcfg-ens33\nTYPE=Ethernet\nBOOTPROTO=static\nNAME=eno16777736\nONBOOT=yes\nIPADDR=192.168.10.10\nNETMASK=255.255.255.0\nGATEWAY=192.168.10.1\nDNS1=192.168.10.1\n\n# 重启网卡设备\nsystemctl restart network\n")),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"配置yum软件仓库"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#配置yum软件仓库"}),"#"),"配置Yum软件仓库"),Object(t.b)("ol",null,Object(t.b)("li",{parentName:"ol"},"进入",Object(t.b)("inlineCode",{parentName:"li"},"/etc/yum.repos.d"),"，里面有yum配置文件。"),Object(t.b)("li",{parentName:"ol"},"新建",Object(t.b)("inlineCode",{parentName:"li"},"rhel7.repo"),"配置文件。")),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"编写shell脚本"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#编写shell脚本"}),"#"),"编写Shell脚本"),Object(t.b)("p",null,"Shell脚本有2种：交互式和批处理。"),Object(t.b)("p",null,"下面是一个简单的shell脚本",Object(t.b)("inlineCode",{parentName:"p"},"a.sh"),"。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"[root@localhost ~]# vim example.sh #!/bin/bash\n#For Example BY linuxprobe.com\npwd\nls -al\n")),Object(t.b)("p",null,"然后使用",Object(t.b)("inlineCode",{parentName:"p"},"bash a.sh"),"即可执行。还可以用路径来执行，如",Object(t.b)("inlineCode",{parentName:"p"},"./a.sh"),"，但是提示权限不足，只需要增加权限就行了。"),Object(t.b)("p",null,"给shell传参数。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"$0"),": 脚本名称"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"$n"),": 第几个参数"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"$#"),": 参数个数"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"$*"),": 参数集合"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"$?"),": 上一次命令的执行返回值")),Object(t.b)("p",null,"条件语句的格式是",Object(t.b)("inlineCode",{parentName:"p"},"[ 条件表达式 ]"),"。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"-d"),": 测试文件是否是目录。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"-e"),": 测试文件是否存在。0表示存在，1表示不存在。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"-f"),": 是否是一般文件。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"-r"),": 是否有权限读取。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"-w"),": 是否有权限写入。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"-x"),": 是否有权限执行。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"[ -e /etc/fstab ] \necho $?   # 0 表示存在\n\n# 逻辑与\n[ -e /etc/fstab ] && echo 'ok'\n[ $USER = root] && echo 'admin'\n\n# 逻辑或\n[ -e /etc/fstab1 ] || echo 'error'\n\n# 逻辑非\n[ ! -e /etc/fstab1 ] \n\n# 数字的比较不能用 > = <\n[ 5 -eq 5]\n[ 5 -gt 8]\n[ 5 -le 3]\n")),Object(t.b)("p",null,"剩余内存多少时报警"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"# 提取第四列\n[ `free -m  | grep Mem: | awk '{print $4}'` -lt 1024 ] && echo '内存不足'\n[ `free -m  | grep Mem: | awk '{print $4}'` -lt 1024 ] && mail -s memory root@xx.com\n")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"z"),": 判断String变量是否为空值"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"="),": 比较相等"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"!="),": 不相等")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"[ -z $hello ]\necho $?   # 0没有被用\n")),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"if语句"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#if语句"}),"#"),"if语句"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"#!/bin/bash\n# 如果目录不存在，则创建\nif [ ! -e /media/haha ]\nthen\nmkdir -p /media/haha\nfi\n")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"#!/bin/bash\n# ping 3次，每次延迟0.2s，超时时间为3s， 写入到 /dev/null，这里会自动销毁，黑洞\nping -c 3 -i 0.2 -W 3 $> /dev/null\nif [ $? -eq 0]\nthen \necho 'Host $1 is on-line'\nelse\necho 'Host $1 is off-line'\nfi\n")),Object(t.b)("p",null,"输入的值赋给GRADE"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"#!/bin/bash\nread -p 'Enter:' GRADE\nif [ $GRADE -ge 85 ] && [ $GRADE -le 100 ] ; then\necho 'excellent' \nelif [ $GRADE -gt 70 ] &&  [ $GRADE -le 84 ] ; then\necho 'pass'\nelse \necho 'fail'\nfi\n")),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"forin语句"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#forin语句"}),"#"),"for...in语句"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),'#!/bin/bash\nread -p "Enter:" PASSWD\nfor UNAME in `cat a.txt`\ndo \nid $UNAME $> /dev/null\nif [ $? -eq 0 ]\nthen \necho "Already exists"\nelse \nuseradd $UNAME $> /dev/null\necho "$PASSWD" | passwd --stdin $UNAME\nif [ $ -eq 0 ]\nthen \necho "$UNAME, Create success"\nelse\necho "$UNAME, Create failure"\nfi\nfi \ndone\n')),Object(t.b)("p",null,Object(t.b)("inlineCode",{parentName:"p"},"$(cat ~/ipadds.txt)"),"中的$(命令)类似于","`","命令","`","。"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"while循环"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#while循环"}),"#"),"while循环"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),'#!/bin/bash\nPRICE=$(expr $RANDOM % 1000)\nTIMES=0\necho "商品实际价格为0-999之间，猜猜看是多少？"\nwhile true\ndo\nread -p "请输入您猜测的价格数目：" INT\nlet TIMES++\nif [ $INT -eq $PRICE ] ; then\necho "恭喜您答对了，实际价格是 $PRICE"\necho "您总共猜测了 $TIMES 次"\nexit 0\nelif [ $INT -gt $PRICE ] ; then\necho "太高了！"\nelse\necho "太低了！"\nfi\ndone\n')),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"case"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#case"}),"#"),"case"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),'#!/bin/bash\nread -p "请输入一个字符，并按Enter键确认：" KEY\ncase "$KEY" in\n[a-z]|[A-Z])   # 模式1\necho "您输入的是 字母。"\n;;             # 模式结束符\n[0-9])         # 模式2\necho "您输入的是 数字。"\n;;\n*)             # 通配模式\necho "您输入的是 空格、功能键或其他控制字符。"\nesac\n')),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"计划任务服务程序"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#计划任务服务程序"}),"#"),"计划任务服务程序"),Object(t.b)("p",null,"分为一次性与长期性计划任务："),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"一次性")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"at 时间"),": 开启计划命令，ctrl+d 结束编写计划。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"at -l"),": 查看已经设置好，还未执行的一次性计划。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"atrm 任务序号"),": 删除")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"at 23:30\n")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"长期性")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"crontab -e"),": 创建和编辑计划任务。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"ctontab -l"),": 查看当前计划"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"crontab -r"),": 删除"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"-u"),": 编辑他人的计划任务")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 计划格式：分时日月星期命令，分必须是数字不能是*，日和星期只能用一个\n# 每周1，3，5执行打包命令，-可以表示连续时间周期，*/2表示执行任务的间隔时间\n25 3 * * 1,3,5 /usr/bin/tar -czvf backup.tar.gz /home/wwwroot\n")),Object(t.b)("p",null,"所有命令都要用绝对路径，使用whereis命令查询，如",Object(t.b)("inlineCode",{parentName:"p"},"whereis rm"),"。"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"网络管理"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#网络管理"}),"#"),"网络管理"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"管道符、重定向与环境变量"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#管道符、重定向与环境变量"}),"#"),"管道符、重定向与环境变量"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"输入输出重定向"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#输入输出重定向"}),"#"),"输入输出重定向"),Object(t.b)("p",null,"输入重定向：把文件导入命令中。\n输出重定向：把原本要输出到屏幕的数据信息写入指定文件中。"),Object(t.b)("p",null,"输出用的多：分为标准输出和错误输出重定向，模式分为清空写入和追加写入"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"标准输入重定向(STDIN, 文件描述符为 0): 默认从键盘输入，也可以从文件或命令中输入。"),Object(t.b)("li",{parentName:"ul"},"标准输出重定向(STDOUT，文件描述符为 1): 默认输出到屏幕。"),Object(t.b)("li",{parentName:"ul"},"错误输出重定向(STDERR, 文件描述符为 2): 默认输出到屏幕。")),Object(t.b)("p",null,"输入重定向"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"命令 < 文件")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"命令 << 分界符")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"命令 < 文件1 > 文件2"))),Object(t.b)("p",null,"输出重定向"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"命令 > 文件"),": 将标准输出重定向到文件中。(清空原数据)，如果是错误输出用了这个命令，则会清空掉文件。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"命令 2> 文件"),": 将错误输出重定向到一个文件中。(清空原数据)"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"命令 >> 文件"),": 将标准输出重定向到一个文件中。(追加原数据后面)"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"命令 >> 文件 2>&1"),"或",Object(t.b)("inlineCode",{parentName:"li"},"命令 &>> 文件"),":将标准和错误输出重定向到一个文件中。(追加原数据后面) ")),Object(t.b)("p",null,"标准输出模式文件描述符1可以不写。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 输入重定向，讲readme.txt文件导入给wc -l 命令\nwc -l < readme.txt\n\n# 标准输出重定向\necho 'hello' > a.txt\n\n# 错误输出重定向，xx.txt文件不存在\nls xx.txt 2> a.txt\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"管道命令符"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#管道命令符"}),"#"),"管道命令符"),Object(t.b)("p",null,"管道命令符的作用是把前一个命令原本要输出到屏幕的标准正常数据当作是后一个命令的标准输入，格式为",Object(t.b)("inlineCode",{parentName:"p"},"命令A | 命令B"),"。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 找出被限制登陆用户的个数\ngrep '/sbin/nologin' /etc/passwd | wc -l\n\n# 重置密码\necho 'root' | passwd --stdin root\n\n# 邮件发送，需要安装mailx\necho 'content' | mail -s 'Subject' root\nsu - root\nmail\n\n# 一直输入到自定义分界符over，才结束\nmail -s 'readme' root@xx.com << over\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"命令行通配符"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#命令行通配符"}),"#"),"命令行通配符"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"*"),": 匹配任何多个任意字符。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"?"),": 匹配单个任意字符。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"[0-9]"),": 匹配单个字符。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"ls -l /dev/sda*\nls -l /dev/sda[0-9]\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"常用转义字符"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#常用转义字符"}),"#"),"常用转义字符"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"反斜杠(\\)"),":使反斜杠后面的一个变量变为单纯的字符串。 "),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"单引号('')"),":转义其中所有的变量为单纯的字符串。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},'双引号("")'),":保留其中的变量属性，不进行转义处理。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"反引号(``)"),":把其中的命令执行后返回结果。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),'echo "price is $price"\n# price is 5\n\n# $$ 表示当前程序的进程ID\necho "price is $$price"\n# price is 3767price\n\n# 输出$5\necho "price is \\$$price"\n# price is $5\n\n# 执行命令\necho `uname -a`\n')),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"重要的环境变量"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#重要的环境变量"}),"#"),"重要的环境变量"),Object(t.b)("p",null,"命令的执行步骤："),Object(t.b)("ol",null,Object(t.b)("li",{parentName:"ol"},"如果用户以绝对路径或相对路径输入命令(如/bin/ls)，则直接执行。"),Object(t.b)("li",{parentName:"ol"},"检查命令是否有别名命令，查看或设置别名命令通过",Object(t.b)("inlineCode",{parentName:"li"},"alias 别名=命令"),"，可以通过",Object(t.b)("inlineCode",{parentName:"li"},"unalias 别名"),"取消别名。删除命令",Object(t.b)("inlineCode",{parentName:"li"},"rm"),"实际是",Object(t.b)("inlineCode",{parentName:"li"},"rm -i"),"的别名。"),Object(t.b)("li",{parentName:"ol"},"Bash解释器判断用户输入的是内部命令还是外部命令。内部命令是解释器内部的指令，会被直接执行；外部命令交给第4步处理，通过",Object(t.b)("inlineCode",{parentName:"li"},"type 命令名称"),"查看命令是外部还是内部命令。"),Object(t.b)("li",{parentName:"ol"},"系统在多个路径查找用户输入的命令文件，定义这个路径的变量是",Object(t.b)("inlineCode",{parentName:"li"},"PATH"),"。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"echo $PATH;\n\n# 添加PATH\nPATH = $PATH:/root/bin\n")),Object(t.b)("p",null,"为什么不能将当前目录(.)添加到PATH中？可以添加，但是如果黑客在比较常用的公共目录/tmp放了一个ls或cd命令同名的木马文件，用户恰好在这个目录执行了这些命令，很有可能中招。所以不要添加。"),Object(t.b)("p",null,"重要的10个环境变量:"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"HOME"),": 用户的主目录。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"SHELL"),": 用户在使用的Shell解释器名称。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"HISTSIZE"),": 输出的历史命令记录条数。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"HISTFILESIZE"),": 保存的历史命令记录条数。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"MAIL"),": 邮件保存路径。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"LANG"),": 系统语言、语系名称。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"RANDOM"),"：生成一个随机数。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"PS1"),": Bash解释器的提示符。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"PATH"),": 解释器搜索用户执行命令的路径。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"EDITOR"),": 用户默认文本编辑器。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"# 定义变量，只有自己能用\nWORKDIR=/home/workdir\n\n# export将变量提升为全局变量，其他用户也能用\nexport WORKDIR\n")),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"系统安装"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#系统安装"}),"#"),"系统安装"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"文件搜索命令"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#文件搜索命令"}),"#"),"文件搜索命令"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"帮助命令"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#帮助命令"}),"#"),"帮助命令"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"远程连接ssh专题"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#远程连接ssh专题"}),"#"),"远程连接SSH专题"),Object(t.b)("p",null,"sudo vi /etc/ssh/sshd_config"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"ssh连接时间设置"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#ssh连接时间设置"}),"#"),"ssh连接时间设置"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"# 打开sshd_config文件\ncd /etc/ssh\nvim sshd_config\n\n# 修改ssh_config文件里属性\nClientAliveInterval 300   # 我的腾讯云貌似这个设置长一点有效，下面一个属性无效\nClientAliveCountMax 10\n\n# 重启ssh服务\nservice sshd reload\n")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"ClientAliveInterval"),": 多久向客户端发送请求，单位是秒"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"ClientAliveCountMax"),": 超过多少次没被客户端响应，结束连接")),Object(t.b)("p",null,"所以上面的设置是 300s * 10 = 50分钟，如果客户端没有响应则断开连接。"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"apache-nginx--数据库"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#apache-nginx--数据库"}),"#"),"apache +nginx + 数据库"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"缓存服务"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#缓存服务"}),"#"),"缓存服务"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"git"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#git"}),"#"),"git"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"php框架tp5，lavaral-yii20-环境配置"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#php框架tp5，lavaral-yii20-环境配置"}),"#"),"Php框架TP5，Lavaral Yii2.0 环境配置"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"python运行环境"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#python运行环境"}),"#"),"python运行环境"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"监控神器zabbix"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#监控神器zabbix"}),"#"),"监控神器Zabbix"),Object(t.b)("p",null,Object(t.b)("a",l({parentName:"p"},{href:"https://www.centos.org/download/"}),"https://www.centos.org/download/"),"\n引导固件\n传统 BIOS\nUEFI"),Object(t.b)("p",null,"内存设置为2GB，不低于1GB，也不用设置太大"),Object(t.b)("p",null,"桥接模式：相当于物理主机与虚拟机网卡架设了桥梁，可以通过屋里主机网卡访问外网。\nNAT模式: Network Address Translation,网络地址转换，转成和物理主机类似的ip，用VMnet8\n仅主机模式：虚拟机可以访问物理主机，不能访问外网，用 VMnet1与物理主机连接"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"重置root密码"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#重置root密码"}),"#"),"重置root密码"),Object(t.b)("p",null,"查看版本"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"[root@localhost ~]# cat /etc/redhat-release\nRed Hat Enterprise Linux Server release 7.0 (Maipo)\n")),Object(t.b)("p",null,"重启系统(按上下键)，进入引导页，选择第一个，按e进行编辑，在linux16行最后添加",Object(t.b)("inlineCode",{parentName:"p"},"rd.break"),"，然后",Object(t.b)("inlineCode",{parentName:"p"},"Ctrl+x"),"运行修改后的程序。进入紧急求助模式。在输入下面命令："),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 挂载根目录\nmount -o remount,rw / \n# 修改密码\npasswd root\n# 更新系统信息\ntouch /.autorelabel   \n# 退出重启\nexit \nreboot\n")),Object(t.b)("p",null,"CentOS7怎么把系统默认语言从中文设置为英文"),Object(t.b)("p",null,"sudo localectl set-locale LANG=en_US.utf8"),Object(t.b)("p",null,"物理主机ssh连虚拟机linux"),Object(t.b)("p",null,"虚拟机设置成桥接模式，ip addr查看ip"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"systemd初始化进程"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#systemd初始化进程"}),"#"),"systemd初始化进程"),Object(t.b)("p",null,"linux操作系统的开机过程：BIOS -> Boot Loader -> 加载系统内核 -> 内核初始化 -> 启动初始化进程（7 用systemd代替了System V init，采用并发启动机制）"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"# 服务名的.service可以省略\nsystemctl start foo.service\nsystemctl restart foo.service\nsystemctl stop foo.service\nsystemctl reload foo.service\nsystemctl status foo.service\n\n# 设置开机启动\nsystemctl enable foo.service \nsystemctl disable foo.service\nsystemctl is-enabled foo.service  # 查看服务是否开机启动\n\n# 查看各个级别下服务的启动和禁止情况\nsystemctl list-unit-files --type=service\n")),Object(t.b)("p",null,"RPM 是为了简化安装的复杂度，而 Yum 软件仓库是为了解决软件包之间的依赖关系。"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"常用系统工作命令-1"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#常用系统工作命令-1"}),"#"),"常用系统工作命令"),Object(t.b)("p",null,"echo: 用于输出字符串或变量。",Object(t.b)("inlineCode",{parentName:"p"},"echo [字符串|$变量]")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"echo linux\necho $SHELL\n")),Object(t.b)("p",null,"date: 打印日期，可以输入+自定义格式"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"%t tab"),Object(t.b)("li",{parentName:"ul"},"%H 小时00-23"),Object(t.b)("li",{parentName:"ul"},"%I 小时00-12"),Object(t.b)("li",{parentName:"ul"},"%M 分钟"),Object(t.b)("li",{parentName:"ul"},"%S 秒"),Object(t.b)("li",{parentName:"ul"},"%j 今年中的第几天")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"# 2019-04-14 03:03:12\ndate '+%Y-%m-%d %H:%M:%S'\n\n# 设置系统时间\ndate -s \"20170901 8:30:00\"\n\n# 插件当前是今年第几天\ndate '+%j'\n")),Object(t.b)("p",null,"只有root权限才可以\nreboot: 重启\npoweroff: 关机"),Object(t.b)("p",null,"wget: 下载网络文件"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"-b 后台下载模式"),Object(t.b)("li",{parentName:"ul"},"-P 下载到指定目录"),Object(t.b)("li",{parentName:"ul"},"-t 最大尝试次数"),Object(t.b)("li",{parentName:"ul"},"-c 断点续传"),Object(t.b)("li",{parentName:"ul"},"-p 下载页面中所有资源，包括图片、视频"),Object(t.b)("li",{parentName:"ul"},"-r 递归下载")),Object(t.b)("p",null,"ps: 查看系统进程状态，格式是",Object(t.b)("inlineCode",{parentName:"p"},"ps [参数]")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"-a"),": 显示所有进程（包括其他用户进程）"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"-u"),": 用户及其他详细信息"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"-x"),"：显示没有控制终端的进程")),Object(t.b)("p",null,"进程状态："),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"R（run）: 进程正在运行或在运行队列中等待。"),Object(t.b)("li",{parentName:"ul"},"S (stop): 休眠，当某个条件形成或接收到信号后，则脱离该状态。"),Object(t.b)("li",{parentName:"ul"},"D (不可中断): 进程不响应系统异步信号，即使kill也不能中断。"),Object(t.b)("li",{parentName:"ul"},"Z (僵死): 进程已经终止，但进程描述符仍然存储，直到父进程调用",Object(t.b)("inlineCode",{parentName:"li"},"wait4()"),"系统函数将进程释放。"),Object(t.b)("li",{parentName:"ul"},"T (停止): 进程收到信号后停止运行。")),Object(t.b)("p",null,"命令参数有长格式(--)，短格式(-)，只有短格式之间能合并，而且可以不加-"),Object(t.b)("p",null,"top: 用于动态监视进程活动与系统负载等信息。"),Object(t.b)("p",null,"前5行是系统整体的统计信息\n第1行：系统时间、运行时间、登陆终端数、系统负载（三个数值分别是1分钟、5分钟、15分钟内的平均值，数值越小负载越低）\n第2行：进程总数、运行中的进程数、睡眠中的进程数、停止的进程数、僵死的进程数。\n第3行：用户占用资源百分比、系统内核占用资源百分比、改变过优先级的进程资源百分比、空闲资源百分比等。\n第4行：物理内存总量、内存使用量、内存空闲量、作为内存缓存的内存量。\n第5行：虚拟内存总量、虚拟内存使用量、虚拟内存空闲量、已被提前加载的内存量。"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"pidof-命令-1"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#pidof-命令-1"}),"#"),"pidof 命令"),Object(t.b)("p",null,"用于查询某个指定服务进程的 PID 值，格式是",Object(t.b)("inlineCode",{parentName:"p"},"pidof [参数] [服务名称]"),"。每个进程的进程号码值(PID)是唯一的。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"[root@localhost ~]# pidof sshd\n7116\n")),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"版本"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#版本"}),"#"),"版本"),Object(t.b)("p",null,"分为内核版本和发型版本"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"kernel 内核版")),Object(t.b)("p",null,"各个厂商会制作自己的发行版本"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"redhat"),Object(t.b)("li",{parentName:"ul"},"CentOS"),Object(t.b)("li",{parentName:"ul"},"debian"),Object(t.b)("li",{parentName:"ul"},"ubuntu"),Object(t.b)("li",{parentName:"ul"},"fedora")),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"linux和windows区别"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#linux和windows区别"}),"#"),"linux和windows区别"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"linux区分大小写"),Object(t.b)("li",{parentName:"ul"},"linux所有内容都是以文件形式保存，包括硬件、用户和文件"),Object(t.b)("li",{parentName:"ul"},"linux不靠扩展名区分文件类型，是靠权限来区分，但是有一些约定的扩展名，是给管理员看的",Object(t.b)("ul",{parentName:"li"},Object(t.b)("li",{parentName:"ul"},"压缩包 .gz .bz2 .tar.bz2 .tgz"),Object(t.b)("li",{parentName:"ul"},"二进制文件 .rpm"),Object(t.b)("li",{parentName:"ul"},"网页文件 .html .php"),Object(t.b)("li",{parentName:"ul"},"脚本文件 .sh"),Object(t.b)("li",{parentName:"ul"},"配置文件 .conf"))),Object(t.b)("li",{parentName:"ul"},"Windows下的程序不能直接在Linux中安装和运行"),Object(t.b)("li",{parentName:"ul"},"Linux更多使用字符界面",Object(t.b)("ul",{parentName:"li"},Object(t.b)("li",{parentName:"ul"},"占用的系统资源更少"),Object(t.b)("li",{parentName:"ul"},"减少了出错和被攻击的可能性，会让系统更稳定")))),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"虚拟机知识"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#虚拟机知识"}),"#"),"虚拟机知识"),Object(t.b)("p",null,"虚拟机是一个可以在本机上模拟电脑的软件。可以虚拟新的硬件环境，可以装软件。常用的虚拟机：vmware8、virtualbox。"),Object(t.b)("p",null,"虚拟机会在本机生成下面2个虚拟机网卡(查看网络属性):"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"Vmware Virtual Ethernet Adapter For VMnet1"),Object(t.b)("li",{parentName:"ul"},"Vmware Virtual Ethernet Adapter For VMnet8")),Object(t.b)("p",null,"安装时链接网络的区别:"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("strong",{parentName:"li"},"桥接网络"),": 直接连接到物理网络，会占用一个局域网真实ip，"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("strong",{parentName:"li"},"NAT"),": 网络地址转换（network address translation），使用已共享主机的ip，可以上网，利用VMnet8网卡通信"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("strong",{parentName:"li"},"Host-Only"),"：与主机共享一个私有网络，只能本机使用，利用VMnet1进行通信，不能上网")),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"系统启动流程"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#系统启动流程"}),"#"),"系统启动流程"),Object(t.b)("ol",null,Object(t.b)("li",{parentName:"ol"},Object(t.b)("p",{parentName:"li"},"计算机通电后，首先读取刷入ROM芯片的开机程序，这个程序叫做BIOS(Basic Input/Output System)。")),Object(t.b)("li",{parentName:"ol"},Object(t.b)("p",{parentName:"li"},"BIOS程序首先检查计算机硬件是否满足运行的基本条件，这叫做硬件自检(Power-On Self-Test)。如果硬件有问题，主板会发出不同含义的蜂鸣，启动中止。如果没有问题，屏幕会显示CPU、内存、硬盘等信息。")),Object(t.b)("li",{parentName:"ol"},Object(t.b)("p",{parentName:"li"},'硬件自检完成后，BIOS将控制权交给下一阶段的启动程序，这时BIOS需要知道"下一阶段的启动程序"具体放在哪个设备，BIOS需要一个外部储存设备的排序，排在前面的设备就是优先转交控制权的设备，这个排序叫做“启动顺序”(Boot Sequence)。BIOS按照启动顺序将控制权转交给第一位的储存设备。这时，计算机读取该设备的第一个扇区，也就是读取最前面的512字节。如果这512字节的最后两个字节是0x55和0xAA，表示这个设备可以用于启动；如果不是，表示设备不能用于启动，控制权交给下一个设备。最前面的512字节，叫做“主引导记录”(Master boot record, MBR)。')),Object(t.b)("li",{parentName:"ol"},Object(t.b)("p",{parentName:"li"},"主引导记录只有512字节，作用是告诉计算机到硬盘的哪一个位置找操作系统。1-446字节用于记录系统的启动信息，调用操作系统的机器码。447-510字节（64个字节）是分区表(Partition table)，将硬盘分为若干个区，每个区16个字节，所以最多4个主分区。511-512字节是主引导记录签名(0x55和0xAA)。")),Object(t.b)("li",{parentName:"ol"},Object(t.b)("p",{parentName:"li"},"硬盘分区是将硬盘划分为几个逻辑分区，一旦划分为多个分区，不同的目录和文件可以存储进不同的分区内。主引导记录需要知道控制权交给哪个区。分区表的长度是64个字节，里面分为4项，每一项16个字节。"),Object(t.b)("ul",{parentName:"li"},Object(t.b)("li",{parentName:"ul"},"（1） 第1个字节：如果为0x80，就表示该主分区是激活分区，控制权要转交给这个分区。四个主分区里面只能有一个是激活的。"),Object(t.b)("li",{parentName:"ul"},"（2） 第2-4个字节：主分区第一个扇区的物理位置（柱面、磁头、扇区号等等）。"),Object(t.b)("li",{parentName:"ul"},"（3） 第5个字节：主分区类型，比如FAT32、NTFS等。"),Object(t.b)("li",{parentName:"ul"},"（4） 第6-8个字节：主分区最后一个扇区的物理位置。"),Object(t.b)("li",{parentName:"ul"},"（5） 第9-12字节：该主分区第一个扇区的逻辑地址。"),Object(t.b)("li",{parentName:"ul"},"（6） 第13-16字节：主分区的扇区总数。"))),Object(t.b)("li",{parentName:"ol"},Object(t.b)("p",{parentName:"li"},'计算机控制权交给硬盘的某个分区，它会读取激活分区的第一个扇区，叫做"卷引导记录"(Volume boot record, VBR)。')),Object(t.b)("li",{parentName:"ol"},Object(t.b)("p",{parentName:"li"},"控制权交给操作系统后，操作系统的内核首先被载入内存。比如linux系统首先载入/boot目录里的kernel。内核加载成功后，第一个运行的程序是/sbin/init，它根据配置文件产生init进程，这是linux启动的第一个进程，pid进程编号是1,其它进程都是它的后代。然后init线程加载系统各个模块，比如窗口程序和网络程序，直至执行/bin/login程序，跳出登陆界面，等待用户输入用户名和密码。"))),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"linux目录"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#linux目录"}),"#"),"Linux目录"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"/ 根目录"),Object(t.b)("li",{parentName:"ul"},"/dev 设备文件"),Object(t.b)("li",{parentName:"ul"},"/etc 配置文件"),Object(t.b)("li",{parentName:"ul"},"/home 用户家目录"),Object(t.b)("li",{parentName:"ul"},"/lib 系统库保存目录"),Object(t.b)("li",{parentName:"ul"},"/mnt 移动设备挂载目录"),Object(t.b)("li",{parentName:"ul"},"/tmp 临时目录"),Object(t.b)("li",{parentName:"ul"},"/proc 不能直接操作，保存的是内存的挂载点"),Object(t.b)("li",{parentName:"ul"},"/sys 不能直接操作"),Object(t.b)("li",{parentName:"ul"},"/root 超级用户的家目录，可以操作"),Object(t.b)("li",{parentName:"ul"},"/usr/bin"),Object(t.b)("li",{parentName:"ul"},"/usr/sbin 系统软件资源目录，面向超级用户的系统用户")),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"常用命令"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#常用命令"}),"#"),"常用命令"),Object(t.b)("p",null,"提示符：超级用户是#，普通用户是$。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"[root@banli17 ~]#\n\n# 修改主机名，可以让显示变短\nhostname bl\n")),Object(t.b)("p",null,"命令格式，-a是简称，--all是全称。"),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"ls-1"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#ls-1"}),"#"),"ls"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"-a 显示隐藏文件\n-l 显示详细信息\n-i 文件的id号，不会重复，递增的\n-d 显示文件夹本身的信息\n")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"# 权限      链接数 所属用户  组      大小   时间          文件名\ndrwxrwxrwx  20    banli  staff    640 Jan  4 23:03 w3croad_blog\n")),Object(t.b)("p",null,"权限的第一个字母是文件类型（d），后面字符分成3份，分别是所有着U(rwx)、所属组G(rwx)、其它人O(rwx)。"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"d directory目录"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("ul",{parentName:"li"},Object(t.b)("li",{parentName:"ul"},"文件"))),Object(t.b)("li",{parentName:"ul"},"l 链接")),Object(t.b)("p",null,"r read    读\nw write   写\nx execute 执行"),Object(t.b)("p",null,"默认权限是644。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"r(2^2) + w(2^1) + x(2^0) = 7 \n\n# 修改权限\nchmod 766 1.txt\n\n# 给所属组增加执行的权限，g是组，x是执行。只能一个个写，不能连着写多个\nchmod g+x 1.txt\n\n# 去掉所属组的执行权限\nchmod g-x 1.txt\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"mkdir-1"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#mkdir-1"}),"#"),"mkdir"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"# 递归创建目录\nmkdir -p b/b\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"cd-1"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#cd-1"}),"#"),"cd"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"# 切换到父目录\ncd ..\n\n# 切换到自己家目录\ncd ~  \ncd \n\n# 回到上一个工作目录\ncd - \n\n# 显示当前目录\npwd\n\n# 删除空的目录，非空删除失败\nrmdir a\n\n# 删除，回警告\nrm 1.txt\n\n# rm -f (--force) 1.txt 强制删除\n\n# 递归删除所有文件\nrm -rf b\n\n# 删除所有文件，不要用，删了系统无法恢复了\nrm -rf /  \n\n# 拷贝目录\ncp -r b bb\n\n默认拷贝文件，时间会变化，通过-p 可以拷贝属性\n\n# 硬链接(基本没用)\nln /tmp/access.log access.log\n\n# 软链接，显示很直观，显示了指向的文件\nln -s 源文件 目标文件\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"文件搜索命令-1"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#文件搜索命令-1"}),"#"),"文件搜索命令"),Object(t.b)("p",null,"locate : 查找文件名"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"速度快，找的是数据库索引表(/var/bin/mlocate.db)，每天更新一次，更新不及时。使用updatedb强制更新。"),Object(t.b)("li",{parentName:"ul"},Object(t.b)("inlineCode",{parentName:"li"},"/etc/updatedb.conf"),"是配置，里面有不加入索引表的配置(PRUNE 忽略)。比如有/tmp，查询/tmp的文件回忽略。")),Object(t.b)("p",null,"whereis: 搜索命令所在路径"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{className:"language-bash"}),"whereis ls\n\n-b 只查找可执行文件\n-m 查找命令的手册manual\n")),Object(t.b)("p",null,"which: 查看外部安装命令的别名或原始命令，无法查看Shell自带的命令which cd"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"which ls\nls --color=auto\n\n# 修改别名\nalias ls=' ls --color=auto'  // color=no\n")),Object(t.b)("p",null,"find: 文件名要一摸一样才能找到，可以写通配符"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),'# 通过名字来搜\nfind /a -name 1.txt\nfind /a -name 1*\nfind /a -name "1.tx?"\nfind /a -name "1.tx[abct]"  // 找不到\nfind /a -name 1?  // 找不到\nfind /a -name "1.txT"  // 找不到,区分大小写的\nfind /a -iname "1.txT"  // -i表示忽略大小写\n\n# 通过用户搜索\nfind /a -user "1.txt" \n\n# 通过时间搜索\nfind /nginx/access.log -mtime+5\n\natime 文件访问时间\nctime 文件属性时间\nmtime 文件内容修改\n')),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"环境搭建"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#环境搭建"}),"#"),"环境搭建"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("a",l({parentName:"li"},{href:"https://www.virtualbox.org/"}),"虚拟机virtualBox")),Object(t.b)("li",{parentName:"ul"},Object(t.b)("a",l({parentName:"li"},{href:"https://www.centos.org/download/"}),"centeros")),Object(t.b)("li",{parentName:"ul"},"连接工具",Object(t.b)("ul",{parentName:"li"},Object(t.b)("li",{parentName:"ul"},"windows - xshell"),Object(t.b)("li",{parentName:"ul"},"mac - ",Object(t.b)("a",l({parentName:"li"},{href:"http://www.iterm2.com/"}),"iterm2"))))),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"准备工作"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#准备工作"}),"#"),"准备工作"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"ifconfig   // 可能是不全版本，需要自己配置\nip addr    // 查看ip，有多个。lo回环ip，不走网卡，是内部网卡; enp0s3 通过vi编辑让它显示\nvi /etc/sysconfig/network-scripts/ifcfg-enp0s3   修改 ONBOOT=yes\nservice network restart  重启网络\nyum install net-tools  // 安装软件，能让使用ifconfig命令\n\ncat /etc/redhat-release   // 查看linux的版本\n")),Object(t.b)("p",null,"wget 是一个从网络上自动下载文件的自由工具，支持通过 HTTP、HTTPS、FTP 三个最常见的 TCP/IP协议 下载，并可以使用 HTTP 代理。 先安装wget。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"yum install wget\n")),Object(t.b)("p",null,"替换默认源"),Object(t.b)("p",null,Object(t.b)("a",l({parentName:"p"},{href:"http://mirrors.163.com/.help/centos.html"}),"http://mirrors.163.com/.help/centos.html")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"// 备份\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n\ncd /etc/yum.repos.d/\n\nwget http://mirrors.163.com/.help/CentOS7-Base-163.repo\n")),Object(t.b)("p",null,"安装vim"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"yum install vim\n")),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"ssh"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#ssh"}),"#"),"ssh"),Object(t.b)("p",null,Object(t.b)("inlineCode",{parentName:"p"},"ssh"),"是",Object(t.b)("inlineCode",{parentName:"p"},"Secure Shell"),"安全外壳协议，建立在应用层基础上的安全协议，可靠，专门为远程登录会话和其它网络服务提供安全性的协议。"),Object(t.b)("p",null,"有效防止远程管理过程中的信息泄露问题，SSH客户端适用于多种平台，SSH服务端几乎支持所有UNIX平台。"),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"服务器安装SSH服务")),Object(t.b)("ol",null,Object(t.b)("li",{parentName:"ol"},"安装SSH，一般是安装好了的。可视化linux一般没有装，需要按下面步骤进行安装。")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"// 1.安装SSH\nyum install openssh-server\n\n// 2.启动SSH\nservice sshd start\n\n// 3.设置开机运行\nchkconfig sshd on\n")),Object(t.b)("p",null,Object(t.b)("inlineCode",{parentName:"p"},"ssh"),"是典型的客户端和服务端的交互模式，",Object(t.b)("inlineCode",{parentName:"p"},"windows"),"有很多工具支持ssh连接，比如",Object(t.b)("inlineCode",{parentName:"p"},"xshell"),"。"),Object(t.b)("p",null,"安装SSH客户端，直接执行",Object(t.b)("inlineCode",{parentName:"p"},"yum install openssh-client"),"，实际上安装服务端时，客户端就已经安装好了。"),Object(t.b)("ol",{start:2},Object(t.b)("li",{parentName:"ol"},"SSH config讲解")),Object(t.b)("p",null,Object(t.b)("inlineCode",{parentName:"p"},"config"),"为了方便我们批量管理多个",Object(t.b)("inlineCode",{parentName:"p"},"ssh"),"，",Object(t.b)("inlineCode",{parentName:"p"},"config"),"存放在",Object(t.b)("inlineCode",{parentName:"p"},"~/.ssh/config"),"。"),Object(t.b)("p",null,Object(t.b)("inlineCode",{parentName:"p"},"config"),"语法"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"Host     别名\nHostName 主机名\nPort     端口\nUser     用户名\nIdentityFile  秘钥文件的路径\n")),Object(t.b)("p",null,"操作"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),'cd ~/.ssh/\ntouch config\nvim config\n\n// 编写config\nhost "centos"\n    HostName 192.168.56.101\n    User root\n    Port 22\n\n// 如果有多个，继续按照上面的写法即可\n')),Object(t.b)("p",null,"按照上面操作后，就不需要每次",Object(t.b)("inlineCode",{parentName:"p"},"ssh root@192.168.0.105"),"这样连接，直接通过",Object(t.b)("inlineCode",{parentName:"p"},"ssh centos"),"就行了。"),Object(t.b)("ol",{start:3},Object(t.b)("li",{parentName:"ol"},"ssh免密登录",Object(t.b)("inlineCode",{parentName:"li"},"ssh key"))),Object(t.b)("p",null,"ssh key使用非对称加密方式生成公钥和私钥。私钥存放在本地",Object(t.b)("inlineCode",{parentName:"p"},"~/.ssh"),"目录，公钥可以对外公开，放在服务器的",Object(t.b)("inlineCode",{parentName:"p"},"~/.ssh/authorized_keys"),"。"),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"linux下的操作步骤")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"// 0 进入本机.ssh目录\ncd ~/.ssh\n\n// 1 生成秘钥文件，比如centos_rsa。 `rsa`和`dsa`是加密方式。\nssh-keygen -t rsa\n// 或者\nssh-keygen -t dsa\n\n// 2 在本地ssh-add加入私钥\nssh-add ~/.ssh/centos_rsa\n\n// 3 进入远程linux环境的~/.ssh目录，然后新建authorized_keys文件，将本机的centos_rsa.pub的内容复制进去\ncd ~/.ssh\ntouch authorized_keys\n")),Object(t.b)("p",null,"操作完成后，就不需要密码登录了。"),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"windows下xshell步骤")),Object(t.b)("p",null,Object(t.b)("inlineCode",{parentName:"p"},"xshell"),"在",Object(t.b)("inlineCode",{parentName:"p"},"工具->用户秘钥管理"),"中生成。"),Object(t.b)("ol",{start:4},Object(t.b)("li",{parentName:"ol"},"SSH安全端口")),Object(t.b)("p",null,"端口安全指的是尽量避免服务器的远程连接接口被不法分子知道，为此而改变默认服务端的操作。"),Object(t.b)("p",null,"修改ssh默认端口，可以修改文件",Object(t.b)("inlineCode",{parentName:"p"},"/etc/ssh/sshd_config"),"。"),Object(t.b)("p",null,"可以同时监听多个端口。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"Port 22\nPort 4000\n")),Object(t.b)("p",null,"然后执行",Object(t.b)("inlineCode",{parentName:"p"},"service sshd restart"),"重启ssh服务。"),Object(t.b)("ol",{start:5},Object(t.b)("li",{parentName:"ol"},"总结")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"ssh是什么，ssh就是为了安全考虑的。"),Object(t.b)("li",{parentName:"ul"},"SSH服务端安装"),Object(t.b)("li",{parentName:"ul"},"SSH客户端安装")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"软件操作命令"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#软件操作命令"}),"#"),"软件操作命令"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"软件包管理器：yum")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"yum install xxx // 安装\nyum remove xxx  // 卸载\nyum search xxx  // 搜索\nyum clean packages // 清理缓存\nyum list        // 列出已安装\nyum info xxx    // 软件包信息\n")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"服务器硬件资源信息"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#服务器硬件资源信息"}),"#"),"服务器硬件资源信息"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"内存 free -m (MB)，free和buff/cache 的总和是还可以使用的。"),Object(t.b)("li",{parentName:"ul"},"硬盘 df -h (human 以人类看懂的形式展示)，load average表示负载平均值，分别是1、5、15分钟的平均值。"),Object(t.b)("li",{parentName:"ul"},"负载 w/top (1是满了，1.x是超频了)"),Object(t.b)("li",{parentName:"ul"},"cpu个数 和 核数。cat /proc/cpuinfo"),Object(t.b)("li",{parentName:"ul"},"fdisk 格式化磁盘")),Object(t.b)("h3",null,Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"anchor",id:"文件操作命令"})),Object(t.b)("a",l({parentName:"h3"},{"aria-hidden":!0,className:"hash-link",href:"#文件操作命令"}),"#"),"文件操作命令"),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"linux文件的目录结构")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"根目录 /"),Object(t.b)("li",{parentName:"ul"},"家目录 /home 。~表示当前用户的家目录"),Object(t.b)("li",{parentName:"ul"},"临时目录 /tmp"),Object(t.b)("li",{parentName:"ul"},"配置目录 /etc"),Object(t.b)("li",{parentName:"ul"},"用户迷路 /usr")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"操作命令")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"ls 查看目录下的文件,",Object(t.b)("inlineCode",{parentName:"li"},"ls -al == ll")),Object(t.b)("li",{parentName:"ul"},"touch 新建文件"),Object(t.b)("li",{parentName:"ul"},"mkdir 新建目录，mkdir -p表示循环创建目录，",Object(t.b)("inlineCode",{parentName:"li"},"mkdir -p /test1/test2")),Object(t.b)("li",{parentName:"ul"},"cd    进入目录"),Object(t.b)("li",{parentName:"ul"},"rm    删除文件和目录,rm -r 循环删除"),Object(t.b)("li",{parentName:"ul"},"cp    复制"),Object(t.b)("li",{parentName:"ul"},"mv    移动"),Object(t.b)("li",{parentName:"ul"},"pwd   显示路径"),Object(t.b)("li",{parentName:"ul"},'grep -r "xx" ./*  查找，-r相当于 -d recurse，-d表示查找目录而非文件，recurse表示递归。'),Object(t.b)("li",{parentName:"ul"},"sed  -i \"\" \"s@from 'antd-mobile'@from 'component/antd-mobile'@g\" $a 查找替换 -i表示")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"更多资料"),"参考",Object(t.b)("a",l({parentName:"p"},{href:"http://man.linuxde.net/grep"}),"Linux命令大全")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"vim")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"vim 新建并打开文件"),Object(t.b)("li",{parentName:"ul"},"gg 行首"),Object(t.b)("li",{parentName:"ul"},"G  行尾"),Object(t.b)("li",{parentName:"ul"},"dd 删除一行"),Object(t.b)("li",{parentName:"ul"},"u  恢复")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"系统用户操作命令")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"useradd 添加用户"),Object(t.b)("li",{parentName:"ul"},"adduser 添加用户"),Object(t.b)("li",{parentName:"ul"},"userdel 删除用户,userdel只能删除用户，并不会删除相关的目录文件。userdel -r 可以删除用户及相关目录。"),Object(t.b)("li",{parentName:"ul"},"passwd  设置密码,passwd banli(用户名)")),Object(t.b)("p",null,"新建用户时，进入home目录，然后使用useradd，添加用户，添加后，home目录会生成一个对应的目录。"),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"useradd与adduser的区别"),"\nuseradd与adduser都是创建新的用户"),Object(t.b)("p",null,"在CentOs下useradd与adduser是没有区别的都是在创建用户，在home下自动创建目录，没有设置密码，需要使用passwd命令修改密码。"),Object(t.b)("p",null,"而在Ubuntu下useradd与adduser有所不同。"),Object(t.b)("p",null,"1、useradd在使用该命令创建用户是不会在/home下自动创建与用户名同名的用户目录，而且不会自动选择shell版本，也没有设置密码，那么这个用户是不能登录的，需要使用passwd命令修改密码。"),Object(t.b)("p",null,"2、adduser在使用该命令创建用户是会在/home下自动创建与用户名同名的用户目录，系统shell版本，会在创建时会提示输入密码，更加友好。"),Object(t.b)("p",null,"新建用户后，登录，发现报错",Object(t.b)("inlineCode",{parentName:"p"},"Permission denied (publickey,gssapi-keyex,gssapi-with-mic)."),"需要用root权限将允许密码登录设置为yes。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"vim /etc/ssh/sshd_config\npasswordAuthentication yes // 修改为yes\nservice sshd restart\n")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"防火墙设置")),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"作用是保护服务器，"),Object(t.b)("li",{parentName:"ul"},"设置防火墙规则，开放80,22端口。"),Object(t.b)("li",{parentName:"ul"},"关闭服务器")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"yum install firewalld\nservice firewalld start  启动\nservice firewalld status\nservice firewalld stop/disable  停止/禁用\n\nfirewall-cmd --state  // 查看状态\nfirewall-cmd --version\nfirewall-cmd --get-zones\nfirewall-cmd --get-default-zones\nfirewall-cmd --list-all-zones\nfirewall-cmd --zones-public\nfirewall-cmd --list-ports\nfirewall-cmd --query-service-ssh\nfirewall-cmd --remove-service-ssh\nfirewall-cmd --add-service-ssh\nfirewall-cmd --list-services\n")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"提权和文件上传下载操作")),Object(t.b)("p",null,"提权：sudo、visudo，首先使用visudo命令添加用户。然后该用户就可以使用sudo了。"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"visudo\n%banli ALL...  //添加一行\n")),Object(t.b)("p",null,"下载：wget、curl"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"wget http://www.baidu.com\ncurl -o baidu.html http://www.baidu.com\n")),Object(t.b)("p",null,"上传：scp"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"scp 1.txt banli@192.168.56.101:/tmp/\n")),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"webservers"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#webservers"}),"#"),"webservers"),Object(t.b)("p",null,"Apache 和ngix"),Object(t.b)("p",null,"apache基本操作"),Object(t.b)("p",null,"在centos里叫httpd,在ubuntu里叫apache"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"yum install httpd\nservice httpd start\nservice httpd stop\n")),Object(t.b)("p",null,"Linux下的打包和解压缩命令  ",Object(t.b)("a",l({parentName:"p"},{href:"https://blog.csdn.net/liuyanfeier/article/details/62422315"}),"https://blog.csdn.net/liuyanfeier/article/details/62422315")),Object(t.b)("p",null,"用指定软件打开文件"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"open -a /Applications/WebStorm.app/ Desktop/MyProject/card/\n如果使用频繁，还可以添加软连接\n\nsudo ln -s /Applications/Sublime\\ Text.app/Contents/SharedSupport/bin/subl /usr/bin/sublime\n")),Object(t.b)("p",null,"这样输入",Object(t.b)("inlineCode",{parentName:"p"},"sublime 1.txt"),"就可以打开文件了"),Object(t.b)("p",null,"打包压缩: ",Object(t.b)("a",l({parentName:"p"},{href:"https://blog.csdn.net/qq_32014215/article/details/63684368"}),"https://blog.csdn.net/qq_32014215/article/details/63684368")),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"关机和重启命令"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#关机和重启命令"}),"#"),"关机和重启命令"),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"1. 重启")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"reboot    // 重启\nshutdown -r now   // 立即重启(root用户使用)\nshutdown -r 10    // 过10分钟自动重启(root用户使用)\nshutdown -r 20:35  // 在时间为20:35时候重启(root用户使用)\nshutdown  -c     // 取消shutdown设置的重启命令\n")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"2. 关机")),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"halt  // 立即关机\npoweroff  // 立即关机\nshutdown -h now  // 立即关机(root用户使用)\nshutdown -h 10   // 10分钟后自动关机\nshutdown -c      // 取消shutdown设置的关机命令\n")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"说明")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"1. shutdown")),Object(t.b)("p",null,"shutdown 命令安全地将系统关机。 有些用户会使用直接断掉电源的方式来关闭 linux，这是十分危险的。因为 linux 与 windows 不同，其后台运行着许多进程，所以强制关机可能会导致进程的数据丢失，使系统处于不稳定的状态，甚至在有的系统中会损坏硬件设备。"),Object(t.b)("p",null,"而在系统关机前使用 shutdown 命令，系统管理员会通知所有登录的用户系统将要关闭。并且 login 指令会被冻结，即新的用户不能再登录。直接关机或者延迟一定的时间才关机都是可能的，还可能重启。这是由所有进程〔process〕都会收到系统所送达的信号〔signal〕决定的。这让像 vi 之类的程序有时间储存目前正在编辑的文档，而像处理邮件〔mail〕和 新闻〔news〕的程序则可以正常地离开等等。"),Object(t.b)("p",null,"shutdown 执行它的工作是送信号〔signal〕给 init 程序﹐要求它改变 runlevel。Runlevel 0 被用来停机〔halt〕，runlevel 6 是用来重新激活〔reboot〕系统，而 runlevel 1 则是被用来让系统进入管理工作可以进行的状态；这是预设的，假定没有-h 也没有-r 参数给 shutdown。要想了解在停机〔halt〕或者重新开机〔reboot〕过程中做了哪些动作，你可以在这个文件/etc/inittab 里看到这些 runlevels 相关的资料。"),Object(t.b)("p",null,"shutdown 参数说明:"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"[-t] 在改变到其它 runlevel 之前﹐告诉 init 多久以后关机。\n[-r] 重启计算器。\n[-k] 并不真正关机﹐只是送警告信号给每位登录者〔login〕。\n[-h] 关机后关闭电源〔halt〕。\n[-n] 不用 init﹐而是自己来关机。不鼓励使用这个选项﹐而且该选项所产生的后果往往不总是你所预期得到的。\n[-c] cancel current process 取消目前正在执行的关机程序。所以这个选项当然没有\n时间参数﹐但是可以输入一个用来解释的讯息﹐而这信息将会送到每位使用者。\n[-f] 在重启计算器〔reboot〕时忽略 fsck。\n[-F] 在重启计算器〔reboot〕时强迫 fsck。\n[-time] 设定关机〔shutdown〕前的时间。\n")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"2.halt—-最简单的关机命令")),Object(t.b)("p",null,"其实 halt 就是调用 shutdown -h。halt 执行时，杀死应用进程﹐执行 sync 系统调用， 文件系统写操作完成后就会停止内核。"),Object(t.b)("p",null,"参数说明:"),Object(t.b)("pre",null,Object(t.b)("code",l({parentName:"pre"},{}),"[-n] 防止 sync 系统调用，它用在用 fsck 修补根分区之后﹐以阻止内核用老版本的超级块〔superblock〕覆盖修补过的超级块。\n[-w] 并不是真正的重启或关机，只是写 wtmp〔/var/log/wtmp〕纪录。\n[-d] 不写 wtmp 纪录〔已包含在选项[-n]中〕。\n[-f] 没有调用 shutdown 而强制关机或重启。\n[-i] 关机〔或重启〕前，关掉所有的网络接口。\n[-p] 该选项为缺省选项。就是关机时调用 poweroff。\n")),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"3. reboot")),Object(t.b)("p",null,"reboot 的工作过程差不多跟 halt 一样，不过它是引发主机重启，而 halt 是关机。它的参数与 halt 相差不多。"),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"4. init")),Object(t.b)("p",null,"init 是所有进程的祖先﹐它的进程号始终为 1，所以发送 TERM 信号给 init 会终止所有的用户进程、守护进程等。shutdown 就是使用这种机制。init 定义了 8 个运行级别(runlevel)， init 0 为关机，init 1 为重启。关于 init 可以长篇大论，这里就不再叙述。另外还有 telinit 命令可以改变 init 的运行级别，比如，telinit -iS 可使系统进入单用户模式，并且得不到使用 shutdown 时的信息和等待时间。"),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},"5. linux 如何修改 root 管理员密码")),Object(t.b)("p",null,"以 root 身份登录(SSH 操作)，输入 passwd 命令 就可以看到提示输入新密码了。"),Object(t.b)("h2",null,Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"资料"})),Object(t.b)("a",l({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#资料"}),"#"),"资料"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("a",l({parentName:"li"},{href:"https://blog.csdn.net/jiangzhengdong/article/details/8036594"}),"centos关机与重启命令详解"))))}m.isMDXComponent=!0},88:function(e,a,n){"use strict";n.d(a,"a",function(){return c}),n.d(a,"b",function(){return O});var t=n(0),l=n.n(t),b=l.a.createContext({}),i=function(e){var a=l.a.useContext(b),n=a;return e&&(n="function"==typeof e?e(a):Object.assign({},a,e)),n},c=function(e){var a=i(e.components);return l.a.createElement(b.Provider,{value:a},e.children)},r="mdxType",p={inlineCode:"code",wrapper:function(e){return l.a.createElement(l.a.Fragment,{},e.children)}},m=function(e){var a=e.components,n=e.mdxType,t=e.originalType,b=e.parentName,c=function(e,a){var n={};for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&-1===a.indexOf(t)&&(n[t]=e[t]);return n}(e,["components","mdxType","originalType","parentName"]),r=i(a);return l.a.createElement(r[b+"."+n]||r[n]||p[n]||t,a?Object.assign({},c,{components:a}):c)};function O(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var b=n.length,i=new Array(b);i[0]=m;var c={};for(var p in a)hasOwnProperty.call(a,p)&&(c[p]=a[p]);c.originalType=e,c[r]="string"==typeof e?e:t,i[1]=c;for(var O=2;O<b;O++)i[O]=n[O];return l.a.createElement.apply(null,i)}return l.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);
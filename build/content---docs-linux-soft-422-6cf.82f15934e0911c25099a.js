(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{251:function(e,n,t){"use strict";t.d(n,"a",function(){return i}),t.d(n,"b",function(){return u});var l=t(0),a=t.n(l),b=a.a.createContext({}),r=function(e){var n=a.a.useContext(b),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},i=function(e){var n=r(e.components);return a.a.createElement(b.Provider,{value:n},e.children)};var p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=function(e){var n=e.components,t=e.mdxType,l=e.originalType,b=e.parentName,i=function(e,n){var t={};for(var l in e)Object.prototype.hasOwnProperty.call(e,l)&&-1===n.indexOf(l)&&(t[l]=e[l]);return t}(e,["components","mdxType","originalType","parentName"]),p=r(n),m=t,u=p[b+"."+m]||p[m]||c[m]||l;return n?a.a.createElement(u,Object.assign({},i,{components:n})):a.a.createElement(u,i)};function u(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var b=t.length,r=new Array(b);r[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[p]="string"==typeof e?e:l,r[1]=i;for(var u=2;u<b;u++)r[u]=t[u];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},66:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",function(){return r}),t.d(n,"rightToc",function(){return i}),t.d(n,"default",function(){return m});t(0);var l=t(251);function a(){return(a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e}).apply(this,arguments)}function b(e,n){if(null==e)return{};var t,l,a=function(e,n){if(null==e)return{};var t,l,a={},b=Object.keys(e);for(l=0;l<b.length;l++)t=b[l],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(l=0;l<b.length;l++)t=b[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var r={title:"linux软件安装管理",sidebar_label:"软件安装管理"},i=[{value:"软件安装管理",id:"软件安装管理",children:[{value:"源码包和RPM包区别",id:"源码包和rpm包区别",children:[]},{value:"源码包的安装",id:"源码包的安装",children:[]},{value:"RPM包",id:"rpm包",children:[]},{value:"yum在线安装",id:"yum在线安装",children:[]}]}],p={rightToc:i},c="wrapper";function m(e){var n=e.components,t=b(e,["components"]);return Object(l.b)(c,a({},p,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"软件安装管理"},"软件安装管理"),Object(l.b)("p",null,"linux中的软件安装方式有 3 种:"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"通过源码包安装。好处是可以查看并修改源代码、比较安全(因为是开源的)、自由配置所需功能、卸载方便，另外通过源码包安装时需要编译，会更适合自己的系统、更加稳定和高效。缺点是安装步骤多、容易出错、编译时间较长。"),Object(l.b)("li",{parentName:"ol"},"通过二进制包(RPM包、系统默认包)安装。缺点是看不到源码，功能选择没有源码包灵活；另外因为是厂商编译的，没有对本机做优化，效率可能没有源码包高。"),Object(l.b)("li",{parentName:"ol"},"通过其它人写好的脚本自动安装，如lnmp。优点是安装方便，缺点是无法定制。")),Object(l.b)("p",null,"通常建议是如apache这样的服务器使用源码包安装，因为它是为其他用户提供浏览服务的(如网页)，对于效率要求更高。下面分别介绍这3种安装方式。"),Object(l.b)("h3",{id:"源码包和rpm包区别"},"源码包和RPM包区别"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"安装前的区别：概念"),Object(l.b)("li",{parentName:"ul"},"安装后的区别：目录")),Object(l.b)("p",null,"RPM一般默认安装就行，不需要自己手动指定安装目录。源码包要指定位置，卸载是直接删除，否则卸载要手动删除很多文件。安装位置导致启动服务命令不同。 RPM包安装在",Object(l.b)("inlineCode",{parentName:"p"},"/etc/rc.d/init.d/"),"里可以使用service命令管理，源码包只能使用绝对路径来管理。"),Object(l.b)("h3",{id:"源码包的安装"},"源码包的安装"),Object(l.b)("p",null,"因为源码包都是C写的，所以安装源码包首先需要安装",Object(l.b)("inlineCode",{parentName:"p"},"gcc"),"编译器，。一般我们保存和安装源码包目录如下。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"源码包保存位置： ",Object(l.b)("inlineCode",{parentName:"li"},"/usr/local/src/")),Object(l.b)("li",{parentName:"ul"},"源码包安装位置：",Object(l.b)("inlineCode",{parentName:"li"},"/usr/local/"))),Object(l.b)("p",null,"源码包的安装过程如下:"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"下载源码包。"),Object(l.b)("li",{parentName:"ol"},"解压缩到目录。"),Object(l.b)("li",{parentName:"ol"},"进入解压缩目录。"),Object(l.b)("li",{parentName:"ol"},"执行",Object(l.b)("inlineCode",{parentName:"li"},"./configure"),"配置和检查软件，会把配置和能否安装信息都写在",Object(l.b)("inlineCode",{parentName:"li"},"Makefile"),"文件中，用于后续的编辑。")),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-bash"}),"# 配置和检查软件，配置安装目录\n./configure --prefix=/usr/local/apache2\n\n# 编译\nmake\n\n# 安装\nmake install\n\n# 清除安装的缓存，如果make install报错，还需要删除安装目录\nmake clean\n")),Object(l.b)("h3",{id:"rpm包"},"RPM包"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"1. RPM包在哪里?")),Object(l.b)("p",null,"RMP包在系统光盘的Packages里。"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"2. 命名规则？")),Object(l.b)("p",null,"拿",Object(l.b)("inlineCode",{parentName:"p"},"httpd-2.2.15-15.el6.centos.1.i686.rmp"),"分析。是",Object(l.b)("inlineCode",{parentName:"p"},"包名 + 软件版本 + 软件发布的次数 + 适合的linux平台 + 适合的硬件平台 + 包扩展名"),"。"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"3. RPM包的依赖性缺点？")),Object(l.b)("p",null,"由于Linux中的程序大多是小程序。程序与程序之间存在非常复杂的依赖关系。RPM无法解决软件包的依赖关系。需要自己手动一个个安装。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"树形依赖"),Object(l.b)("li",{parentName:"ul"},"环形依赖"),Object(l.b)("li",{parentName:"ul"},"模块依赖：www.rpmfind.net，需要依赖库文件",Object(l.b)("inlineCode",{parentName:"li"},"so.数字"),"，在网站查询。")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"4. 包全名与包名。")),Object(l.b)("p",null,"操作没有安装的包要使用包全名；操作已经安装的包使用包名；已经安装的包记录在/var/lib/rpm/中的数据库",Object(l.b)("inlineCode",{parentName:"p"},"__db.xxx"),"中。"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"5. RPM安装")),Object(l.b)("p",null,"太麻烦，要解决一个个依赖。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"i(install)"),": 安装。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"v(verbose)"),": 显示详细信息。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"h(hash)"),": 显示进度。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"--nodeps"),": 不检测依赖性。")),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-bash"}),"rpm -ivh 包全名\n")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"6. RPM升级和卸载")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"U(upgrade)"),": 升级"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"e"),": 卸载，因为包的文件安装在哪里是作者规定的，用户不知道删除，所以提供了这个卸载功能"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"--nodeps"),": 不检查依赖包")),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-bash"}),"# 升级，如果没有则安装\nrpm -Uvh 包全名\n\n# 卸载，需要根据依赖来卸载\nrpm -e 包名\n\n# 不处理依赖包，但是会导致其它包不能用了\nrpm -e --nodeps 包名\n")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"7. RPM包查询")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"q"),": 查询(query)"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"a"),": 所有(all)"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"i"),": 查询软件信息(infomation)"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"p"),": 查询未安装的包信息(package)"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"l"),": 列表，查询包的文件装在哪里"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"f"),": 查询文件属于哪个软件包"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"R"),": 查询依赖的包")),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-bash"}),"# 查看是否安装过\nrpm -q httpd\n\n# 查询安装的包\nrpm -qa \nrpm -qa | grep httpd\n\n# 查询包详细信息，里面有包的网站\nrpm -qi httpd\n\n# 查询未安装的包\nrpm -qip 包全名\n\n# 查询包的文件装在哪里\nrpm -ql 包名\n\n# 查询未安装包打算装在哪里\nrpm -qlp 包名\n\n# 查询文件属于哪个包\nrpm -qf yum.conf\n\n# 查询依赖哪些包\nrpm -qR httpd\nrpm -qpR httpd\n")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"8. RPM包默认安装路径")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"/etc/"),": 配置文件"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"/usr/bin/"),": 可执行命令"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"/usr/lib/"),": 函数库"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"/usr/share/doc/"),": 使用手册"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"/usr/share/man/"),":帮助文件")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"9. RPM包的校验")),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{}),"rpm -V httpd\n")),Object(l.b)("p",null,"可能返回的结果:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"S"),": 文件大小是否改变"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"M"),": 文件类型或权限(rwx)是否改变"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"5"),": md5校验是否改变"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"D"),"：设备的主从代码是否修改"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"L"),": 文件路径是否改变"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"U"),": 文件所有者是否改变"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"G"),": 文件所属组是否改变"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"T"),": 文件修改时间是否改变"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"c"),": 配置文件"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"d"),": 普通文档"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"g"),": 不该rpm包包含的文件"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"L"),": 授权文件"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"r"),": 描述文件")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"10. RPM包中文件提取")),Object(l.b)("p",null,"比如ls被删除了，可以通过",Object(l.b)("inlineCode",{parentName:"p"},"rpm2cpio 包全名 | cpio -idv .文件绝对路径"),"将ls提取出来。"),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{}),"# 查看是哪个包\nrpm -qf /bin/ls\nmv /bin/ls /tmp/\n\n# 将命令文件提取到当前目录，之后再复制到bin目录即可\nrpm2cpio /mnt/cdrom/Packages/coreutils...rpm | cpio -idv ./bin/ls\n")),Object(l.b)("h3",{id:"yum在线安装"},"yum在线安装"),Object(l.b)("p",null,"一个命令，在线就可以解决依赖。安装的实际也是rpm包。不能查询和校验。"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"1. yum源文件")),Object(l.b)("p",null,"在",Object(l.b)("inlineCode",{parentName:"p"},"/etc/yum.repos.d/"),"目录里，默认生效的是",Object(l.b)("inlineCode",{parentName:"p"},"Centos-Base.repo"),"文件。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"[base]"),": 容器名称"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"mirrorlist"),":镜像"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"baseurl"),": 源"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"enable"),": 1表示生效，0表示不生效"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"gpgcheck"),": rpm验证"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"gpgkey"),": 验证证书位置")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"2. 光盘yum安装")),Object(l.b)("p",null,"没网的时候，将",Object(l.b)("inlineCode",{parentName:"p"},"Centos-Base.repo"),"改名",Object(l.b)("inlineCode",{parentName:"p"},"Centos-Base.repo.bak"),"让它失效，然后启用",Object(l.b)("inlineCode",{parentName:"p"},"Centos-Media.repo"),"。将enable改为1，修改baseurl为光盘的地址，注释其他file地址。"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"3. yum命令")),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-bash"}),'# 查询所以可安装的包列表，不支持本地查询安装的包\nyum list\n\n# 搜索服务器包含关键字的包\nyum search 关键字\n\n# 安装\nyum -y install 包名\n\n# 升级\nyum -y update 包名\n\n# 会把linux内核也升级，所有包也升级，可能导致崩溃，不要用这个命令\nyum -y update \n\n# 卸载\nyum -y remove 包名\n\n# 组操作\n# 查看支持的组\nyum grouplist\n\n# 安装组，要使用英文\nyum groupinstall "Chinese Support"\nLANG=zh_CN\nLANG=zh_CN.utf8\n\n# 卸载组\nyum groupremove "Chinese Support"\n')))}m.isMDXComponent=!0}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{187:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",function(){return i}),t.d(a,"rightToc",function(){return l}),t.d(a,"default",function(){return b});t(0);var n=t(217);function r(){return(r=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function c(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)t=c[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)t=c[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i={title:"react-native屏幕适配问题",date:new Date("2016-08-06T13:49:26.000Z"),toc:!0},l=[{value:"长度的分类",id:"长度的分类",children:[]},{value:"dpi",id:"dpi",children:[]},{value:"react-native中的长度单位",id:"react-native中的长度单位",children:[]},{value:"简介",id:"简介",children:[]}],p={rightToc:l},o="wrapper";function b(e){var a=e.components,t=c(e,["components"]);return Object(n.b)(o,r({},p,t,{components:a,mdxType:"MDXLayout"}),Object(n.b)("h1",null,Object(n.b)("a",r({parentName:"h1"},{"aria-hidden":!0,className:"anchor",id:"移动端的长度单位"})),Object(n.b)("a",r({parentName:"h1"},{"aria-hidden":!0,className:"hash-link",href:"#移动端的长度单位"}),"#"),"移动端的长度单位"),Object(n.b)("h2",null,Object(n.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"长度的分类"})),Object(n.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#长度的分类"}),"#"),"长度的分类"),Object(n.b)("p",null,"长度单位分为两种，"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"一种是直接和物理长度对应的绝对长度，有dp（1/160英寸）、pt(1/72)等。"),Object(n.b)("li",{parentName:"ul"},"一种是和物理长度无法对应的相对长度。有px、em、rem。")),Object(n.b)("h2",null,Object(n.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"dpi"})),Object(n.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#dpi"}),"#"),"dpi"),Object(n.b)("p",null,"dpi 表示在1英寸内的像素数。代表像素的密度。"),Object(n.b)("h2",null,Object(n.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"react-native中的长度单位"})),Object(n.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#react-native中的长度单位"}),"#"),"react-native中的长度单位"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"安卓的长度单位是 dp。"),Object(n.b)("li",{parentName:"ul"},"ios的长度单位是 point（ios自己定义的），约等于 1dp。")),Object(n.b)("pre",null,Object(n.b)("code",r({parentName:"pre"},{className:"language-javascript"}),"const style = StyleSheet.create({\n    width: 100\n})\n")),Object(n.b)("h2",null,Object(n.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"anchor",id:"简介"})),Object(n.b)("a",r({parentName:"h2"},{"aria-hidden":!0,className:"hash-link",href:"#简介"}),"#"),"简介"),Object(n.b)("p",null,"1、首先设置文字大小不自动缩放"),Object(n.b)("pre",null,Object(n.b)("code",r({parentName:"pre"},{className:"language-javascript"}),"Text.defaultProps.allowFontScaling = false\n")),Object(n.b)("p",null,"2、默认情况下，rn的单位会随着屏幕的像素密度不同而不同。为了让不同设备显示的字体大小相同。需要使用",Object(n.b)("inlineCode",{parentName:"p"},"PixelRatio"),"类做一些事情。更简单的方式是直接使用",Object(n.b)("a",r({parentName:"p"},{href:"https://github.com/nirsky/react-native-size-matters"}),"react-native-size-matters"),"。然后就可以像下面这样："),Object(n.b)("pre",null,Object(n.b)("code",r({parentName:"pre"},{className:"language-html"}),"btn: {\n    fontSize: moderateScale(12)\n}\n")),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"react-native-size-matters"),"主要提供了三个方法："),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"scale()：按照屏幕宽度等比缩放"),Object(n.b)("li",{parentName:"ul"},"verticalScale()：按照屏幕高度等比缩放"),Object(n.b)("li",{parentName:"ul"},"moderateScale()：非线性缩放，默认缩放因子是0.5。适合字体、padding等缩放")))}b.isMDXComponent=!0},217:function(e,a,t){"use strict";t.d(a,"a",function(){return l}),t.d(a,"b",function(){return u});var n=t(0),r=t.n(n),c=r.a.createContext({}),i=function(e){var a=r.a.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):Object.assign({},a,e)),t},l=function(e){var a=i(e.components);return r.a.createElement(c.Provider,{value:a},e.children)},p="mdxType",o={inlineCode:"code",wrapper:function(e){return r.a.createElement(r.a.Fragment,{},e.children)}},b=function(e){var a=e.components,t=e.mdxType,n=e.originalType,c=e.parentName,l=function(e,a){var t={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&-1===a.indexOf(n)&&(t[n]=e[n]);return t}(e,["components","mdxType","originalType","parentName"]),p=i(a);return r.a.createElement(p[c+"."+t]||p[t]||o[t]||n,a?Object.assign({},l,{components:a}):l)};function u(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var c=t.length,i=new Array(c);i[0]=b;var l={};for(var o in a)hasOwnProperty.call(a,o)&&(l[o]=a[o]);l.originalType=e,l[p]="string"==typeof e?e:n,i[1]=l;for(var u=2;u<c;u++)i[u]=t[u];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);
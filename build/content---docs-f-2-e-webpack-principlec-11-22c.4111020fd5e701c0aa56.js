(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{283:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",function(){return l}),t.d(n,"rightToc",function(){return o}),t.d(n,"default",function(){return b});t(0);var a=t(301);function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l={title:"webpack (2): 原理"},o=[{value:"webpack 执行流程",id:"webpack-执行流程",children:[{value:"查找入口文件",id:"查找入口文件",children:[]},{value:"分析入口文件 webpack.js",id:"分析入口文件-webpackjs",children:[]}]}],i={rightToc:o},p="wrapper";function b(e){var n=e.components,t=c(e,["components"]);return Object(a.b)(p,r({},i,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"执行 webpack 命令发生了什么？"),Object(a.b)("h2",{id:"webpack-执行流程"},"webpack 执行流程"),Object(a.b)("p",null,"执行 webpack 时的过程如下："),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"查找 webpack 入口文件。")),Object(a.b)("h3",{id:"查找入口文件"},"查找入口文件"),Object(a.b)("p",null,"执行 webpack 的方式有 2 种："),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"通过配置 npm run dev 或 npm run build等命令并运行。"),Object(a.b)("li",{parentName:"ol"},"直接通过 webpack 命令")),Object(a.b)("p",null,"如果 webpack 安装在全局(不推荐)，npm 会去查找 /usr/bin/local 目录。如果安装在局部，则会去查找 node_modules/.bin/ 目录下的 webpack.sh 或 webpack.cmd(windows下)文件。如果存在，就执行，如果不存在，则抛出错误。"),Object(a.b)("p",null,"通常 webpack 都是安装在局部，所以实际会查执行",Object(a.b)("inlineCode",{parentName:"p"},"node_modules/webpack/bin/webpack.js"),"文件。"),Object(a.b)("h3",{id:"分析入口文件-webpackjs"},"分析入口文件 webpack.js"),Object(a.b)("p",null,"找到入口文件后，来看看它做了什么事情。"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),'process.exitCode = 0\nconst runCommand = () => {}\nconst isInstalled = packageName => {require.resolve(packageName);...}\nconst CLIs = [\n    {name: "webpack-cli", ...}\n    {name: "webpack-command", ...}\n]\nconst installedClis = CLIs.filter(cli => cli.installed)\nif(installedClis.length === 0){\n    // 提示需要安装 CLI 和提供快捷安装的方式\n}else if(installedClis.length === 1){\n    // 加载 CLI，并执行\n}else{\n    // 如果CLI都安装了，需要移除一个或直接使用二进制文件\n}\n')),Object(a.b)("p",null,"执行 webpack-cli 命令，实际执行的是",Object(a.b)("inlineCode",{parentName:"p"},"node_modules/webpack-cli/bin/cli.js"),"文件。来看看它做了什么事情。"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"webpack-cli/bin/cli.js")),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"划分编译命令和非编译命令，NON_COMPILATION_ARGS 表示非打包编译的命令。")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),'const NON_COMPILATION_ARGS = ["init", "migrate", "serve", "generate-loader", "generate-plugin", "info"];\n')),Object(a.b)("p",null,"也就是说，执行如",Object(a.b)("inlineCode",{parentName:"p"},"webpack init"),"命令时，会去做其它对应的事情，而不是打包编译。"),Object(a.b)("ol",{start:2},Object(a.b)("li",{parentName:"ol"},"使用 yargs 生成帮助文档等信息。")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),'require("./config/config-yargs")(yargs);\n')),Object(a.b)("ol",{start:3},Object(a.b)("li",{parentName:"ol"},"解析配置(命令行和配置文件里的)并挂载到 options。这一步会将配置，如 entry、output、plugins 等配置，挂载到 option 上。")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),'options = require("./utils/convert-argv")(argv);\n')),Object(a.b)("ol",{start:4},Object(a.b)("li",{parentName:"ol"},"执行 ",Object(a.b)("inlineCode",{parentName:"li"},"webpack(options)")," 进行编译。如果有 watch 属性，第一次会使用",Object(a.b)("inlineCode",{parentName:"li"},"compiler.watch()"),"监听文件，如果文件变化，则会使用",Object(a.b)("inlineCode",{parentName:"li"},"compiler.run()"),"重新编译。")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"let compiler;\ncompiler = webpack(options);\nif (firstOptions.watch || options.watch) {\n    compiler.watch(watchOptions, compilerCallback);\n}else {\n    compiler.run((err, stats) => {\n        // ...\n    })\n}\n")))}b.isMDXComponent=!0},301:function(e,n,t){"use strict";t.d(n,"a",function(){return o}),t.d(n,"b",function(){return s});var a=t(0),r=t.n(a),c=r.a.createContext({}),l=function(e){var n=r.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},o=function(e){var n=l(e.components);return r.a.createElement(c.Provider,{value:n},e.children)};var i="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},b=function(e){var n=e.components,t=e.mdxType,a=e.originalType,c=e.parentName,o=function(e,n){var t={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===n.indexOf(a)&&(t[a]=e[a]);return t}(e,["components","mdxType","originalType","parentName"]),i=l(n),b=t,s=i[c+"."+b]||i[b]||p[b]||a;return n?r.a.createElement(s,Object.assign({},o,{components:n})):r.a.createElement(s,o)};function s(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var c=t.length,l=new Array(c);l[0]=b;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[i]="string"==typeof e?e:a,l[1]=o;for(var s=2;s<c;s++)l[s]=t[s];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);
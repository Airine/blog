(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{293:function(e,n,t){"use strict";t.d(n,"a",function(){return c}),t.d(n,"b",function(){return j});var l=t(0),a=t.n(l),b=a.a.createContext({}),i=function(e){var n=a.a.useContext(b),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},c=function(e){var n=i(e.components);return a.a.createElement(b.Provider,{value:n},e.children)};var r="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},O=function(e){var n=e.components,t=e.mdxType,l=e.originalType,b=e.parentName,c=function(e,n){var t={};for(var l in e)Object.prototype.hasOwnProperty.call(e,l)&&-1===n.indexOf(l)&&(t[l]=e[l]);return t}(e,["components","mdxType","originalType","parentName"]),r=i(n),O=t,j=r[b+"."+O]||r[O]||p[O]||l;return n?a.a.createElement(j,Object.assign({},c,{components:n})):a.a.createElement(j,c)};function j(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var b=t.length,i=new Array(b);i[0]=O;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c[r]="string"==typeof e?e:l,i[1]=c;for(var j=2;j<b;j++)i[j]=t[j];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}O.displayName="MDXCreateElement"},71:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",function(){return i}),t.d(n,"rightToc",function(){return c}),t.d(n,"default",function(){return O});t(0);var l=t(293);function a(){return(a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e}).apply(this,arguments)}function b(e,n){if(null==e)return{};var t,l,a=function(e,n){if(null==e)return{};var t,l,a={},b=Object.keys(e);for(l=0;l<b.length;l++)t=b[l],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(l=0;l<b.length;l++)t=b[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i={title:"linux文件和目录操作",sidebar_label:"文件&目录操作"},c=[{value:"pwd",id:"pwd",children:[]},{value:"cd",id:"cd",children:[]},{value:"ls",id:"ls",children:[]},{value:"cat",id:"cat",children:[]},{value:"more",id:"more",children:[]},{value:"head",id:"head",children:[]},{value:"tail",id:"tail",children:[]},{value:"tr",id:"tr",children:[]},{value:"wc",id:"wc",children:[]},{value:"stat",id:"stat",children:[]},{value:"cut",id:"cut",children:[]},{value:"awk",id:"awk",children:[{value:"diff",id:"diff",children:[]},{value:"touch",id:"touch",children:[]},{value:"mkdir",id:"mkdir",children:[]},{value:"cp",id:"cp",children:[]},{value:"mv",id:"mv",children:[]},{value:"rm",id:"rm",children:[]},{value:"dd",id:"dd",children:[]},{value:"file",id:"file",children:[]},{value:"tar",id:"tar",children:[]},{value:"grep",id:"grep",children:[]},{value:"find",id:"find",children:[]}]},{value:"学习资料",id:"学习资料",children:[]}],r={rightToc:c},p="wrapper";function O(e){var n=e.components,t=b(e,["components"]);return Object(l.b)(p,a({},r,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("h3",{id:"pwd"},"pwd"),Object(l.b)("p",null,"pwd 命令用于显示当前用户所处的工作目录。"),Object(l.b)("h3",{id:"cd"},"cd"),Object(l.b)("p",null,"cd 命令用于切换工作目录。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"-"),"：返回上一次所处目录。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"~"),": 返回当前用户的家目录。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},".."),": 返回上级目录。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"~username"),"：进入其它用户的家目录。")),Object(l.b)("h3",{id:"ls"},"ls"),Object(l.b)("p",null,"ls 命令用于显示目录的文件信息。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"a"),": 表示全部文件（包括隐藏文件）。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"l"),": 表示查看文件的属性、大小等信息。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"d"),": 查看目录的权限和属性。")),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-bash"}),"# 查看当前目录的文件\nls -al\n\n# 查看目录的属性和权限\nls -ld /etc\n")),Object(l.b)("h3",{id:"cat"},"cat"),Object(l.b)("p",null,"cat 命令用于查看纯文本(内容较少的)。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"n"),"：显示行号。")),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-bash"}),"cat -n initial-setup-ks.cfg\n")),Object(l.b)("h3",{id:"more"},"more"),Object(l.b)("p",null,"more 命令用于查看纯文本文件(内容较多的)。会提示进度，可以用空格键或回车键向下翻页。"),Object(l.b)("h3",{id:"head"},"head"),Object(l.b)("p",null,"head 命令用于查看纯文本的前 N 行。"),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{}),"# 查看前20行\nhead -n 20 init-setup-ks.cfg\n")),Object(l.b)("h3",{id:"tail"},"tail"),Object(l.b)("p",null,"tail 命令用于查看文本文档的后 N 行或持续刷新内容(如实时日志)。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"f"),": 查看最新的内容")),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{}),"tail -f /var/log/messages\n")),Object(l.b)("h3",{id:"tr"},"tr"),Object(l.b)("p",null,"tr 命令用于替换文本文件的字符。格式为",Object(l.b)("inlineCode",{parentName:"p"},"tr [原始字符] [目标字符]"),"。"),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-bash"}),"# 读取待处理文本，通过管道符传递给tr替换\n# 将字母替换成大写\ncat anaconda-ks.cfg | tr [a-z] [A-Z]\n")),Object(l.b)("h3",{id:"wc"},"wc"),Object(l.b)("p",null,"wc 命令用于统计指定文本的行数、字数、字节数，格式为",Object(l.b)("inlineCode",{parentName:"p"},"wc [参数] 文本"),"。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"l"),": 只显示行数。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"w"),": 只显示单词数。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"c"),": 只显示字节数。")),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"/etc/passwd"),"用于保存系统账户信息，要统计用户数，可以使用下面命令。"),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{}),"wc -l /etc/passwd\n")),Object(l.b)("h3",{id:"stat"},"stat"),Object(l.b)("p",null,"stat 命令用于查看文件的具体存储信息和时间等信息。格式为",Object(l.b)("inlineCode",{parentName:"p"},"stat 文件名"),"。"),Object(l.b)("h3",{id:"cut"},"cut"),Object(l.b)("p",null,"cut 命令用于按列提取文本字符。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"f"),": 列数。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"d"),": 设置间隔符号。")),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-bash"}),"# 提取行\nhead -n 2 /etc/passwd\n\n# 提取列，提取用户名\ncut -d: -f1 /etc/passwd\n")),Object(l.b)("h2",{id:"awk"},"awk"),Object(l.b)("p",null,"awk 用于处理文本，它依次处理文件每一行，并读取每一个字段。格式为",Object(l.b)("inlineCode",{parentName:"p"},"awk 条件 动作 文件名"),"。参数如下："),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"F"),": 指定分隔符")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"变量")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"$数字"),": 第几个字段。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"NF"),": 当前行有多少个字段。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"$NF"),": 最后一个字段。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"$(NF-1)"),": 倒数第二个字段。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"NR"),"：当前处理的第几行。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"FILENAME"),": 当前文件名。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"FS"),": 字段分隔符，默认空格和制表符。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"RS"),": 行分割符，用于分割每一行，默认是换行符。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"OFS"),": 输出字段的分隔符，用于打印时分隔字段，默认为空格。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"ORS"),": 输出记录的分隔符，用于打印时分割记录，默认为换行符。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"OFMT"),": 数字输出的格式，默认是%.6g")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"函数")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"tolower()")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"length"),": 字符串长度"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"substr()")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"sin()")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"cos()")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"sqrt()")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"rand()"),": 随机数")),Object(l.b)("p",null,"具体查看",Object(l.b)("a",a({parentName:"p"},{href:"https://www.gnu.org/software/gawk/manual/html_node/Built_002din.html#Built_002din"}),"手册")),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-bash"}),"# print是打印命令，$0表示当前行,$1,$2...表示字段\necho 'this is a test' | awk '{print $0}'\n\n# demo.txt是要处理的文件\nawk -F ',' '{print $1}' demo.txt\n\n# 条件，只输出带usr的\nawk -F ':' '/usr/ {print $1}' demo.txt\n# 输出奇数行\nawk -F ':' 'NR % 2 == 1 {print $1}' demo.txt\n# 输出第三行以后的行\nawk -F ':' 'NR >3 {print $1}' demo.txt\n\n# if语句\nawk -F ':' '{if ($1 > \"m\") print $1; else print \"---\"}' demo.txt\n")),Object(l.b)("h3",{id:"diff"},"diff"),Object(l.b)("p",null,"diff 用于比较多个文本文件的差异，格式为",Object(l.b)("inlineCode",{parentName:"p"},"diff [参数] 文件"),"。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"brief"),": 确认两个文件是否不同。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"c"),": 比较差异。")),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{}),"diff --brief a.txt b.txt\ndiff -c a.txt b.txt\n")),Object(l.b)("h3",{id:"touch"},"touch"),Object(l.b)("p",null,"touch 命令用于创建空白文件或设置文件的时间，格式为",Object(l.b)("inlineCode",{parentName:"p"},"touch [选项] [文件]"),"。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"a"),": 设置文件的读取时间(atime)。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"m"),": 设置文件的修改时间(mtime)。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"d"),": 设置文件的atime和mtime。")),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-bash"}),"# 修改文件后，将文件的时间改成修改之前的时间\nls -l a.txt\necho 2 >> a.txt\nls -l a.txt\n\n# 修改时间\ntouch -d '2019-04-05 16:34' a.txt\nls -l a.txt\n")),Object(l.b)("h3",{id:"mkdir"},"mkdir"),Object(l.b)("p",null,"mkdir 命令用于创建空白的目录，格式为",Object(l.b)("inlineCode",{parentName:"p"},"mkdir [选项] 目录"),"。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"p"),": 递归创建嵌套目录。")),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{}),"mkdir -p a/b/c\n")),Object(l.b)("h3",{id:"cp"},"cp"),Object(l.b)("p",null,"cp 命令用于复制文件或目录，格式为",Object(l.b)("inlineCode",{parentName:"p"},"cp [选项] 源文件 目标文件"),"。复制有3种情况："),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"如果目标文件是目录，则会把源文件复制到该目录中。"),Object(l.b)("li",{parentName:"ul"},"如果目标文件是普通文件，则会询问是否覆盖。"),Object(l.b)("li",{parentName:"ul"},"如果目标文件不存在，则执行正常的复制操作。")),Object(l.b)("p",null,"参数列表："),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"p"),": 保留原始文件的属性。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"d"),": 若对象为链接文件，则保留其属性。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"r"),": 递归复制(用于目录)。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"i"),": 若目标文件存在，则询问是否覆盖。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"a"),": 相当于 -pdr。")),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{}),"cp a.txt a_copy.txt\n")),Object(l.b)("h3",{id:"mv"},"mv"),Object(l.b)("p",null,"mv 命令用于剪切文件或重命名文件，格式为",Object(l.b)("inlineCode",{parentName:"p"},"mv [选项] 源文件 [目标路径|目标文件名]"),"。若在同一目录剪切，则是重命名操作。"),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{}),"mv a.txt c.txt\n")),Object(l.b)("h3",{id:"rm"},"rm"),Object(l.b)("p",null,"rm 命令用于删除文件或目录，格式为",Object(l.b)("inlineCode",{parentName:"p"},"mv [选项] 文件"),"。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"f"),": 系统默认会询问是否删除，可以加-f强制删除，不询问。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"r"),": 删除目录。")),Object(l.b)("h3",{id:"dd"},"dd"),Object(l.b)("p",null,"dd 命令用于按照指定大小和个数的数据块来复制文件或转换文件，格式为",Object(l.b)("inlineCode",{parentName:"p"},"dd [参数]"),"。linux系统中有个设备文件",Object(l.b)("inlineCode",{parentName:"p"},"/dev/zero"),"，不占用系统存储空间，却可以提供无穷无尽的数据，可以用它做为 dd 命令的输入文件，来生成指定大小的文件。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"if"),": 输入的文件名称。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"of"),": 输出的文件名称。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"bs"),": 设置每个块的大小。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"count"),": 设置要复制块的个数。")),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{}),"# 从/dev/zero取出一个560MB的数据块，然后保存成名为560_file的文件\ndd if=/dev/zero/ of=560_file count=1 bs=560M\n\n# 将linux刻录到光盘镜像\ndd if=/dev/cdrom of=RHEL-server-7.0-x86_64-linux.iso\n")),Object(l.b)("h3",{id:"file"},"file"),Object(l.b)("p",null,"file 命令用于查看文件的类型，格式为",Object(l.b)("inlineCode",{parentName:"p"},"file 文件名"),"。linux中，一切都是文件，不能单凭后缀知道文件类型，所以需要使用file命令。"),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{}),"[root@localhost ~]# file package-lock.json\npackage-lock.json: ASCII text\n")),Object(l.b)("h3",{id:"tar"},"tar"),Object(l.b)("p",null,"tar 命令用于对文件进行压缩或解压，格式为",Object(l.b)("inlineCode",{parentName:"p"},"tar [选项] [文件]"),"。linux常用的格式为.tar或.tar.gz或.tar.bz2格式。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"c"),": 创建压缩文件。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"x"),": 解开压缩文件。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"t"),": 查看压缩包内有哪些文件。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"z"),": 用 Gzip 压缩或解压。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"j"),": 用 bzip2 压缩或解压。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"v"),": 显示压缩或解压的过程。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"f"),": 目标文件名。需要放在参数的最后一位。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"p"),": 保留原始的权限与属性。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"P"),": 使用绝对路径来压缩。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"C"),": 指定解压到的目录。")),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{}),"# 压缩/etc目录到文件etc.tar.gz\ntar -czvf etc.tar.gz /etc\n\n# 解压etc.tar.gz文件到/root/etc目录\ntar -xzvf etc.tar.gz -C /root/etc\n")),Object(l.b)("h3",{id:"grep"},"grep"),Object(l.b)("p",null,"grep 命令用于在文本中执行关键词搜索，并显示匹配的结果，格式为",Object(l.b)("inlineCode",{parentName:"p"},"grep [选项] [文件]"),"。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"b"),": 将可执行文件(binary)当作文本文件(text)搜索。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"c"),": 仅显示找到的行数。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"i"),": 忽略大小写。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"n"),": 显示行号。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"v"),": 反向选择，即列出没有关键词的行。")),Object(l.b)("p",null,"linux系统中，",Object(l.b)("inlineCode",{parentName:"p"},"/etc/passwd"),"文件保存着所有用户的信息，一旦用户的终端登陆被设置为",Object(l.b)("inlineCode",{parentName:"p"},"/sbin/nologin"),"，将不再允许登陆。可以用grep来搜索不允许登陆的用户的信息。"),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-bash"}),"grep /sbin/nologin /etc/passwd\n")),Object(l.b)("h3",{id:"find"},"find"),Object(l.b)("p",null,"find 命令用于按照指定条件来查找文件，格式为",Object(l.b)("inlineCode",{parentName:"p"},"find [查找路径] 寻找条件 操作"),"。寻找条件可以是文件名、大小、修改时间、权限等信息。"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"name"),": 匹配名称。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"perm"),": 匹配权限。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"user"),": 匹配所有者。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"group"),": 匹配所有组。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"mtime -n +n"),": 匹配修改内容的时间，-n表示n天内，+n表示n天以前。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"atime -n +n"),": 匹配访问文件的时间，-n表示n天内，+n表示n天以前。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"ctime -n +n"),": 匹配修改文件权限的时间，-n表示n天内，+n表示n天以前。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"nouser"),": 匹配无所有者的文件。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"nogroup"),": 匹配无所有组的文件。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"newer f1 !f2"),": 匹配比文件f1新但比f2旧的文件。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"--type b/d/c/p/l/f"),": 匹配文件类型(后面的字母参数依次是块设备、目录、字符设备、管道、链接文件、文本文件)。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"size"),": 匹配文件的大小，+50KB为查找超过50KB的文件，-50KB表示小于50KB。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"prune"),": 忽略某个目录。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"exec ... {} \\"),": 后面可跟用于进一步处理搜索结果的命令。"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"o")," 或者")),Object(l.b)("p",null,"根据文件系统层次标准(Filesystem Hierarchy Standard)协议，Linux系统中的配置文件会保存到",Object(l.b)("inlineCode",{parentName:"p"},"/etc"),"目录。如果要获取所有以host开头的文件列表，可以执行如下命令："),Object(l.b)("pre",null,Object(l.b)("code",a({parentName:"pre"},{className:"language-bash"}),'# 搜索文件名以host开头的文件\nfind /etc -name "host*" -print\n\n# 搜索权限中包含SUID权限的文件\nfind / -perm -4000 -print\n\n# 找出归banli用户的文件并复制到/home目录\nfind / -user banli -exec cp -a {} /home \\\n\n# 查找当前目录的yarn.lock文件，忽略node_modules目录\nfind . -path  "./node_modules" -prune -o -type f -name \'yarn.lock\' -print\n')),Object(l.b)("p",null,"在 RHEL 7 系统及众多的 Linux 系统中，最常使用的 Shell 终端是Bash(Bourne-Again SHell)解释器。"),Object(l.b)("h2",{id:"学习资料"},"学习资料"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"linux就该这样学"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",a({parentName:"li"},{href:"http://www.ruanyifeng.com/blog/2018/11/awk.html"}),"awk 入门教程")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",a({parentName:"li"},{href:"https://www.cnblogs.com/findyou/p/5760970.html"}),"mail配置"))))}O.isMDXComponent=!0}}]);
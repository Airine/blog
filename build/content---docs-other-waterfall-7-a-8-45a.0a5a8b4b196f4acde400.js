(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{105:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",function(){return i}),t.d(n,"rightToc",function(){return o}),t.d(n,"default",function(){return u});t(0);var r=t(293);function a(){return(a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i={title:"瀑布流实现原理"},o=[{value:"实现原理",id:"实现原理",children:[]},{value:"具体实现例子",id:"具体实现例子",children:[{value:"vue实现瀑布流",id:"vue实现瀑布流",children:[]}]}],c={rightToc:o},p="wrapper";function u(e){var n=e.components,t=l(e,["components"]);return Object(r.b)(p,a({},c,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"实现原理"},"实现原理"),Object(r.b)("p",null,"如果每一个元素的高度一致，那么只需要使用 ",Object(r.b)("inlineCode",{parentName:"p"},"float")," 或者 ",Object(r.b)("inlineCode",{parentName:"p"},"flex")," 从上往下排列即可。"),Object(r.b)("p",null,"如果元素的高度不一致，则思路如下：\n1. 规定瀑布流的列数为 n。\n2. 遍历元素，将元素插入到高度最低的那一列。"),Object(r.b)("h2",{id:"具体实现例子"},"具体实现例子"),Object(r.b)("h3",{id:"vue实现瀑布流"},"vue实现瀑布流"),Object(r.b)("p",null,"思路如下："),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"首先规定瀑布流分成 n 列。"),Object(r.b)("li",{parentName:"ol"},"根据 n 列生成 lists：[","[第1列的数据]",",","[第2列的数据]",",","[...]","] 。"),Object(r.b)("li",{parentName:"ol"},"请求数据，循环数据，并将每一个数据添加到 lists 的高度最低的那一列中。")),Object(r.b)("p",null,"简要代码如下："),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-html"}),'// html结构\n<div class="waterfall">\n    <div class="cols" v-for="list in lists">\n        <div v-for="l in list"></div>\n    </div>\n</div>\n\n// 样式\n<style>\n.waterfall{\n    display: flex;\n}\n.waterfall .cols{\n    flex: 1;\n}\n</style>\n\n// js\n<script>\nnew Vue({\n    data(){\n        return {\n            cols: 3,           // 瀑布流的列数\n            dataList: [],      // 瀑布流总数据\n            lists: [[],[],[]], // 根据cols动态生成\n        }\n    }  \n})\n<\/script>\n')))}u.isMDXComponent=!0},293:function(e,n,t){"use strict";t.d(n,"a",function(){return o}),t.d(n,"b",function(){return s});var r=t(0),a=t.n(r),l=a.a.createContext({}),i=function(e){var n=a.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},o=function(e){var n=i(e.components);return a.a.createElement(l.Provider,{value:n},e.children)};var c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},u=function(e){var n=e.components,t=e.mdxType,r=e.originalType,l=e.parentName,o=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===n.indexOf(r)&&(t[r]=e[r]);return t}(e,["components","mdxType","originalType","parentName"]),c=i(n),u=t,s=c[l+"."+u]||c[u]||p[u]||r;return n?a.a.createElement(s,Object.assign({},o,{components:n})):a.a.createElement(s,o)};function s(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=u;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[c]="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=t[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);